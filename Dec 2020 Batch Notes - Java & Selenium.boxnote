{"head":11234,"savepointDataFileId":"771815933586","savepointListObject":{"9":{"revisionId":9,"timestamp":1612344156807,"state":"saved","type":"session","diffAuthorList":{"9832037334":true}},"500":{"revisionId":500,"timestamp":1612365738806,"state":"saved","type":"periodic","diffAuthorList":{"14678150293":true}},"953":{"revisionId":953,"timestamp":1612366425767,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"955":{"revisionId":955,"timestamp":1612388098593,"state":"saved","type":"session","diffAuthorList":{"14737610926":true}},"1000":{"revisionId":1000,"timestamp":1612400422323,"state":"saved","type":"periodic","diffAuthorList":{"14680240345":true}},"1048":{"revisionId":1048,"timestamp":1612400568855,"state":"saved","type":"session","diffAuthorList":{"14680240345":true}},"1452":{"revisionId":1452,"timestamp":1612402668321,"state":"saved","type":"session","diffAuthorList":{"14680240345":true}},"1493":{"revisionId":1493,"timestamp":1612403289971,"state":"saved","type":"session","diffAuthorList":{"14680240345":true}},"1499":{"revisionId":1499,"timestamp":1612408041430,"state":"saved","type":"session","diffAuthorList":{"14680240345":true}},"1500":{"revisionId":1500,"timestamp":1612492646104,"state":"saved","type":"periodic","diffAuthorList":{"14678150293":true}},"1725":{"revisionId":1725,"timestamp":1612493042913,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"2000":{"revisionId":2000,"timestamp":1612545818271,"state":"saved","type":"periodic","diffAuthorList":{"14678150293":true}},"2110":{"revisionId":2110,"timestamp":1612546027680,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"2112":{"revisionId":2112,"timestamp":1612557562911,"state":"saved","type":"session","diffAuthorList":{"14680240345":true}},"2500":{"revisionId":2500,"timestamp":1612602512086,"state":"saved","type":"periodic","diffAuthorList":{"14681137927":true}},"2874":{"revisionId":2874,"timestamp":1612603333700,"state":"saved","type":"session","diffAuthorList":{"14681137927":true}},"3000":{"revisionId":3000,"timestamp":1612735806863,"state":"saved","type":"periodic","diffAuthorList":{"14680240345":true}},"3055":{"revisionId":3055,"timestamp":1612736095846,"state":"saved","type":"session","diffAuthorList":{"14680240345":true}},"3067":{"revisionId":3067,"timestamp":1612738385727,"state":"saved","type":"session","diffAuthorList":{"14680240345":true}},"3401":{"revisionId":3401,"timestamp":1612790751260,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"3500":{"revisionId":3500,"timestamp":1612798666887,"state":"saved","type":"periodic","diffAuthorList":{"14678150293":true}},"3766":{"revisionId":3766,"timestamp":1612799278311,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"3935":{"revisionId":3935,"timestamp":1612800258354,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"4000":{"revisionId":4000,"timestamp":1612800678869,"state":"saved","type":"periodic","diffAuthorList":{"14678150293":true}},"4060":{"revisionId":4060,"timestamp":1612800852907,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"4070":{"revisionId":4070,"timestamp":1612815249287,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"4071":{"revisionId":4071,"timestamp":1612823922921,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"4100":{"revisionId":4100,"timestamp":1612824747962,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"4500":{"revisionId":4500,"timestamp":1612882314104,"state":"saved","type":"periodic","diffAuthorList":{"14678150293":true}},"4551":{"revisionId":4551,"timestamp":1612882359163,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"4561":{"revisionId":4561,"timestamp":1612882789436,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"4681":{"revisionId":4681,"timestamp":1612884179946,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"4768":{"revisionId":4768,"timestamp":1612887624922,"state":"saved","type":"session","diffAuthorList":{"14674322720":true}},"4783":{"revisionId":4783,"timestamp":1612923171369,"state":"saved","type":"session","diffAuthorList":{"14680240345":true}},"4949":{"revisionId":4949,"timestamp":1612929230248,"state":"saved","type":"session","diffAuthorList":{"14680240345":true}},"4963":{"revisionId":4963,"timestamp":1612929978244,"state":"saved","type":"session","diffAuthorList":{"14680240345":true}},"4992":{"revisionId":4992,"timestamp":1612933578345,"state":"saved","type":"session","diffAuthorList":{"14680240345":true}},"4997":{"revisionId":4997,"timestamp":1612935158387,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"5000":{"revisionId":5000,"timestamp":1612958245429,"state":"saved","type":"periodic","diffAuthorList":{"9832037334":true}},"5015":{"revisionId":5015,"timestamp":1612958278938,"state":"saved","type":"session","diffAuthorList":{"9832037334":true}},"5437":{"revisionId":5437,"timestamp":1613414608652,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"5440":{"revisionId":5440,"timestamp":1613449192301,"state":"saved","type":"session","diffAuthorList":{"14674322720":true}},"5441":{"revisionId":5441,"timestamp":1613479408504,"state":"saved","type":"session","diffAuthorList":{"9832037334":true}},"5442":{"revisionId":5442,"timestamp":1613482621326,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"5500":{"revisionId":5500,"timestamp":1613490173634,"state":"saved","type":"periodic","diffAuthorList":{"14678150293":true}},"5959":{"revisionId":5959,"timestamp":1613490726799,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"5993":{"revisionId":5993,"timestamp":1613494884079,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"6000":{"revisionId":6000,"timestamp":1613576839381,"state":"saved","type":"periodic","diffAuthorList":{"14678150293":true}},"6479":{"revisionId":6479,"timestamp":1613577535428,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"6500":{"revisionId":6500,"timestamp":1613581698120,"state":"saved","type":"periodic","diffAuthorList":{"14678150293":true}},"6516":{"revisionId":6516,"timestamp":1613581710332,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"6661":{"revisionId":6661,"timestamp":1613614883029,"state":"saved","type":"session","diffAuthorList":{"14674322720":true}},"6665":{"revisionId":6665,"timestamp":1613775874224,"state":"saved","type":"session","diffAuthorList":{"14678198954":true}},"6681":{"revisionId":6681,"timestamp":1613900263629,"state":"saved","type":"session","diffAuthorList":{"14680240345":true}},"7000":{"revisionId":7000,"timestamp":1613904734046,"state":"saved","type":"periodic","diffAuthorList":{"14680240345":true}},"7051":{"revisionId":7051,"timestamp":1613904870490,"state":"saved","type":"session","diffAuthorList":{"14680240345":true}},"7060":{"revisionId":7060,"timestamp":1613906895757,"state":"saved","type":"session","diffAuthorList":{"14680240345":true}},"7063":{"revisionId":7063,"timestamp":1613971122360,"state":"saved","type":"session","diffAuthorList":{"14680240345":true}},"7065":{"revisionId":7065,"timestamp":1614139967813,"state":"saved","type":"session","diffAuthorList":{"14733772863":true}},"7500":{"revisionId":7500,"timestamp":1614220540265,"state":"saved","type":"periodic","diffAuthorList":{"14678150293":true}},"7647":{"revisionId":7647,"timestamp":1614220732245,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"8000":{"revisionId":8000,"timestamp":1614225847850,"state":"saved","type":"periodic","diffAuthorList":{"14678150293":true}},"8120":{"revisionId":8120,"timestamp":1614226032971,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"8139":{"revisionId":8139,"timestamp":1614227768422,"state":"saved","type":"session","diffAuthorList":{"9832037334":true}},"8141":{"revisionId":8141,"timestamp":1614232808575,"state":"saved","type":"session","diffAuthorList":{"10786617004":true}},"8266":{"revisionId":8266,"timestamp":1614425360538,"state":"saved","type":"session","diffAuthorList":{"14680240345":true}},"8267":{"revisionId":8267,"timestamp":1614426347215,"state":"saved","type":"session","diffAuthorList":{"14680240345":true}},"8500":{"revisionId":8500,"timestamp":1614427125281,"state":"saved","type":"periodic","diffAuthorList":{"14680240345":true}},"8518":{"revisionId":8518,"timestamp":1614427138826,"state":"saved","type":"session","diffAuthorList":{"14680240345":true}},"8632":{"revisionId":8632,"timestamp":1614441174707,"state":"saved","type":"session","diffAuthorList":{"14680240345":true}},"8660":{"revisionId":8660,"timestamp":1614501200435,"state":"saved","type":"session","diffAuthorList":{"14680240345":true}},"8679":{"revisionId":8679,"timestamp":1615359610553,"state":"saved","type":"session","diffAuthorList":{"9832037334":true}},"9000":{"revisionId":9000,"timestamp":1615470896352,"state":"saved","type":"periodic","diffAuthorList":{"14678150293":true}},"9102":{"revisionId":9102,"timestamp":1615470978739,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"9326":{"revisionId":9326,"timestamp":1615512417076,"state":"saved","type":"session","diffAuthorList":{"14681137927":true}},"9328":{"revisionId":9328,"timestamp":1615516112049,"state":"saved","type":"session","diffAuthorList":{"9832037334":true}},"9500":{"revisionId":9500,"timestamp":1615655855135,"state":"saved","type":"periodic","diffAuthorList":{"14678150293":true}},"10000":{"revisionId":10000,"timestamp":1615656469408,"state":"saved","type":"periodic","diffAuthorList":{"14678150293":true}},"10400":{"revisionId":10400,"timestamp":1615656906164,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"10500":{"revisionId":10500,"timestamp":1615657462377,"state":"saved","type":"periodic","diffAuthorList":{"14678150293":true}},"11000":{"revisionId":11000,"timestamp":1615658402483,"state":"saved","type":"periodic","diffAuthorList":{"14678150293":true}},"11038":{"revisionId":11038,"timestamp":1615658448890,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"11039":{"revisionId":11039,"timestamp":1615694629172,"state":"saved","type":"session","diffAuthorList":{"14674322720":true}},"11040":{"revisionId":11040,"timestamp":1615695218400,"state":"saved","type":"session","diffAuthorList":{"14697573979":true}},"11042":{"revisionId":11042,"timestamp":1615698102104,"state":"saved","type":"session","diffAuthorList":{"14674322720":true}},"11047":{"revisionId":11047,"timestamp":1615751993678,"state":"saved","type":"session","diffAuthorList":{"14680925453":true}},"11075":{"revisionId":11075,"timestamp":1615820032073,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"11077":{"revisionId":11077,"timestamp":1615972912975,"state":"saved","type":"session","diffAuthorList":{"14674956271":true}},"11081":{"revisionId":11081,"timestamp":1616431265532,"state":"saved","type":"session","diffAuthorList":{"14678990236":true}},"11085":{"revisionId":11085,"timestamp":1616653747468,"state":"saved","type":"session","diffAuthorList":{"9832037334":true}},"11094":{"revisionId":11094,"timestamp":1617035669084,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"11114":{"revisionId":11114,"timestamp":1617257093762,"state":"saved","type":"session","diffAuthorList":{"14682839103":true}},"11117":{"revisionId":11117,"timestamp":1617343277952,"state":"saved","type":"session","diffAuthorList":{"14682839103":true}},"11129":{"revisionId":11129,"timestamp":1617377366907,"state":"pending","type":"session","diffAuthorList":{"9832037334":true}},"11130":{"revisionId":11130,"timestamp":1618001866793,"state":"saved","type":"session","diffAuthorList":{"14689243297":true}},"11136":{"revisionId":11136,"timestamp":1619112298437,"state":"saved","type":"session","diffAuthorList":{"14681574357":true}},"11137":{"revisionId":11137,"timestamp":1620972157758,"state":"saved","type":"session","diffAuthorList":{"14680067505":true}},"11138":{"revisionId":11138,"timestamp":1621097833734,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"11140":{"revisionId":11140,"timestamp":1621353819732,"state":"saved","type":"session","diffAuthorList":{"14680925453":true}},"11145":{"revisionId":11145,"timestamp":1621459245684,"state":"saved","type":"session","diffAuthorList":{"14689243297":true}},"11185":{"revisionId":11185,"timestamp":1621609766654,"state":"saved","type":"session","diffAuthorList":{"14678150293":true}},"11187":{"revisionId":11187,"timestamp":1621774982990,"state":"saved","type":"session","diffAuthorList":{"14678875922":true}},"11192":{"revisionId":11192,"timestamp":1621822545014,"state":"saved","type":"session","diffAuthorList":{"14735372304":true}},"11193":{"revisionId":11193,"timestamp":1622432525129,"state":"saved","type":"session","diffAuthorList":{"14733772863":true}},"11194":{"revisionId":11194,"timestamp":1623246626442,"state":"saved","type":"session","diffAuthorList":{"14674322720":true}},"11198":{"revisionId":11198,"timestamp":1624183635244,"state":"saved","type":"session","diffAuthorList":{"14677931769":true}},"11199":{"revisionId":11199,"timestamp":1624475317396,"state":"pending","type":"session","diffAuthorList":{"14678990236":true}},"11200":{"revisionId":11200,"timestamp":1624551810782,"state":"saved","type":"session","diffAuthorList":{"14678990236":true}},"11202":{"revisionId":11202,"timestamp":1630990657339,"state":"pending","type":"session","diffAuthorList":{"14733772863":true}},"11203":{"revisionId":11203,"timestamp":1632283471804,"state":"saved","type":"session","diffAuthorList":{"14733772863":true}},"11215":{"revisionId":11215,"timestamp":1633706879350,"state":"saved","type":"session","diffAuthorList":{"9832037334":true}},"11232":{"revisionId":11232,"timestamp":1633981926845,"state":"saved","type":"session","diffAuthorList":{"14711604389":true}},"11233":{"revisionId":11233,"timestamp":1641185972552,"state":"saved","type":"session","diffAuthorList":{"14678673322":true}}},"lastEditTimestamp":1645770758901,"diffChangeset":"Z:12h2<p|7l=80s=2h*ba*6w-q*ba*6*7+1$-","invalidDiffChangeset":false,"authorList":{"9832037334":{"authorName":"Naveen Khunteta","authorCustomAvatarUrl":"/users/9832037334/avatar","lastAccessTime":1616426358936},"14681137927":{"authorName":"Sonam Arora","authorCustomAvatarUrl":"/users/14681137927/avatar","lastAccessTime":1615516560304},"14675687309":{"authorName":"Harini","authorCustomAvatarUrl":"/users/14675687309/avatar","lastAccessTime":1615656321432},"10749052870":{"authorName":"Arun Kumar B","authorCustomAvatarUrl":"/users/10749052870/avatar","lastAccessTime":1612924231168},"14674565201":{"authorName":"Murali","authorCustomAvatarUrl":"/users/14674565201/avatar","lastAccessTime":1613448225089},"14674938693":{"authorName":"Vaidehi Bante","authorCustomAvatarUrl":"/users/14674938693/avatar","lastAccessTime":1616396841964},"14674996502":{"authorName":"Ratna Kumari Surapaneni","authorCustomAvatarUrl":"/users/14674996502/avatar","lastAccessTime":1615429837257},"undefined":{"authorCustomAvatarUrl":"/users/undefined/avatar","lastAccessTime":1617255583379},"14674711143":{"authorName":"Tasfiq Kalam","authorCustomAvatarUrl":"/users/14674711143/avatar","lastAccessTime":1612345913587},"14674745400":{"authorName":"kareti dinakar","authorCustomAvatarUrl":"/users/14674745400/avatar","lastAccessTime":1615553866096},"14675731724":{"authorName":"vivek.karambelkar20@gmail.com","authorCustomAvatarUrl":"/users/14675731724/avatar","lastAccessTime":1615516150151},"14735372304":{"authorName":"Deepali Kulkarni","authorCustomAvatarUrl":"/users/14735372304/avatar","lastAccessTime":1621821090002},"14674956271":{"authorName":"Swapna Maddali","authorCustomAvatarUrl":"/users/14674956271/avatar","lastAccessTime":1615970595866},"14675882502":{"authorName":"Dinesh Kumar","authorCustomAvatarUrl":"/users/14675882502/avatar","lastAccessTime":1612492791212},"14674580801":{"authorName":"Sowjanya","authorCustomAvatarUrl":"/users/14674580801/avatar","lastAccessTime":1612929445966},"14749820962":{"authorName":"Mohammed Rizwan","authorCustomAvatarUrl":"/users/14749820962/avatar","lastAccessTime":1612375770969},"14693938464":{"authorName":"Samarth Jain","authorCustomAvatarUrl":"/users/14693938464/avatar","lastAccessTime":1615693400545},"14678875922":{"authorName":"Megha Rajput","authorCustomAvatarUrl":"/users/14678875922/avatar","lastAccessTime":1621820472872},"14711604389":{"authorName":"Meyyappan Karunanithi","authorCustomAvatarUrl":"/users/14711604389/avatar","lastAccessTime":1612354531159},"14689066144":{"authorName":"Ashish Shukla","authorCustomAvatarUrl":"/users/14689066144/avatar","lastAccessTime":1612358028460},"14680925453":{"authorName":"Raviraj Sharma","authorCustomAvatarUrl":"/users/14680925453/avatar","lastAccessTime":1645770060123},"14678198954":{"authorName":"Harshita Bisht","authorCustomAvatarUrl":"/users/14678198954/avatar","lastAccessTime":1616387490538},"14674692769":{"authorName":"krishna","authorCustomAvatarUrl":"/users/14674692769/avatar","lastAccessTime":1614220612336},"14678714130":{"authorName":"Dipsy Singh","authorCustomAvatarUrl":"/users/14678714130/avatar","lastAccessTime":1612361433022},"14677298328":{"authorName":"Shashank Pandey","authorCustomAvatarUrl":"/users/14677298328/avatar","lastAccessTime":1613493086651},"14674690952":{"authorName":"Roopa Ravi","authorCustomAvatarUrl":"/users/14674690952/avatar","lastAccessTime":1612363811282},"14683070082":{"authorName":"Asiya","authorCustomAvatarUrl":"/users/14683070082/avatar","lastAccessTime":1615606484283},"14678150293":{"authorName":"Neelam Patel","authorCustomAvatarUrl":"/users/14678150293/avatar","lastAccessTime":1615656913202},"14674322720":{"authorName":"Namita Sujay Ahire","authorCustomAvatarUrl":"/users/14674322720/avatar","lastAccessTime":1615568011491},"13794444429":{"authorName":"Pratik","authorCustomAvatarUrl":"/users/13794444429/avatar","lastAccessTime":1614219365036},"14680142552":{"authorName":"Ramya ","authorCustomAvatarUrl":"/users/14680142552/avatar","lastAccessTime":1612492961081},"14676176153":{"authorName":"Abhishek Ashok Dingre","authorCustomAvatarUrl":"/users/14676176153/avatar","lastAccessTime":1612367256131},"14682636102":{"authorName":"Sujanya","authorCustomAvatarUrl":"/users/14682636102/avatar","lastAccessTime":1613442676485},"14677931769":{"authorName":"Sonali Padhi","authorCustomAvatarUrl":"/users/14677931769/avatar","lastAccessTime":1615653458328},"14680213409":{"authorName":"Manjula Busappagari","authorCustomAvatarUrl":"/users/14680213409/avatar","lastAccessTime":1615503948466},"14695091135":{"authorName":"Sushmita Chandra","authorCustomAvatarUrl":"/users/14695091135/avatar","lastAccessTime":1615536644100},"14679156895":{"authorName":"SWAPNIL CHAMATE","authorCustomAvatarUrl":"/users/14679156895/avatar","lastAccessTime":1617360474355},"14689300992":{"authorName":"Abhiroop Sengupta","authorCustomAvatarUrl":"/users/14689300992/avatar","lastAccessTime":1612492885055},"14680240345":{"authorName":"Durjan7838202691","authorCustomAvatarUrl":"/users/14680240345/avatar","lastAccessTime":1614440899684},"14679163057":{"authorName":"Ashish","authorCustomAvatarUrl":"/users/14679163057/avatar","lastAccessTime":1617034189381},"14675412112":{"authorName":"Aysun","authorCustomAvatarUrl":"/users/14675412112/avatar","lastAccessTime":1615497063597},"14678990236":{"authorName":"Sushma","authorCustomAvatarUrl":"/users/14678990236/avatar","lastAccessTime":1616430973347},"14737610926":{"authorName":"Harinder Kaur","authorCustomAvatarUrl":"/users/14737610926/avatar","lastAccessTime":1614220563923},"14674403812":{"authorName":"Ganesh","authorCustomAvatarUrl":"/users/14674403812/avatar","lastAccessTime":1614220559251},"14682839103":{"authorName":"Nidhi Priya","authorCustomAvatarUrl":"/users/14682839103/avatar","lastAccessTime":1615687023373},"14682752130":{"authorName":"Badar Ehsan","authorCustomAvatarUrl":"/users/14682752130/avatar","lastAccessTime":1614225279672},"14684185830":{"authorName":"Jitesh","authorCustomAvatarUrl":"/users/14684185830/avatar","lastAccessTime":1615577345532},"14679434941":{"authorName":"Fabi","authorCustomAvatarUrl":"/users/14679434941/avatar","lastAccessTime":1614441175741},"14683426370":{"authorName":"Anjum Shaikh","authorCustomAvatarUrl":"/users/14683426370/avatar","lastAccessTime":1613613923606},"10254310691":{"authorName":"Susrutha ","authorCustomAvatarUrl":"/users/10254310691/avatar","lastAccessTime":1613597755970},"14733772863":{"authorName":"Sandhya","authorCustomAvatarUrl":"/users/14733772863/avatar","lastAccessTime":1612924524875},"14678673322":{"authorName":"avseqskya@gmail.com","authorCustomAvatarUrl":"/users/14678673322/avatar","lastAccessTime":1612492730395},"14683539283":{"authorName":"Bhagyashree","authorCustomAvatarUrl":"/users/14683539283/avatar","lastAccessTime":1612492756230},"14676852328":{"authorName":"neha.khurana25@gmail.com","authorCustomAvatarUrl":"/users/14676852328/avatar","lastAccessTime":1613442687704},"14674197006":{"authorName":"Nida Ausaf","authorCustomAvatarUrl":"/users/14674197006/avatar","lastAccessTime":1612492885473},"14675581907":{"authorName":"Anup Sahu","authorCustomAvatarUrl":"/users/14675581907/avatar","lastAccessTime":1615690250667},"14677826067":{"authorName":"KAMYA  GUPTA","authorCustomAvatarUrl":"/users/14677826067/avatar","lastAccessTime":1615514696412},"14674569908":{"authorName":"Gaurav Burhade","authorCustomAvatarUrl":"/users/14674569908/avatar","lastAccessTime":1617246337618},"10786617004":{"authorName":"Jaslin Kaur","authorCustomAvatarUrl":"/users/10786617004/avatar","lastAccessTime":1617359417430},"14674238912":{"authorName":"SUNIL VIJAYSING PATIL","authorCustomAvatarUrl":"/users/14674238912/avatar","lastAccessTime":1617363113119},"14679073012":{"authorName":"Aananthy Venkatraman","authorCustomAvatarUrl":"/users/14679073012/avatar","lastAccessTime":1614134268918},"14677801423":{"authorName":"AMAN PARHAR","authorCustomAvatarUrl":"/users/14677801423/avatar","lastAccessTime":1614139894485},"14678949908":{"authorName":"Ram Kumar","authorCustomAvatarUrl":"/users/14678949908/avatar","lastAccessTime":1614220151577},"14677683786":{"authorName":"Sejal Patel","authorCustomAvatarUrl":"/users/14677683786/avatar","lastAccessTime":1617368746784},"14674726696":{"authorName":"Veda","authorCustomAvatarUrl":"/users/14674726696/avatar","lastAccessTime":1614220871165},"14679058845":{"authorName":"Sunita Rav","authorCustomAvatarUrl":"/users/14679058845/avatar","lastAccessTime":1615690868575},"14674400528":{"authorName":"Veena Kamalanathan","authorCustomAvatarUrl":"/users/14674400528/avatar","lastAccessTime":1614438510553},"14711299867":{"authorName":"shivender339@gmail.com","authorCustomAvatarUrl":"/users/14711299867/avatar","lastAccessTime":1615429455324},"14689996038":{"authorName":"Praiksha","authorCustomAvatarUrl":"/users/14689996038/avatar","lastAccessTime":1617376617783},"14675369407":{"authorName":"Md SAYED","authorCustomAvatarUrl":"/users/14675369407/avatar","lastAccessTime":1615601243702},"14689243297":{"authorName":"Sujitha Ande","authorCustomAvatarUrl":"/users/14689243297/avatar","lastAccessTime":1616648089236},"14681574357":{"authorName":"Sarath Malappurath","authorCustomAvatarUrl":"/users/14681574357/avatar","lastAccessTime":1615689526363},"14697573979":{"authorName":"ratnakishore nadella","authorCustomAvatarUrl":"/users/14697573979/avatar","lastAccessTime":1615695290401},"14687055712":{"authorName":"SUBRAHMANYA ADIGA","authorCustomAvatarUrl":"/users/14687055712/avatar","lastAccessTime":1616400767556},"14680067505":{"authorName":"Shobha","authorCustomAvatarUrl":"/users/14680067505/avatar"},"17383113957":{"authorName":"Anshita Bhasin","authorCustomAvatarUrl":"/users/17383113957/avatar","lastAccessTime":1633699607784}},"diffAuthorList":{"14680925453":true},"shouldCreateSavepointBeforeApplyingNextRevision":false,"firstKeyRevision":5,"atext":{"text":"                  \n Short Cut key:\ncontrol+shift+F\nformatting\n@Neelam\n select ctrl+/\n\nselect and ctrl+shift+/\nfor comment //\n\nfor comment/*neelam*/\n@Neelam\nctrl+space\n\nright click -source\nfor constructor to choose\nsystem.out.println\nto generate constructor\n@Neelam\nctrl+shift+o\nto import packages\n@Neelam\nfunction f6 \nto execute debug step\n@Neelam\n/** enter\nto add documentation for customized method\n*that description will reflect when we moose hover the method(when it is called)\n@Neelam\nClass and Objects:\n\nTopic Name        \nImportant Notes       \nWritten By\nObject\n*Object is an instance of a class.\nCar is a class having different properties: name, color, price etc..\n*With this Car class, multiple Objects can be created like Sedan, SUV etc..\n\n@NaveenAutomationLabs\nObject Creation\n*In order to create the Object, we need to use new keyword.\n*Ex: Car obj = new Car();\n*Car - Class Name\n*obj - Object Reference Name (Not the Object)\n*new Car() - is the Object\nNote: Object is always created inside the Heap Memory.\n@NaveenAutomationLabs\n\n\nGarbage Collector:\n\n\n\nTopic Name\nImportant Notes       \nWritten By\nGarbage Collector\nstaticPurpose of GC is to make some Space in Heap memory .It destroy those objects which don't have reference and initialized by null.\n@sowjanya\n\nWe can use GC  manually, to use this code System.gc().But it is not preferable JVM will take care of that.\n@sowjanya\n\n\n\n\nx\nStatic Keyword:\n\n\n\nTopic Name\nImportant Notes\nWritten By\nStatic\n*Static is keyword in java. Usually keywords start with small letters. Static variable and static methods we can call them with class name only its name also. Static will store in CMA (common memory allocation).It is also called Metaspace.\n*After JDK 1.8 CMA is known as permanent generation or dynamic memory \n*We can overload static method. But we can't override static methods. \n*Main method also Static in nature.It can be overloaded.\n@sowjanya\n\n5. JVM will look for the exact signature of the main method\n@Neelam\n\nSummary -Normally a class member must be accessed only in conjunction with an object of its class. However it is possible to create a member that can be used by itself, without reference to a specific instance. To create such a member ,precede its declaration with keyword static. When a member is declared static, it can be accessed before any objects of its class are created, and without reference to any object. Example main() is declared as static because it must be called before any object exist.\nStatic variable- When objects of its class are declared no copy of static variable is made. Instead , all instances of the class share the same static variable.\nStatic Method - they can only call other static methods. They must access static data only. They cannot refer to this or super in any way.\n@Neha Chadha\n\n\nInheritance:\nVideo Link: https://naveenautomationlabs.app.box.com/file/763229275519\n\n\n\n\nImportant Notes\nWritten By\n\n\n\n\n*Child can only inherit from one parent and/or grant parent. Multiple parents are not allowed in java, we can have only one parent. Sibling cannot inherit properties from each other.\n*Multi level inheritance is allowed and there is no limit for this. But multiple inheritance(Diamond Problem) is not allowed\n*Overriding concept explained in method overriding section.\n*Top casting: Is allowed when child class ref variable tries to access the parent class methods and properties. Only the overridden method can be accessed by the parent class reference variable\n*Down casting: During compile time, Parent class object cannot be referred by child class ref variable. We are changing the state of the object and trying to fit this by typecasting the big box into small box. Down casting is allowed at the compile time but it will throw exception at Run time(class cast Exception)\n*Reference type check is (the kind of security check) that will only allow the reference of the child class object to access parent class method/variables. But the parent object cannot access the child class object if the same property of parent is not overridden in child class.\n*Class to class inheritance uses extends keyword\n*final keyword: To declare a constant value for a variable using final keyword.\n*Classes or methods or variables can be defined as final. \n*When a variable/method is declared with final keyword, this cannot be overridden by child variables. final keyword is written to prevent/avoid method overriding . May be they want to define certain rules with final keyword.\n@Meyyappan\n\n\n\n\n*Multiple Inheritance is not allowed in Java (from class to class) - i.e. A class can not have multiple parent classes - This is also called Diamond Problem in Java.\n*Note: Diamond problem can be solved by Interface in Java (Multiple Inheritance can be achieved by Interface. A class can implement multiple interfaces)\n*Final class can not be a super class i.e it can not have a child class.\n*Final method can not be overridden in Java.\n*Final keyword is also used to create constants in Java i.e. final variable value can not be changed.\n@NaveenAutomationLabs\n\n1.final is keyword in java. If we declare variables with final it will become constant .if we declare  class with final we cant  inherit it. if we declare with method we can't override it.  final means final. we can't change it\n@sowjanya\n\n*When child  class try to access inheritance properties from more than one parent, then java creates a problem, this problem is called as DIAMOND problem\n*Multiple Inheritance (Inherit from multiple classes) in the form of classes is not allowed —it created diamond problem\n*Multilevel inheritance is allowed —no limits for the levels\n*Child class is also called as Sub Class\n*Parent Class is also called as Super Class\n*Best example to remember for Down Casting are\n       -Maruti—BMW\n        -Trying to fit big box into small box\n7. A single class can have multiple Interfaces and it can inherit the\n     properties from more than interface, this concept is called as multiple   \n      inheritance.\n      Multiple inheritance in the form of class and interface is allowed in the java\n\n@Deepali\n\n\n\n\nInterface: \nVideo Link: https://naveenautomationlabs.app.box.com/file/763723737738\nTopic Name\nImportant Notes\nWritten By\nInterface\n*Can not create the Object of Interface\n*Only Method Prototype (Method declaration) is allowed in Interface\n*Interface vars are static and final by default, can be access by Interface name. You have to initialize variable at the time of declaration \n\n@NaveenAutomationLabs\nInterface\n*can achieve 100% Abstraction by interface\n(as interface can not have non static methods )\n@Neelam\nInterface\n*Selenium we do top/upcasting to achieve Cross Browser testing\nWebDriver driver=new Chrome Driver();\n@Neelam\nInterface\n*Class implements Interface\n* Interface extends Interface\n* Interface cannot extend/implement a class it should extend only an interface\n@Harini\nInterface\n*Should have Method body for static methods\n*Abstract Method cannot be static and it can not have body\n@Aananthy\nInterface\n- Interfaces cannot have constructors( Bcz we can’t not create object of interface)\n- interface cannot be final (Bcz we need to override the method)and compilation error will be thrown, only Public and Abstract are allowed\n@vivek K\nInterface\n*implements key word is used to inherit the class from Interface.\n*Interface is an entity like class, interface file is also have .java extension.\n*There is no Method body inside the interface, only method prototype and method declaration.\n*The methods which does not have body is called as Abstract Method\n*After JDK 1.8\n       - Interface can have static method with method body and this method can be accessed by Interface name.\n        - Interface can have one default method. This method can be overridden and can be accessed by class object.\n@Deepali\nInterface\nA class can inherit from multiple interfaces but an interface cannot inherit from a class. Interface can inherit from another interface.\nInterface variables are static and final by default.\ninterface can have static methods with method body.\n        \n\n\n\n\n@Mohanapriya\n\nAbstract Class:\nTopic Name\nImportant Notes\nWritten By\nAbstract Class\n*Need to use abstract keyword to declare a class abstract in nature.\n*Can not create the Object of Abstract class.\n*But we can create the Constructor of Abstract Class which will be invoked/called when child class Object will be created. \n*Java will call parent class constructor first and then child class constructor.\n*We can do top/up casting with Abstract class also. \n*Down Casting is not possible, as we cant create the Object of Abstract Class.\n*Abstract class can have static and final methods as well.\n@NaveenAutomationLabs\nAbstract Class - Level of abstraction\nAbstract class: 0 to 100% abstraction can be achieved. It can have:\n*abstract methods + non abstract methods: \n*yes (partial abstraction)\n*only non abstract methods:\n*yes (0% abstraction)\n*only abstract methods: \n*yes (100% abstraction)\n@NaveenAutomationLabs\n\n\n\n\n\nMethod Overloading: \nVideo Link: https://naveenautomationlabs.app.box.com/file/761043219303\n\n\n\nTopic Name\nImportant Notes\nWritten By\nMethod Overloading\n*Both Static and Non Static methods can be overloaded\n*In the same class when we have different methods with the same name and different types of parameters with different sequence of the parameters, is called Method Overloading.\n*Main() method can be overloaded, but JVM will check only main() method with right signature.\n*Method Overloading - is called Compile Time Polymorphism\n*We don't have any operator overloading in Java\n\n@NaveenAutomationLabs\nMethod Overloading Examples for Interview:\nlogin(long ph, int otp);\nlogin(String username, String password);\nlogin(String username, String password, String role);\nlogin(String username, String password, long ph);\n================================\nsearch(); //default search\nsearch(String productName);\nsearch(String productName, int price);\nsearch(String productName, int price, String color);\nsearch(String productName, String sellerName);\n==================================\ndoPayment(String UPI);\ndoPayment(String UPI, int otp);\ndoPayment(long CCNumber, String username, String password);\n@NaveenAutomationLabs\n\n\n\n\n\n\nMethod Overriding: \nVideo Link: https://naveenautomationlabs.app.box.com/file/763229275519\n\n\n\nTopic Name\nImportant Notes\nWritten By\nMethod Overriding\n*Definition: \nWhen we have a method in parent class, same method in child class with same name, same nu- type its called method overriding\n\n2. @Override - Annotation to check if the method is overridden: \n3. Private methods / static methods / final methods cannot be overridden\n4. Run time polymorphism (or) Dynamic Polymorphism\n\n@Harini\n\nstatic methods cannot be overridden. If static methods are allowed to be overridden then once overridden by one object it will effect all other objects of that class.\n@Dinakar\n\n\n\n\n*Override: Because child does not have the default features of parent class, may be that is old or cannot be used. We can change the behaviour of the method of child if we don't like the parent method. Override is the responsibility of the child class. Overriding is also called as Run time or dynamic polymorphism.\n*Method signature remain same for method overriding. Method overriding can happen with same method names in two different classes. We can only Override public methods and we cannot Override private methods\n*Static method can be overloaded but static method cannot be overridden because static method is not available inside the object, but static methods are available inside the permanent generation memory (meta-space). \n@Meyyappan\n\n\n\n\n\n\nData Types:\nprimitive Datatype\n\n*Boolean\n*Numeric type\n      1.Char\n      2. Integral\n            1. Integer: (byte, short, Int, long).\n             2. Floating-Point: (float, double).\nboolean~1bit Default value is false\nchar=2 bytes because it supports UNICODE and Language....default value is blank\n1 byte=8 bits (-126->127)\nshort=2 bytes\nint=4 byte\nlong=8byte\nfloat=4 byte(prefix (float) or suffix f)\ndouble=8bytes\n\n@Neelam\n     +\n@Durjan\nCharacter\nif character used in any operational expression ex..+=/*..ascii value of the character is counted.\na-z=97-122\nA-Z=65-90\n0-9=30-39\nfor scanner class we have s.next().charAt()...to enter any char by user\n@Neelam\nNon-primitive\nString,  class , interfaces , Object ( where you needs to work with objects)\n\n@Neelam\n     +\n@Durjan\nOOP\nJava is not fully object oriented programming language because it supports primitive data types.. \n@Neelam\n     +\n@Durjan\nLOOPs:\n\n\n\nswitch case\nif-else\nit accept key it will not accept any conditional statement. It is use when we need to match one condition with multiple ..ex. instead of if else\nbreak keyword can be use with switch case and loop but not in if else\n@Neelam\nfor loop\nfor(;;)it is valid syntax loop will be infinite\nex: blinking message on restaurant\n@Neelam\nfor each loop(advanced loop)\n*for two dimention  Array ex:\nfor(int e[]:a)--->row\n{ for(int p:e)----->colomn of that row\n\n@Neelam\nTime complexity\n*code is optimized or not try to write  code between 0(n)and 0(n^2)\n*it is denoted by Big O..n,n^2,n^3..no of times executing\n*O(n):::example for loop i=1,i<=10,i++::1+n+n+n=3n+1=3n=n(ignore 1 and 3 compare to big no)\n*Linear equation, Quadratic\n@Neelam\n\nArray & Array List:\nARRAY\n*when we try to fetch value beyond length it will throw Array Out of Bound exception \n*if we try to get value which in not define in that segment it will give us default value\n*Arrays are static because they r fixed in size and we can not change size during runtime. it is use where we need to hold multiple data of same or different datatypes..ex...no days..no month\n*Array Literals:: when we know value of the element of array\n@Neelam\nARRAY\nArray - to store similar data type values\n * Lowest index = 0\n * Highest  index = L-1, L=Length of the array\n *  Length = Highest index + 1\n *  Length of array is found using length attribute\nEg: int a[]=new int[4];\n      System.out.println(a.length);\nUse: when the data size is fixed\n         Eg: Days in a week, Months in a year.\n * Disadvantage: \n       1)static - to overcome we use collections(dynamic) - array list ,hash table...\n       2)Stores similar data type values - to over come this we use object array\n@Harini\nArray List\n*it store value in sequence, if you remove element from middle array element move to the empty bucket...pc will shrink the size, it will accept null(keyword) and duplicate values.\n*it is Dynamic in nature\n*by default when you declare Array List Virtual capacity of the Array List is 10\n*any method on Array List will work on Physical Capacity ex: size(),add ,get, set, remove\n*if we try to set value beyond PC it will throw (Array Index Out of Bound Exception)\n*we can (change) Virtual capacity when we declare Array List by passing value in this bracket()..constructor\n@Neelam\n    \n\n\n\n Constructor\n 1. Constructor helps to create the objects on the basis of given template variable.       \n2. Constructor can be overloaded with the same name  & diff.values      \n 3. Constructor name will remain same as the class name.                                                           Constructor declaration:-       public class name(){ //default constructor \n4. A constructor in Java is a special method that is used to initialize objects\n5. Constructor are 2 types -> Parametrized Constructor and Default Constructor \n   \n                                    \n  @Harshita\nConstructor\nConstructors can't have return type in declaration. Reason - when we are allocating an object as in classaname obj = new classname(); from RHS constructor is called and LHS is the implicit return type of a class constructor that is the class itself. so we don't need to specify return type explicitly\n@Neha Chadha\n++\n                                     \n                                                             \n                                                                   \n                                                           \n                                                               \n*            \n*            \n                                                           \nInheritance:                  @Sushma\n1.Inherit from parent or grandparent\n2. we can reuse method and fields from parent class. \n3. add new method and field in child class \nChild class object can be referred by parent class reference variable\n\n-----------\nInterface:                           @Sushma\n*Can not create the Object of Interface\n2. Only Method Prototype (Method declaration) is allowed in Interface\n3. Interface vars are static and final by default\n\n----------------\nMethod Overloading:              @Sushma\n1.Changing no. of arguments\n2.Multiple method have same name but different parameter\n3. Compile time Polymorphism\n-----------------\nMethod Overriding:                   @Sushma\n1.When parent class have same method as a child class with same name with the same number of parameter\n2.We  can use to develop a new feature or apply own business logic\n3.Sequence of parameter should same\n\n----------------\nLocal and Global variable                \n\n\n\n\nTopic Name\nImportant Notes\nWritten By  \nLocal variables \n        \n*Any Variable which is declared within the method is called as local variable\n*Scope of local variable is from begining of the method till the end of the method.\n*Local variable can't be classified into static and non static.\n*Local Variable will not have any default values.\n*Local Variables should be initialized before utilization.\n@SUBRAHMANYA ADIGA\nGlobal variables\n*Any variable which is declared outside the method and inside the class is known as global variable.\n*Scope of global variable from the beginning of the class \n*It can be classified into static and non static.\n*It will have the default values\nEx>> int x; >> here x will have default value as 0\n5. Once the global variable is declared immediately in the next line we can't reinitialize or initialize.\n\n\nSignature of the Method\nAccess Specifier  Modifier  Return type Methodname(arguments)\n{\n}\n\nAccess Specifier\n*Public\n*Private\n*Protected\n*default/package level\n\nModifier\nStatic and Non Static\n\nReturn type\nint, double, string etc\n\n\n\n\n\nBuilder Pattern:\n\n\n\nBuilder Pattern\n*Every method can write the same class object.\n*this keyword is used to return the current class object\n*For example\npublic EcommApp login() {       System.out.println(\"default login\");\n                return this;\n        }\nEcommApp is a class name\nreturn this will return the object of the EcommApp class\n\n*The limitation of Builder pattern is you can't add assertion, validation in the code\n@Deepali\n\n\n\n\n\n\n\n\n\n\n Exceptional Handling:                                                             \n\n\n\nclass to handle error and exception\nThrowable(super class)\nException\nerror\n*to HANDLE Exception we use try block with catch block\n*it can have multiple catch block for specific exception\n@Neelam\nException class\n*it is java inbuilt class to handle Exception(it is parent of all  specific exception)\n*with try catch block we can handle exception by creating instance reference  of the exception class (object will be create internally)\n*it is good practice to write specific exception in catch block\n*exception is coming because of the code\n*we can not handle exception with error class\n@Neelam\nError class\n*Environmental error, Compiler error, Fatal error, overflow, syntax error, configuration error.\n*we catch that with error class\n*\n@Neelam\nThrowable\n*when we don't know about exception where it is exception or error we handle with throwable class \n@Neelam\nfinally block\n*it is used with try block(or try catch)..when we want to execute particular Behaviour . whether the exception handle or not.\n*finally block will always execute\n*example:: Make database connection, SQL to  get the data, use the data, and then close the connection with database, suppose we get some exception while fetching data or using data..it is always good practice to close the connection with database to overcome overloading database server\n*so will close the connection in this example with finally block\n*if there is return in try catch block it can be overwrite with finally block return\n@Neelam\nthrows keyword\n*when we are PASS the exception from one method to another method while chaining we need to declare(one or multiple) exception with throws keyword after the signature of the method\n*it is not a good practice to throws exceptions at main method\n@Neelam\nthrow keyword\n*when we deliberately  generate exception for negative testing\n*create object of exception class with message and throw keyword\n*wrap with try catch block\n*it is good practice to use print Stack Method  to know where we get exception\n@Neelam\n\nSTRING MANIPULATION\n\n\n\n\n*Method\n*Use\n*Example\n*Written by\n*length() \n*Returns string length\n*String s = \"This is my java code\";\n*System.out.println(s.length());\n*@Harini\n*charAt(index)\n*Returns char present in given index\n*System.out.println(s.charAt(11));\n*@Harini\n*indexOf(char)\n*Returns the index of given char\n*System.out.println(s.indexOf('i'));\n*@Harini\n*indexOf('char' , from index)\n*Returns the index of the specified char starting with the given index\n*if string or char not present in given string it will return -1\n*System.out.println(s.indexOf('i', 3));\n*@Harini\n*toLowerCase()\n*Returns the string in lower case\n*String msg = \"Welcome\";\n*System.out.println(msg.toLowerCase());\n*@Harini\n*toUpperCase()\n*Returns the string in Upper case\n*System.out.println(msg.toUpperCase());\n*@Harini\n*trim()\n*Removes space from both corners of the string(RHS & LHS)\n*String str=\"     Hello world    \";\n*System.out.println(str.trim());\n*@Harini\n*contains(string)\n*Returns boolean value(true/false) by matching if the given sequence of characters is present in the given string\n*String name=\"Isaac Newton\";\n*  if(name.contains(\"Isaac\")) {\n*  System.out.println(\"Correct user name\");\n*  }\n*  else {\n*   System.out.println(\"Incorrect user\");\n*    }\n*@Harini\n*equals()\n*used to check the strings equality\n*String s1=\"Tom\";\n*String s2=\"tom\";\n*   if(s1.equals(s2)) { \n*     System.out.println(\"strings are equal\");\n*    }\n*    else {\n*     System.out.println(\"strings are not equal\");\n*     }\n*@Harini\n*equalsIgnoreCase()\n*used to check the strings equality but ignores case\n*String s1=\"Tom\";\n*String s2=\"tom\";\n*  if(s1.equalsIgnoreCase(s2)) { \n*      System.out.println(\"strings are equal\");\n*   }\n*   else {\n*      System.out.println(\"strings are not equal\");\n*    }\n*@Harini\n*substring(start index)\n*Returns substring form given start index till end\n*String str1=\"This is a test string\";\n*System.out.println(str1.substring(10));\n*@Harini\n*substring(start index, end index)\n*Returns substring between given start index and given end index\n*System.out.println(str1.substring(10,15));\n*@Harini\n*replace()\n*Replaces the old character to new character in the string\n*String dob=\"12-12-1990\";\n*System.out.println(dob.replace('-' , '/'));\n*                \n*@Harini\n*split()\n*Returns the split string based on given string(characters).\n*Split method returns a string array\n*String st=\"Java,Python,c#,Go,JavaScript\";\n*String stArray[]=st.split(\",\");\n*   for(String e:stArray) {\n*               System.out.print(e+\" \");\n*     }\n*@Harini\n*\n*reverse is not  fun is not available in String class\n*because Strings are immutable\n*@Neelam\n*replaceAll(\"\", \"\")\n*with regular expression\n*[a-zA-Z0-9]\n*@Neelam\n*Data converter\n*string to integer\n*Integer (pre-define class in java)and parseInt is static method in that class\n*\n*Integer to string\n*String.valueOf(a)\n*String s=\"HELLO\";\n*Integer.parseInt(s);\n*\n*\n*\n*\n*int a=100;\n*String.valueOf(a);\n*@Neelam\n*\n*Access Modifier\n*\n*\n*default\n*private\n*protected\n*public\n*same class\n*yes\n*yes\n*yes\n*yes\n*same package \n*subclass\n*yes\n*no\n*yes\n*yes\n*same package \n*non subclass\n*yes\n*no\n*yes\n*yes\n*different package\n*subclass\n*no\n*no\n*yes\n*yes\n*different package \n*non subclass\n*no\n*no\n*no\n*yes\n*POJO class:\n*\n*\n*\n*POJO\n*plain old java object\n*it should not extend any other class(it can't be child)\n*it should not have any annotation\n*no main method\n*it is like templet. (some methods, variables and constructor)\n*\n*@Neelam\n*Class object reference:\n*\n*we can have method which has class object reference as parameter\n*by passing class object reference as argument ,so we don't have to pass all values manually\n*whatever values we passed at the time of creating object with the help of constructor will be access by his reference variable\n*@Neelam\n*ex. public void register(registration register)\n*Registration reg =new Registration(\"tom\",'45',\"6666');\n*reg.register(reg)\n*@Neelam\n*Super::\n*super\n*we can use super keyword within method only and in class which has a super class\n*@Neelam\n*\n*to call method and variable from super class without creating object of super class\n*@Neelam\n*super()\n*for constructor chaining \n*se can call one  constructor from the super class. It will be the first statement in the child class constructor\n*@Neelam\n*\n*\n*\n*Finalize method:\n*\n*finalize method\n*it comes from super class of all the class that is Object class\n*@Neelam\n*\n*this method is called automatically when we programmatically call garbage collector.(if we dont it will not call)\n*system.gc();\n*@Neelam\n*\n*finalized method can be override method  for any class\n*@Neelam\n*\n*it will only call method from that class for which we create the object\n*@Neelam\n*\n*\n*ex:: for finalize method\n*for storing data before destroying object(or stop data connection)\n*@Neelam\n*\n*Selenium:\n*\n*selenium\n*it is open source UI automation Library\n*which simulate the action on browser\n*it supports different languages(java c#, ruby, python, php, go, JS, .net) and it is platform independent \n*it does not support any mechanism to validate the test---we have to use any test client for Java: JUnit, TestNG\n*it can automate on multiple browser\n*it supports headless mode\n*it can easily be integrated with CI/CD tools-- maven/Gradle, AWS/MZ Azure/GCP\n*selenium based /tools family(Appium, Protractor)\n*It can not automate desktop app (skype, go to meeting) \n* can not do any performance and security testing  \n*does not provide test result reporting. we need to use 3 rd party library- allure, TestNG, extent report\n*it can not organize your test cases\n*\n*@Neelam\n*close()\n*NoSuchSessionException: invalid\n*session id\n*\n*@Neelam\n*quit()\n*NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()\n*\n*@Neelam\n*WebDriverManager\n*it is class(bonigarcia Api)\n*it internally check the browser version and download respective compatible browser driver\n*\n*@Neelam\n*Locators:\n*\n*do not make launch browser method static\n*beacuse we can not achieve parallel execution if we make it static\n*@Neelam\n*Maven Project\n*if we make any changes in pom.xml\n*right click on project-->maven-->update project\n*@Neelam\n*locator-->WebElement-->Action\n*\n*@Neelam\n*locators\n*each webelement has property which we can define by BY (class)locators\n*it is good practice to create object repository for By locators so we can use them when we need it\n*@Neelam\n*webElement: StaleElementReferenceExecption\n*& how to handle it.\n*selenium will interact with WebElement\n*when page is refresh ,or back,or forward..every time new  page will be loaded\n*so selenium  maintain ID for each webelement for the  page, so every time when page is refresh DOM  is updated and if we use the same Webelement ID from the previous page(the page before refresh) we get StaleElementReferenceExecption. \n*Handling of staleElementException: So to overcome we need to assign same webelement reference(Variable) again after page refresh, so it will create webElement new ID for updated DOM with same webElement variable.\n*@Neelam\n*\n*\n*\n*get and navigate.to:::\n*\nget()\nget() internally call .to() method\n@Neelam\nnavigate.to()\nboth are same\nwe can simulate the browser property\n*back()\n*forward()\n*refresh()\n\n@Neelam\nDrop Down:\nSelect Class\nselect class is predefine class which will take WebElement as argument.\nwhen we create object of the select class then we have 3 method to select drop-down values as given below:-\n*selectbyindex(month,day): \n*selectByVisibleText\n*slectByValue\n*options...(list of webelement under select input tag): Used when you need complete list for validation purpose.\n\n\n@Neelam\nHow you will select drop-down values without using above 3 methods available under select class ?.\n-> use options methods to get all list of web Element under select input html tag : List<WebElement> indus_listWebelementOptions = select.getOptions();\n-> then extract text one by one from element using loop with help of getText() method and select text using equal method:\nfor(WebElement element:indus_listWebelementOptions)      {     if(element.getText().equals(text))\n                        {\n                             element.click();\n                                break;\n                        }    }\n@Durjan\nwithout Select Class\nfor suggestive dropdown without select class...we can travel from within that section of dropdown (parent to direct child(/) or indirect child(//)) and get list of webElement present in auto-suggestive dropdown..it is dynamic data loading from the server so wait time is preferable\n@Neelam\nActions class::\nActions class:: \n*perform the action which we can perform by mouse:\nActions class is predefine class which will take driver as argument.\n when we create object of the Actions class\n*Any action of the action class end up with .perform(): Means we performing users action using action class object.\n*Single action: used .perform at end (.build.perform() also work here).\n*Any composite action end up with .build().perform()\n*MoveToElement()\n*clickandHold()\n*release()\n*dragAndDrop()\n*Contextclick() for right click on webelement or on page\n*sendKeys..internally call click method\n*sendkeys(character sequence)...we can pass different srting as parameter just like Arrays\n*String s1=\"abc\";\n*String s2=\"xyz\";\n*ex..sendKeys(s1,s2,s3)\n*click()..Action class will click in the middle of the element\n\n@Neelam\nHow many ways we can sendkeys & click Method\n*driver.findelement(By.Id(\"\")).sendKeys(\"\");\n*driver.findelement(By.Id(\"\")).click();\nit will find element internally and click anywhere on element.\n====\n*Actions act = new Actions(driver);\n*act.sendKeys(driver.findelement(By.Id(\"\")), \"Firstname\").perform();\n*act.click(driver.findelement(By.Id(\"\")).perform();\nHere Click in center of element.(prefer this one).\n\n@durjan\n\n*=================================================================================\nHow to create Object repository (using By locators) and used them using generics method: @durjan\n\npackage SeleniumSessions;\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport io.github.bonigarcia.wdm.WebDriverManager;\n\npublic class WebElementConcept {\n        static WebDriver driver;\n\n        public static void main(String[] args) {\n                String URL = \"https://accounts.google.com/signup/v2/webcreateaccount?hl=en&flowName=GlifWebSignIn&flowEntry=SignUp\";        \n                WebDriverManager.chromedriver().setup();\n                driver = new ChromeDriver();\n                driver.get(URL);        \n                \n                /* first approach==> this comment by using (ctrl+shift+/) *\n                /* Same webElement is not reusable (user needs to write the statement again */\n//                driver.findElement(By.id(\"firstName\")).sendKeys(\"durjan\");\n//                driver.findElement(By.id(\"lastName\")).sendKeys(\"singh\");\n                \n                /* second approach */\n                /* web-element creation */\n                /*Web Element can be reusable but user asking to find this element here means you hitting the server */\n//                WebElement firstName = driver.findElement(By.id(\"firstName\"));\n//                firstName.sendKeys(\"durjan\");\n//                WebElement lasttName = driver.findElement(By.id(\"lastName\"));\n//                lasttName.sendKeys(\"singh\");\n                \n                /* Third Approach */\n                /* by locator creation */\n                /*\n                 * locator creation you are not hitting the server so its works as object repository\n                 * but here driver.findElement needs to written again n again\n                 */\n//                By fName = By.id(\"firstName\");\n//                By lName =  By.id(\"lastName\");\n//                WebElement firstName = driver.findElement(fName);\n//                WebElement lasttName = driver.findElement(lName);\n\n                /* 4th Approach */\n                /* by locator creation + get element method */\n                /*\n                 * here user don't needs to write driver.findElement statement but sendKeys\n                 * method we using again n again\n                 */\n//                By fName = By.id(\"firstName\");\n//                By lName =  By.id(\"lastName\");\n//                \n//                getElement(fName).sendKeys(\"durjan\");\n//                getElement(lName).sendKeys(\"singh\");\n\n                /* 5th Approach */\n                /*\n                 * locators can be used again n again generic approach to create webElements and\n                 * send values through SendKeys methods\n                 */\n                By fName = By.id(\"firstName\");\n                By lName =  By.id(\"lastName\");\n                \n                doSendKeys(fName, \"durjan\");\n                doSendKeys(lName, \"singh\");\n                driver.quit();\n        }\n        \n        public static WebElement getElement(By locator) {\n                return driver.findElement(locator);\n        }\n        public static void doSendKeys(By locator, String value){\n                getElement(locator).sendKeys(value);\n        }\n               \n}\n=================================================================================\n\nElement locators\n*Element locators\n*1.ID, 2. Name, 3. ClassName, 4.TagName, 5. Link Text, Partial Link text, 6. CSS Selector, 7. X-Path (axes).\n*@durjan\n*Notes: Preference wise\n*ID ( This is unique one so it works faster)<= first choice\n*X-Path (Axes): Prefer only for dynamic elements or it you do not find anything reliable.\n*Always prefer the simple one and reliable ( which probably not going to change).\n*ClassName do not recommended, usually duplicate className will be found on particular page.\n*PartialLinkText: Only used when you have long link.\n*Name will be used if it is unique one.\n*@durjan\n*ID\n*driver.findElement(By.id(\"firstName\"));\n*@durjan\nName\ndriver.findElement(By.name(\" \"));\n@durjan\n*ClassName\n*        \n*driver.findElement(By.ClassName(\" \"));\n*@durjan\n*\nTagName: used from Get Text generally\ndriver.findElement(By.tagName(\" \"));\n@durjan\nLink Text, Partial Link text: (tag: a)\nLinkTest: driver.findElement(By.linkText(\" \"));\nPartialLinkTest: driver.findElement(By.partialLinkText(\" \"));\n@durjan\nCSS Selectors\n\n@durjan\nX-Path\nRelative x-path: /\nAbsolute x-path: //\ndriver.findElement(By.xpath(\"// \"));\n@durjan\n*X-path with axes\n*\n*@durjan\n*==================================================================================\n*how to work with links and images\n*Links\n*start(input tag) with anchor tag: a\n*attribute: href for URL\n*@durjan\n*Image\n*start(input tag) with image tag: img\n*attribute: src for URL\n*@durjan\n*Find link/img on page\n*        \n*link( it will give you:  List<WebElement>):=> driver.findElements(By.tagName(\"a\"));\n*Img( it will give you:  List<WebElement>):=>: driver.findElements(By.tagName(\"img\"));\n*@durjan\n*\n*\n*\n*@durjan\n*\n*\n*@durjan\n*\n*\nHEADLESS CONCEPT\nSYNTAX\nDESCRIPTION\n\nTo achieve headless mode in Chrome:-\nChromeOptions  co=new ChromeOptions();\nco.addArguments(\"--headless\");\nWebDriver driver=new ChromeDriver(co);\n\nTo achieve headless mode in Firefox:-\nFirefoxOptions fo=new FirefoxOptions();\nfo.addArguments(\"--headless\");\nWebDriver driver=new FirefoxDriver(fo);\n\nIn Headless testing, UI is not displayed for any browser and testing  happens behind the scene. Basically, headless mode is blocking the visual part of the browser.\nTo achieve headless mode in Chrome; use ChromeOptions class object where addArguments should be passed as \"--headless\" and then this object is passed into the ChromeDriver constructor.\nSimilarly, for Firefox need to use\nFirefoxOptions class with similar syntax\n@Sonam Arora\nADVANTAGE\nHeadless mode is slightly faster\nthan normal mode\n@Sonam Arora\nDISADVANTAGE\nHeadless mode is not very powerful. Headless mode will be failed if selenium script is handling popup or move to element as UI will not be displayed. \n@Sonam Arora\nPURPOSE/USAGE\nHeadless mode is beneficial to use\nin executing sanity/smoke or (nightly run of automations suit) test cases where there are less number of test cases .\n@Sonam Arora\n\nAlert::\nJava Script alert\nModal dialog  \n*syntax::alert('I am an alert')\n*these are not  webElement\n*we need to switch the driver to alert and it will return alert class reference..at a time only one alert in the page\n*accept() the alert.. that means you are accepting alert\n*dismiss()..escape. that means do not send msg to server dismiss it\n*come back to original window by defaultcontent()\n\n@Neelam\nBrowser Auth popup\nauthentication for browser page it self..pop which ask for username and password\nsyntax::admin:admin@abc.com/\nappend username and password with url itself\n@in password  will not work\nexample..login page is not ready\n*Auto it is another solution but it will work with windows  only..can not achieve parallel excecution\n@Neelam\nfile Upload pop up\nuse sendKeys() and pass the path from which file u want \n*type=file attribute must be there to upload file with selenium\n@Neelam\nbrowser window pop up\n*Advertisement  pop up\n*use window handler api in selenium\n*getwindowhadles..which store in set<string>..bcz set is not order base and set can not store duplicate value\n*use iterator for Set<string>\n*driver.switchTo().window(pass the hangleid)\n*we can use ArrayList with predefine constructor which take set<string >reference variable as arguments \n@neelam\nFrames\nframe\nit is part of the page as webelement\n@Neelam\n\nwe can switch to frame by index,\nname or id\nwebelement\nindex is not reccomended\ndriver.switchTo().frame(webelement)\nframe has its own html document\ndriver.switchTo().defaultContent()..to return to main page\n\n@Neelam\n\nif there is frame inside frame we can acess the indise frame directly..\nthere is one method to return to the parent frame is\ndriver.switchTo().parentFrame()\n@Neelam\n\n\n\nxpath\nxpath\nxpath -- is not an attribute\n*address of the element inside the html DOM\n@Neelam\n\n2 types of xpath:\na. absolute xpath: abs address of the element\nhtml/body/div[2]/div/div[3]/form/div/input[1]\nb. relative/custom xpath: \n\n@Neelam\n\nhtmltag[@attr='value']\nhtmltag[@attr1='value' and @attr2='value']\nhtmltag[@attr1='value' and @attr2='value' and @attr3='value']\n\n@Neelam\n\nBy.className(\"form-control private-form__control login-email\"); //--not correct\nBy.xpath(\"//input[@class='form-control private-form__control login-email']\");\n By.className(\"login-email\");\n\nIf class attribute have multiple classes then By.className can use only one class and in xpath can use single or all multiple classes\n\n@Neelam\n\n\n\n\n@Namita\ncontains()\nid='test_123'..Dynamic id\ncontains() in xpath:\nhtmltag[contains(@id,'test_')\nhtmltag[contains(@id,'value') and @name='value']\ninput[contains(@id,'email') and contains(@type,'text')]\n\n@Neelam\ntext()\n/text() in xpath:::Span,header\n  /htmltag[text()='value']\ntag[text()='value' and @attr='value']\ntext() with contains():\ntag[contains(text(),'value')]\nelementNotInteractable exception:::how to solve it\n*wait\n*action class  click() method\n*javascript Executor\n*may be element hidden use indexing in xpath..capture group..[][position()=1][]last()]\n@Neelam\nHashMap\n\nHashMap: it is class\n*it implements Map interface\n*it extends AbstractMap\n@Neelam\n\nIt store pair, key,value\n*Vartual capacity of Hash Map is 16\n*it can store only unique element(duplicate key will be override)\n*it may have one null key and multiple null values\n*it does not maintain order\n*internally hashcode will be calculate for key (value)and it will give indexing so it is in random order\n*multiple key has same hash code and so same index, so it is called collision ,so all collision index will store in linked list as node, but after jdk 1.8 after threshold value of 8 node it convert into binary tree where time complexity will be calculated on log N basis\n@Neelam\n\nwe use .put(key,value) to fill the map\n@Neelam\nuse case in selenium\nRBAC: role based access control\nex. \n*login with different credential for ecommerce website for example Amazon has seller,vendor,admin,cutomer\n*product details are also in key and value pair\n@Neelam\nStream\nStream\nIt applies on List\n@Neelam\nStream\nsequencial and parallel\n@Neelam\n\n.stream() for sequencial\n.parallelStream() for parallel stream\n@Neelam\n\n.forEach(variablrName->syso(variableName))\n.filter() like if condition\n.map() on filter stream\ncollect(collectors.toList())\n@Neelam\n\n\n\nSynchronization for Selenium\nImplicilty wait\n*it is global dynamic wait\n*it applies to all WebElement \n*we can override implicit wait\n*we can also nullify implicit wait\n*div: will impact on the performance of the app\n*Implicit wait is apply only for webelement not non webelement like alert,url,title\n*Synatx of implicit wait\n driver.manage().timrouts().impliciltyWait(time,TimeUnit.second)\n\n@Neelam\n\n\n\n\n\n\n@Namita\n\n\n\n@Namita\nExplicit wait\n1.WebDriverWait :class\n2.Fluent Wait: class\n\n*WebDriverWait extends FluentWait \n*FluentWait implements Wait Interface\n\n\n@Neelam\nWebDriverWait\n*it can apply to specific webElement whenever needed\n*it can apply to WebElement and non-WebElement (ex. title,alert,url)\n*webDriverWait..default interval is 500milliseconds\n*alertIsPresent() return Alert reference which internally switch to alert too\n*titleContains() return boolean\n* PresenceOfElementlocated() will return webElement\n@Neelam\n\n\n\nTestNG\nTestNG\nwe need to install plugin in eclipse for TestNg\n*add dependancy in pom.xml to use annotations in TestNG library\n@Neelam\nTestNG \nAnnotations\n@BeforeSuite\n@BeforeTest\n@BeforeClass\n         @BeforeMethod\n          @Test\n          @AfterMethod\n@AfterClass\n@afterTest\n@AfterSuite\n*************\n@parameters\n@Dataprovider\n\n\n@Neelam\n@Test\nAttributes\n1.priority= any integer..if priority same then it will execute in alphabetical order\n*NON-Priority test will execute first\n2. dependsOnMethod={\"\"}it is string of array,so we can pass more then one test dependency\n3.ExpectedExceptions={\"\"}it is array of .class exceptions..so we can declare more than one exception..if we dont mention correct exception.class then test case will be fail.\n\n\n@Neelam\n\nit is good practice to use @BeforeMethod in framework.\nbecause browser open and close for each test case so execution percentage will be higher\n@Neelam\nTest Runner\nto execute all tests at once testNG provide one feature that is .xml file\n@Neelam\ntestng.xml\n*thread-count=\"3\"...\n       parallel=\"tests\"...for parallel  execution\n*verbose=\"3\" from \"1-5\"..logs from TestNG .console info from testNG.\"3\" is ideal.\n*<parameter name=\"\" value=\"\">..we can create more than 1 parameter..it is for global variable(url,un/pwd,browser)\n@Neelam\n\n\n\n\nHybrid Framework with POM:\n*\nReport\nExtent report:\n*add extent report dependancy in pom.xml\n*javatemplate provided by extent report with implements ITestListeners from testNG and extends driver factory class.\n*ITestListener will listen the testcase and take screen shot on failure test cases..we can configure listener in .xml file\n*define two string which will create for folder and file at run time.\n*private static final String OUTPUT_FOLDER = \"./build/\"; \n*private static final String FILE_NAME = \"TestExecutionReport.html\";\n*create  method which return path which is created at run time for screenshot\n*****************************************************************************\n*Screenshot::\n*type cast driver with TakesScreenshot interface from selenium) and with method .getscreenshotAs(OutputTYPE.file)\n*then create one folder at run time into the root directory..get the root directory with System.getProperty()\n*then pass that path when we create File object..then copy the screen shot with FileUtils.copyFile(src,path)\n**********************************************************************************\nGIT Process: @NaveenAutomationLabs\n\n//First commit\n1. create a repo at the remote\n2. get the url of the repo\nlocal:\nadd .gitignore file\n3. git init\n4. git remote add origin https://github.com/naveenanimation20/Dec2020JavaCode.git\n5. git status\n6. git add .\n7. git commit -m \"reason\"\n8. git push origin master\n \n==============\nA New Team Member:\n1. Get the Repo URL\n2. Clone the repo/project in your local\n3. Import the project in your Eclipse\n4. Start using it\n5. git add .\n6. git status\n7. git commit -m \"reason\"\n8. git push origin branchname\n\n====================\nlocal branching process:\n1. from the master branch, cut/create a new branch -- git branch cart\n2. switch to cart branch -- git checkout cart\n3. it should be reflected in your eclipse -- cart branch\n4. make some changes in your cart branch -- add some new page classes/test classes\n5. git status\n6. git add <files>\n7. git status\n8. git commit -m \"reason\"\n9. git push origin cart -- this will create a new cart branch in remote and code will be pushed to cart only\n\n=================\nPR Process:\n1. follow all the steps from local branching process\n2. Raise the PULL Request (PR) from GIT hub repo - at the remote side (give comments and select the reviewers)\n3. Reviewer will check the PR and provide the review comments\n4. Requester will update the PR on the basis of given review comments\n5. Same code will be pushed to cart branch(follow local branching process : step #4 to #9)\n6. Reviewer will check the PR and approves it\n7. Requester/Reviewer will merge the code to the master branch\n8. New changes should be reflected in master branch\n=======================\nResolve merge conflict:\n*two developer work on same feature page.\n*one developer merge code in master remote repo\n*other developer try to pull the the code from master repo to git local repository\n*command line will ask to move or remove the same feature page code which is present in local git repository\n*git add <file name>\n*then git stash\n*git pull origin master\n*git stash pop\n*now it will show conflict in our code in working copy ..resolved it with peer \n*git add <file>...resolved file\n*git commit -m \"\"\n*git push origin master\n==========================================\nDifference between git fetch and git pull\ngit fetch+ git merge=git pull\ngit pull :- This will pull the latest copy from remote to both local repo and working copy.\ngit fetch:- This will pull the latest copy from remote only to local repo .To take this latest copy to working copy  from local repo use git merge\n*******************************************************************************************************\nJENKINS SetUp::@Neelam\n*download jenkins.war file and run command java -jar jenkins.war httpPort=9090\n*copy secret key and install all plugins and create account\n*manage jenkins-->global tool configuration::set JDK and MAVEN home path\n*set Allure too\n*manage plugins::maven integration, testNg-report,Allure,html publisher install\n*create mvn job in jenkin:\n*1.Source code management: copy paste git hub url\n*2.Build::pom.xml, clean install -Denv=${environment}\n*3.post build actions::testng report, allure report, publish html report\n*click on build now..clone the repository create workspace in jenkin server-->..pom.xml..-->compile test code and generate resources-->surefire plugin-->.xml file-->execute the test cases\n*NGrok proxy server which trigger the build in jenkins as new code push to the repository ::download and extract zip file-->create account-->will generate autorization code\n*follow the steps go in CML go in directory and paste token-->ngrok http 9090-->will give url\n*go gitHUb repository add webhook: paste the url/github-webhook/\n*check the CML where NGRok running we will get 200 ok \n*Jenkin CONFIGURE:: build trigger-->check github webhook trigger\n*To manage different Evironment ::installed plugin -->choice parameter and configure -->project prameterize with choice prameter--with valirable name and value\n******************************************************************************************************\nDocker::\n*Docker-Compose file: # To execute this docker-compose yml file use `docker-compose -f <file_name> up` # Add the `-d` flag at the end for detached execution version: \"3\" services: selenium-hub: image: selenium/hub:3.141.59-20210311 container_name: selenium-hub ports: - \"4444:4444\" chrome: image: selenium/node-chrome:3.141.59-20210311 volumes: - /dev/shm:/dev/shm depends_on: - selenium-hub environment: - HUB_HOST=selenium-hub - HUB_PORT=4444 firefox: image: selenium/node-firefox:3.141.59-20210311 volumes: - /dev/shm:/dev/shm depends_on: - selenium-hub environment: - HUB_HOST=selenium-hub - HUB_PORT=4444 opera: image: selenium/node-opera:3.141.59-20210311 volumes: - /dev/shm:/dev/shm depends_on: - selenium-hub environment: - HUB_HOST=selenium-hub - HUB_PORT=4444\nDocker commands: docker pull selenium/hub docker pull selenium/node-firefox-debug docker pull selenium/node-chrome-debug for containers: docker run -d -p 4444:4444 --name selenium-hub -P selenium/hub connect the node to hub: docker run -d -P --link selenium-hub:hub selenium/node-chrome-debug docker run -d -P --link selenium-hub:hub selenium/node-firefox-debug check total containers running: docker ps -a //check the hub logs docker logs <container id> //check the chrome and firefox logs docker logs <container id>\n*\n*\n*\n\n","attribs":"*bc*6*7+2*9q*6*7+g*4|1+1*4*5*6*7+f*4|1+1*4*6*7+f*4*8*9|1+1*4*6*7+a*4*a*9|1+1*4*6*7+7*4*b*9|1+1*4*7+e*4*8*c|2+2*4*6*7+n*4*8*c|1+1*4*6*7+e*4*a*c|2+2*4*6*7+l*4*a*c|1+1*4*6*7+7*4*b*c|1+1*4*6*7+a*4*8*d|2+2*4*6*7+j*4*8*d|1+1*4*6*7+p*4*a*d|1+1*4*6*7+i*4*a*d|1+1*4*6*7+n*4*a*d|1+1*4*6*7+7*4*b*d|1+1*4*6*7+c*4*8*e|1+1*4*6*7+i*4*a*e|1+1*4*6*7+7*4*b*e|1+1*4*6*7+c*4*8*f|1+1*4*6*7+l*4*a*f|1+1*4*6*7+7*4*b*f|1+1*4*6*7+9*4*8*g|1+1*4*6*7+16*4*a*g|1+1*4*2*h*3+1*4*6*7+27*4*a*g|1+1*4*6*7+7*4*b*g|1+1*4*5*6*7+i*4|2+2*4*5*6*7+a*4*5*7+8*4*i*j|1+1*4*5*7+m*4*k*j|1+1*4*5*7+a*4*l*j|1+1*4*6*7+6*4*i*n|1+1*4*2*h*3+1*4*6*7+a*4*7+m*4*6*7+1*4*k*n|1+1*4*6*7+1w*4*k*n|1+1*4*2*h*3+1*4*6*7+22*4*k*n|2+2*4*7+l*4*l*n|1+1*4*6*7+f*4*i*o|1+1*4*2*h*3+1*4*6*7+19*aq*6*7+1*4*5*p*7+3*4*6*7+9*4*k*o|1+1*4*2*h*3+1*4*6*7+o*4*k*o|1+1*4*2*q*3+1*4*6*7+g*4*k*o|1+1*4*2*q*3+1*4*6*7+18*4*k*o|1+1*4*2*q*3+1*4*6*7+p*4*k*o|1+1*4*6*7+1i*4*k*o|1+1*4*6*7+l*4*l*o|1+1*4|2+2*4*5*6*7+i*4|4+4*4*5*6*7+a*4*r*s|1+1*4*5*7+m*4*t*s|1+1*4*5*7+a*4*u*s|1+1*4*6*7+h*4*r*v|1+1*bs*6*7+6*4*6*7+3k*4*t*v|1+1*4*6*7+9*4*u*v|1+1*4*r*w|1+1*4*6*7+2y*4*t*w|1+1*4*7+9*4*u*w|1+1*4*r*x|1+1*4*t*x|1+1*4*u*x|1+1*4|1+1*4*6*7+1*4|1+1*4*5*6*7+f*4|4+4*4*5*6*7+a*4*y*z*10|1+1*4*5*6*7+f*aq*c0*12*10|1+1*4*5*7+a*aq*c0*13*10|1+1*4*6*7+6*4*y*z*14|1+1*4*2*15*3*16+1*4*6*7+1z*4*7+1u*4*6*7+2t*aq*c0*12*14|1+1*4*2*15*3*17+1*4*6*7+1x*aq*c0*12*14|1+1*4*2*15*3*18+1*4*6*7+1x*aq*c0*12*14|1+1*4*2*15*3*19+1*4*6*7+1j*aq*c0*12*14|1+1*4*6*7+9*aq*c0*13*14|1+1*4*y*z*1a|1+1*4*6*7+1n*aq*c0*12*1a|1+1*4*6*7+7*aq*c0*13*1a|1+1*4*y*z*1b|1+1*4*6*7+dz*aq*c0*12*1b|1+1*4*6*7+4g*aq*c0*12*1b|1+1*4*6*7+3u*aq*c0*12*1b|1+1*4*6*7+c*aq*c0*13*1b|1+1*4*11|2+2*4*5*6*7+b*4*6*7+1*4*11|1+1*4*6*7+c*4*6*7*1c+1m*4*11|4+4*bs*4u*bn*1f|1+1*4*5*6*7+f*bs*by*1h*1f|1+1*4*5*6*7+a*bs*4y*1j*1f|1+1*bs*4u*bn*bm|1+1*bs*by*1h*bm|1+1*bs*4y*1j*bm|1+1*bs*4u*bn*1l|1+1*4*2*15*3*16+1*4*7+12*4*6*7+2l*4*7+1e*bs*by*1h*1l|1+1*4*2*15*3*17+1*4*7+13*4*6*7+6*4*7+1a*4*6*7+w*bs*by*1h*1l|1+1*4*2*15*3*18+1*4*6*7+1m*bs*by*1h*1l|1+1*4*2*15*3*19+1*4*6*7+t*4*7+o*4*6*7+3v*bs*by*1h*1l|1+1*4*2*15*3*1m+1*4*6*7+z*4*7+n*4*6*7+3*4*7+43*4*6*7+1*4*7+g*4*6*7+8*4*7+w*4*6*7+s*6x*8h*7+l*bs*by*1h*1l|1+1*4*2*15*3*1n+1*4*7+19*4*6*7+6*4*7+1d*4*6*7+6*4*7+2n*4*6*7+6*4*7+6*4*6*7+1t*bs*by*1h*1l|1+1*4*2*15*3*1o+1*4*7+1b*bs*by*1h*1l|1+1*4*2*15*3*1p+1*4*7+d*4*6*7+1t*bs*by*1h*1l|1+1*4*2*1q*3*16+1*4*6*7+1l*bs*by*1h*1l|1+1*4*2*1q*3*17+1*4*7+a*4*6*7+5*4*7+5s*bs*by*1h*1l|1+1*4*6*7+a*bs*4y*1j*1l|1+1*bs*4u*bn*bl|1+1*bs*by*1h*bl|1+1*bs*4y*1j*bl|1+1*bs*4u*bn*1r|1+1*4*2*h*3+1*4*6*7+4k*bs*by*1h*1r|1+1*4*2*h*3+1*4*6*7+47*bs*by*1h*1r|1+1*4*2*h*3+1*4*6*7+1z*bs*by*1h*1r|1+1*4*2*h*3+1*4*6*7+17*bs*by*1h*1r|1+1*4*2*h*3+1*4*6*7+2s*bs*by*1h*1r|1+1*4*6*7+l*bs*4y*1j*1r|1+1*bs*4u*bn*1s|1+1*4*6*7+6b*bs*by*1h*1s|1+1*4*6*7+9*bs*4y*1j*1s|1+1*bs*4u*bn*1t|1+1*4*2*15*3*16+1*4*6*7+3t*4*5*6*7+7*4*6*7+8*bs*by*1h*1t|1+1*4*2*15*3*17+1*4*7+3a*bs*by*1h*1t|1+1*4*2*15*3*18+1*4*7+1n*bs*by*1h*1t|1+1*4*2*15*3*19+1*4*7+13*bs*by*1h*1t|1+1*4*2*15*3*1m+1*4*7+16*bs*by*1h*1t|1+1*4*2*15*3*1n+1*4*7+p*4*6*7+k*bs*by*1h*1t|1+1*4*6*7+9*4*7+6*4*6*7+3*bs*by*1h*1t|1+1*4*6*7+19*bs*by*1h*1t|1+1*4*6*7+1x*bs*by*1h*1t|1+1*4*6*7+27*bs*by*1h*1t|1+1*4*6*7+i*bs*by*1h*1t|1+1*4*6*7+6*4*7+25*4*6*7+1*bs*by*1h*1t|2+2*4*6*7+8*bs*4y*1j*1t|1+1*bs*4u*bn*1u|1+1*bs*by*1h*1u|1+1*bs*4y*1j*1u|1+1*4*1i|1+1*4*5*6*7+9*4*6*7+2*4*1i|1+1*4*6*7+c*4*6*7*1v+1m*4*1i|1+1*4*5*6*7+a*4*1i*1w*1x|1+1*4*5*6*7+f*4*1i*1y*1x|1+1*4*5*6*7+a*4*1i*1z*1x|1+1*4*6*7+9*4*1i*1w*20|1+1*4*2*h*3+1*4*7+12*4*1i*1y*20|1+1*4*2*h*3+1*4*7+1u*4*1i*1y*20|1+1*4*2*h*3+1*4*7+1a*4*6*7+2m*4*1i*1y*20|2+2*4*6*7+l*4*1i*1z*20|1+1*4*6*7+9*4*1i*1w*21|1+1*4*2*h*3+1*4*6*7+15*4*1i*1y*21|1+1*4*6*7+1b*4*1i*1y*21|1+1*4*6*7+7*4*1i*1z*21|1+1*4*6*7+9*4*1i*1w*22|1+1*4*2*h*3+1*4*6*7+1p*4*1i*1y*22|1+1*4*6*7+11*4*1i*1y*22|1+1*4*6*7+7*4*1i*1z*22|1+1*4*7+9*4*1i*1w*23|1+1*4*2*h*3+1*4*7+q*4*1i*1y*23|1+1*4*2*h*3+1*4*7+s*4*1i*1y*23|1+1*4*2*h*3+1*4*7+25*4*1i*1y*23|1+1*4*6*7+7*4*1i*1z*23|1+1*4*7+9*4*1i*1w*24|1+1*4*2*h*3+1*4*6*7+16*4*1i*1y*24|1+1*4*2*h*3+1*4*6*7+1l*4*1i*1y*24|1+1*4*6*7+9*4*1i*1z*24|1+1*4*6*7+9*4*1i*1w*25|1+1*4*26*7+2b*4*1i*1y*25|1+1*4*26*7+2*4*7+q*4*6*7+10*4*7+10*4*6*7+12*4*1i*1y*25|1+1*4*6*7+8*4*1i*1z*25|1+1*4*7+9*4*1i*1w*27|1+1*4*2*15*3*16+1*4*6*7+1s*4*1i*1y*27|1+1*4*2*15*3*17+1*4*6*7+27*4*1i*1y*27|1+1*4*2*15*3*18+1*4*6*7+2j*4*1i*1y*27|1+1*4*2*15*3*19+1*4*6*7+1t*4*1i*1y*27|1+1*4*2*15*3*1m+1*4*6*7+d*4*1i*1y*27|1+1*4*6*7+31*4*1i*1y*27|1+1*4*6*7+1c*6x*6*7+1*4*6*7+1u*4*1i*1y*27|1+1*4*6*7+8*4*1i*1z*27|1+1*4*7+9*4*1i*1w*28|1+1*4*7+3s*4*1i*1y*28|1+1*4*7+1g*4*1i*1y*28|1+1*4*7+1f*4*1i*1y*28|1+1*4*7+8*4*1i*1y*28|5+5*4*6*7+c*4*1i*1z*28|1+1*4*1i|1+1*4*5*6*7+e*4*6*7+1*4*1i|1+1*4*5*7+a*4*1i*29*2a|1+1*4*5*7+f*4*1i*2b*2a|1+1*4*5*7+a*4*1i*2c*2a|1+1*4*7+e*4*1i*29*2d|1+1*4*2*h*3+1*4*6*7+1v*4*1i*2b*2d|1+1*4*2*h*3+1*4*6*7+18*4*1i*2b*2d|1+1*4*2*h*3+1*4*6*7+3e*4*1i*2b*2d|1+1*4*2*h*3+1*4*6*7+27*4*1i*2b*2d|1+1*4*2*h*3+1*4*6*7+1f*4*1i*2b*2d|1+1*4*2*h*3+1*4*6*7+25*4*1i*2b*2d|1+1*4*2*h*3+1*4*6*7+1l*4*1i*2b*2d|1+1*4*6*7+l*4*1i*2c*2d|1+1*4*7+d*4*6*7+o*4*1i*29*2e|1+1*4*6*7+1*4*7+10*4*6*7+u*4*1i*2b*2e|1+1*4*2*h*3+1*4*7+13*4*6*7+1*4*7+1*4*1i*2b*2e|1+1*4*2*q*3+1*4*7+4*4*6*7+1*4*7+j*4*6*7+1*4*1i*2b*2e|1+1*4*2*h*3+1*4*7+p*4*6*7+1*4*1i*2b*2e|1+1*4*2*q*3+1*4*7+k*4*1i*2b*2e|1+1*4*2*h*3+1*4*7+l*4*6*7+1*4*7+1*4*1i*2b*2e|1+1*4*2*q*3+1*4*7+m*4*1i*2b*2e|1+1*4*7+l*4*1i*2c*2e|1+1*4*1i*29*2f|1+1*4*1i*2b*2f|1+1*4*1i*2c*2f|1+1*4*1i|2+2*4*5*6*7+i*4*6*7+2*4*1i|1+1*4*6*7+c*4*6*7*2g+1m*4*1i|4+4*4*5*6*7+a*4*1i*2h*2i|1+1*4*5*6*7+f*4*1i*2j*2i|1+1*4*5*6*7+a*4*1i*2k*2i|1+1*4*6*7+i*4*1i*2h*2l|1+1*4*2*h*3+1*4*6*7+1g*4*1i*2j*2l|1+1*4*2*h*3+1*4*6*7+4u*4*1i*2j*2l|1+1*4*2*h*3+1*4*6*7+2k*4*1i*2j*2l|1+1*4*2*h*3+1*4*6*7+1k*4*1i*2j*2l|1+1*4*2*h*3+1*4*6*7+1a*4*1i*2j*2l|2+2*4*6*7+l*4*1i*2k*2l|1+1*4*7+i*4*6*7+o*4*1i*2h*2m|1+1*4*6*7+o*4*1i*2j*2m|1+1*4*6*7+1*4*7+5*4*6*7+6*4*7+1*4*6*7+8*4*7+2*4*6*7+6*4*7+1*4*6*7+8*4*7+2*4*1i*2j*2m|1+1*4*6*7+1*4*7+5*4*6*7+6*4*7+1*4*6*7+8*4*7+2*4*6*7+6*4*7+1*4*6*7+l*4*7+2*4*1i*2j*2m|1+1*4*6*7+1*4*7+5*4*6*7+6*4*7+1*4*6*7+8*4*7+2*4*6*7+6*4*7+1*4*6*7+h*4*7+2*4*1i*2j*2m|1+1*4*6*7+w*4*1i*2j*2m|1+1*4*6*7+q*4*1i*2j*2m|1+1*4*6*7+r*4*1i*2j*2m|1+1*4*6*7+12*4*1i*2j*2m|1+1*4*6*7+1g*4*1i*2j*2m|1+1*4*6*7+1a*4*1i*2j*2m|1+1*4*6*7+y*4*1i*2j*2m|1+1*4*6*7+m*4*1i*2j*2m|1+1*4*6*7+v*4*1i*2j*2m|1+1*4*6*7+1n*4*1i*2j*2m|1+1*4*7+l*4*1i*2k*2m|2+2*4*1i*2h*2n|1+1*4*1i*2j*2n|1+1*4*1i*2k*2n|1+1*4*1i|2+2*4*5*6*7+6*4*6*7+1*4*5*6*7+a*4*6*7+2*4*1i|1+1*4*6*7+c*4*6*7*2o+1m*4*1i|4+4*4*5*6*7+a*4*1d*2p*2q|1+1*4*5*6*7+f*4*2r*2s*2q|1+1*4*5*6*7+a*4*2t*2u*2q|1+1*4*7+h*4*1d*2p*2v|1+1*4*2*15*3*16+1*4*6*7+c*4*1d*2s*2v|1+1*4*6*7+2h*ba*6*7+1*4*6*7+y*4*2r*2s*2v|2+2*4*6*7+3*4*7+9*4*6*7+1g*4*2r*2s*2v|1+1*4*6*7+20*4*2r*2s*2v|1+1*4*6*7+1e*4*2r*2s*2v|2+2*4*6*7+7*4*2t*2u*2v|1+1*4*1d*2p*2w|1+1*4*7+47*4*6*7+e*4*7+1*4*2r*2s*2w|1+1*4*6*7+8*4*2t*2u*2w|1+1*4*1d*2p*2x|1+1*4*2r*2s*2x|1+1*4*2t*2u*2x|1+1*4*1d*2p*2y|1+1*4*2*15*3*16+1*4*6*7+8q*4*1d*2s*2y|1+1*4*2*1q*3*16+1*4*7+2p*4*6*7+5*4*7+r*4*6*7+23*4*1d*2s*2y|1+1*4*2*1q*3*17+1*4*7+5q*4*6*7+1*4*7+8*4*1d*2s*2y|1+1*4*6*7+a*4*2t*2u*2y|3+3*4*1d*2p*2z|1+1*4*2r*2s*2z|1+1*4*2t*2u*2z|1+1*4*2t|1+1*4*6*7+b*4*2t|1+1*4*6*7+i*4*2t*30*31|2+2*4*2*15*3*16+1*4*6*7+7*4*2t*30*31|1+1*4*2*15*3*17+1*4*6*7+c*4*2t*30*31|1+1*4*6*7+c*4*2t*30*31|1+1*4*6*7+h*4*2t*30*31|1+1*4*6*7+b*4*7+1*4*6*7+2*4*7+1*4*6*7+y*4*2t*30*31|1+1*4*6*7+1c*4*2t*30*31|1+1*4*6*7+z*4*32*33*31|1+1*4*6*7+27*4*32*33*31|1+1*4*6*7+p*4*32*33*31|1+1*4*6*7+d*4*32*33*31|1+1*4*6*7+a*4*32*33*31|1+1*4*6*7+a*4*32*33*31|1+1*4*6*7+14*4*32*33*31|1+1*4*6*7+d*4*32*33*31|2+2*4*6*7+7*4*y*34*31|1+1*4*6*7+6*4*y*34*31|1+1*4*6*7+7*4*y*34*31|1+1*4*6*7+9*4*y*30*35|1+1*4*7+2q*4*32*33*35|1+1*4*6*7+a*4*32*33*35|1+1*4*6*7+9*4*32*33*35|1+1*4*6*7+9*4*32*33*35|1+1*4*7+1z*4*32*33*35|1+1*4*6*7+7*4*y*34*35|1+1*4*6*7+d*4*y*30*36|1+1*4*6*7+24*4*32*33*36|2+2*4*6*7+7*4*y*34*36|1+1*4*6*7+6*4*y*34*36|1+1*4*6*7+7*4*y*34*36|1+1*4*6*7+3*4*y*30*37|1+1*4*7+2q*4*32*33*37|1+1*4*6*7+7*4*y*34*37|1+1*4*6*7+6*4*y*34*37|1+1*4*6*7+7*4*y*34*37|1+1*4*6*7+6*4*y|4+4*4*7+b*4*y*38*39|1+1*4*6*7+7*4*y*38*39|1+1*4*7+1n*4*6*7+2*4*7+1m*4*6*7+1*4*7+6*4*6*7+i*4*3a*3b*39|1+1*4*7+6*4*6*7+8*4*7+4*4*6*7+3*4*7+9*4*6*7+g*4*7+5*4*6*7+4*4*7+e*4*3a*3b*39|1+1*4*6*7+7*4*3c*3d*39|1+1*4*6*7+8*4*3c*38*3e|1+1*4*6*7+1b*4*3a*3b*3e|1+1*4*6*7+y*4*3a*3b*3e|1+1*4*6*7+7*4*3c*3d*3e|1+1*4*6*7+s*4*3c*38*3f|1+1*4*2*h*3+1*4*6*7+s*4*3c*3b*3f|1+1*4*6*7+l*4*3a*3b*3f|1+1*4*6*7+12*4*3a*3b*3f|2+2*4*6*7+7*4*3c*3d*3f|1+1*4*7+f*4*3c*38*3g|1+1*4*2*h*3+1*4*7+12*4*6*7+6*4*7+l*4*6*7+1*4*3c*3b*3g|1+1*4*2*h*3+1*4*6*7+1k*4*3c*3b*3g|1+1*4*2*h*3+1*4*6*7+2i*4*3c*3b*3g|1+1*4*2*h*3+1*4*6*7+q*4*3c*3b*3g|1+1*4*6*7+7*4*3c*3d*3g|1+1*4*3c|1+1*4*6*7+j*4*3c|1+1*4+5*4*3c*3h*3i|1+1*4*2*h*3+1*4*6*7+1j*6x*8h*7+s*4*6*7+1*4*3c*3j*3i|1+1*4*2*h*3+1*4*6*7+2g*4*3c*3j*3i|1+1*4*2*h*3+1*4*7+j*4*6*7+6*4*7+3o*4*6*7+2*4*7+u*4*6*7+1*4*3c*3j*3i|1+1*4*2*h*3+1*4*6*7+1n*4*3c*3j*3i|1+1*4*6*7+7*4*3k*3l*3i|1+1*4*6*7+5*4*3k*3h*3m|1+1*4*7+7*4*6*7+3*4*7+v*4*3n*3j*3m|1+1*4*6*7+2*4*7+1*4*6*7+1*4*7+3*4*6*7+2*4*7+9*4*6*7+1*4*3n*3j*3m|1+1*4*7+3*4*6*7+8*4*7+8*4*6*7+2*4*7+4*4*6*7+1*4*7+b*4*6*7+4*4*7+5*4*3n*3j*3m|1+1*4*6*7+2*4*7+1*4*6*7+r*4*3n*3j*3m|1+1*4*6*7+2*4*7+1*4*6*7+1c*4*3n*3j*3m|1+1*4*6*7+n*4*3n*3j*3m|1+1*4*6*7+5*4*7+u*4*3n*3j*3m|1+1*4*6*7+w*4*3n*3j*3m|1+1*4*6*7+1a*4*3n*3j*3m|1+1*4*7+h*4*3n*3j*3m|1+1*4*7+1*4*6*7+5*4*7+1s*4*6*7+1*4*7+b*4*6*7+3*4*3n*3j*3m|1+1*4*7+1*4*6*7+6*4*7+2*4*6*7+1*4*7+n*4*6*7+8*4*7+13*4*3n*3j*3m|1+1*4*6*7+7*4*3k*3l*3m|1+1*4*6*7+a*4*3k*3h*3o|1+1*4*2*h*3+1*4*7+r*4*6*7+1*4*7+3b*4*6*7+9*4*7+m*4*3k*3j*3o|1+1*4*2*h*3+1*4*6*7+n*4*3k*3j*3o|1+1*4*2*h*3+1*4*6*7+27*4*3k*3j*3o|1+1*4*2*h*3+1*4*6*7+2g*4*3k*3j*3o|1+1*4*2*h*3+1*4*6*7+2b*4*3k*3j*3o|1+1*4*2*h*3+1*4*6*7+1n*6x*6*7+1c*4*3k*3j*3o|1+1*4*6*7+7*4*3k*3l*3o|1+1*4*6*7+4*4*3k|4+4*4*7+c*4*3k*3p*3q|1+1*4*6*7+1l*4*7+r*4*6*7+7*4*3k*3r*3q|1+1*4*6*7+1h*4*7+1*4*6*7+1*4*7+b*4*6*7+6*4*3k*3r*3q|1+1*4*6*7+43*4*7+16*4*6*7+1*4*3k*3r*3q|1+1*4*6*7+1p*4*5*6*7+b*4*6*7+7*4*3k*3r*3q|1+1*4*6*7+1v*4*7+c*4*3k*3r*3q|1+1*4*6*7+3*4*3k*3r*3q|1+1*4*6*7+10*4*3k*3r*3q|1+1*4*7+b*4*3k*3s*3q|1+1*4*7+b*4*3k*3p*3t|1+1*4*7+8c*4*3k*3r*3t|1+1*4*7+c*4*3k*3s*3t|1+1*br*6*7+2*4*3k|1+1*4*6*7+11*4*3k|1+1*4*6*7+1p*4*3k|1+1*4*6*7+1v*4*3k|1+1*4*6*7+1n*4*3k|1+1*4*6*7+1r*4*3k|1+1*4*2*3u*3+1*4*6*7+c*4*3k|1+1*4*2*3u*3+1*4*6*7+c*4*3k|1+1*4*6*7+1n*4*3k|1+1*4*6*7+11*4*3k|1+1*4*6*7+10*4*3k|1+1*4*6*7+1h*4*3k|1+1*4*6*7+17*4*3k|1+1*4*6*7+1x*4*3k|2+2*4*6*7+b*4*3k|1+1*4*6*7+18*4*3k|1+1*4*2*15*3*16+1*4*6*7+12*4*3k|1+1*4*6*7+1x*4*3k|1+1*4*6*7+1d*4*3k|2+2*4*6*7+g*4*3k|1+1*4*6*7+14*4*3k|1+1*4*6*7+r*4*3k|1+1*4*6*7+1k*4*3k|1+1*4*6*7+s*4*3k|1+1*4*6*7+h*4*3k|1+1*4*6*7+18*4*3k|1+1*4*6*7+2*4*3v*7+2s*4*3k|1+1*4*6*7+1u*4*3k|1+1*4*6*7+z*4*3k|2+2*4*6*7+g*4*3k|1+1*4*5*6*7*3w+q*4*6*7+f*4*3k|5+5*4*6*7+a*4*3k*3x*3y|1+1*4*6*7+f*4*3z*40*3y|1+1*4*5*6*7*41+c*4*42*43*3y|1+1*4*7+6*4*6*7+9*4*7+1*4*42*3x*44|1+1*4*7+8*4*42*3x*44|1+1*4*2*h*3+1*4*6*7+24*4*42*40*44|1+1*4*2*h*3+1*4*6*7+2a*4*42*40*44|1+1*4*2*h*3+1*4*6*7+1q*4*42*40*44|1+1*4*2*h*3+1*4*6*7+1c*4*42*40*44|1+1*4*2*h*3+1*4*6*7+1l*4*42*40*44|1+1*4*7+i*4*42*43*44|1+1*4*7+g*4*42*3x*45|1+1*4*2*15*3*16+1*4*6*7+2r*4*42*40*45|1+1*4*2*15*3*17+1*4*6*7+1l*4*42*40*45|1+1*4*2*15*3*18+1*4*6*7+1c*4*42*40*45|1+1*4*2*15*3*19+1*4*6*7+v*4*42*40*45|1+1*4*6*7+1e*4*3z*40*45|1+1*4*6*7+2x*4*3z*40*45|2+2*4*42*43*45|1+1*4*6*7+n*4*42*3x*46|1+1*4*6*7+1p*4*3z*40*46|1+1*4*6*7+1*4*3z*40*46|1+1*4*6*7+1*4*3z*40*46|2+2*4*5*6*7*41*3w+g*4*3z*40*46|1+1*4*2*15*3*16+1*4*5*6*7+6*4*3z*40*46|1+1*4*2*15*3*17+1*4*5*6*7+7*4*3z*40*46|1+1*4*2*15*3*18+1*4*5*6*7+9*4*3z*40*46|1+1*4*2*15*3*19+1*4*5*6*7+l*4*3z*40*46|2+2*4*5*6*7*41*3w+8*4*3z*40*46|1+1*4*5*6*7+l*4*3z*40*46|2+2*4*5*6*7*41*3w+b*4*3z*40*46|1+1*4*6*7+n*4*3z*40*46|5+5*4*42*43*46|1+1*4*6*7+g*4*42|4+4*4*6*7+f*4*42*47*48|1+1*4*2*h*3+1*4*6*7+19*4*42*49*48|1+1*4*2*h*3+1*4*5*6*7+4*4*6*7+1f*4*42*49*48|1+1*4*2*h*3+1*4*6*7+b*4*42*49*48|1+1*4*5*4a+6*4*4a+a*4*5*4a+5*4*4a+3*4*6*4a+1*4*4a+e*4*5*4a+3*4*4a+q*4*42*49*48|1+1*4*4a+g*4*5*4a+6*4*4a+1*4*5*4a+4*4*4a+1*4*42*49*48|1+1*4*4a+9*4*42*49*48|1+1*4*6*7+o*4*42*49*48|1+1*4*5*6*7+b*4*6*7+19*4*42*49*48|2+2*4*2*h*3+1*4*6*7+2c*4*42*49*48|1+1*4*6*7+8*4*42*4b*48|1+1*4*42*47*4c|1+1*4*42*49*4c|1+1*4*42*4b*4c|1+1*4*42*47*4d|1+1*4*42*49*4d|1+1*4*42*4b*4d|1+1*4*42*47*4e|1+1*4*42*49*4e|1+1*4*42*4b*4e|1+1*4*42|1+1*4*6*7+2b*4*42|4+4*4*6*7+z*4*4f*4g*4h|1+1*4*6*7+m*4*4i*4j*4h|1+1*4*6*7+9*4*4i*4j*4h|1+1*4*6*7+5*4*4i*4j*4h|1+1*4*2*h*3+1*4*6*7+1h*4*4i*4j*4h|1+1*4*2*h*3+1*4*6*7+1j*4*4i*4j*4h|1+1*4*6*7+7*4*3k*4k*4h|1+1*4*6*7+f*4*4f*4g*4l|1+1*4*2*h*3+1*4*6*7+2d*4*4f*4j*4l|1+1*4*2*h*3+1*4*6*7+3q*4*4f*4j*4l|1+1*4*2*h*3+1*4*6*7+1q*4*4f*4j*4l|1+1*4*2*h*3+1*4*6*7+13*4*4f*4j*4l|1+1*4*2*h*3+1*4*6*7+18*4*4f*4j*4l|1+1*4*6*7+7*4*3k*4k*4l|1+1*4*6*7+b*4*4f*4g*4m|1+1*4*2*h*3+1*4*6*7+2m*4*4f*4j*4m|1+1*4*2*h*3+1*4*6*7+u*4*4f*4j*4m|1+1*4*2*h*3+1*4*4i*4j*4m|1+1*4*6*7+7*4*3k*4k*4m|1+1*4*6*7+9*4*4f*4g*4n|1+1*4*2*h*3+1*4*6*7+2p*4*4f*4j*4n|1+1*4*6*7+7*4*3k*4k*4n|1+1*4*6*7+d*4*4f*4g*4o|1+1*4*2*h*3+1*4*6*7+3g*4*4f*4j*4o|1+1*4*2*h*3+1*4*6*7+x*4*4f*4j*4o|1+1*4*2*h*3+1*4*6*7+7y*4*4f*4j*4o|1+1*4*2*h*3+1*4*6*7+1r*4*4f*4j*4o|1+1*4*2*h*3+1*4*6*7+2b*4*4f*4j*4o|1+1*4*6*7+7*4*3k*4k*4o|1+1*4*6*7+e*4*4f*4g*4p|1+1*4*2*h*3+1*4*6*7+4z*4*4f*4j*4p|1+1*4*2*h*3+1*4*6*7+1p*4*4f*4j*4p|1+1*4*6*7+7*4*3k*4k*4p|1+1*4*6*7+d*4*4f*4g*4q|1+1*4*2*h*3+1*4*6*7+1p*4*4f*4j*4q|1+1*4*2*h*3+1*4*6*7+1r*4*4f*4j*4q|1+1*4*2*h*3+1*4*6*7+p*4*4f*4j*4q|1+1*4*2*h*3+1*4*6*7+25*4*4f*4j*4q|1+1*4*6*7+7*4*3k*4k*4q|1+1*4*3k|1+1*4*5*7+i*4*5*6*7+1*4*3k|5+5*4r*4*2*3+1*4*5*6*7+6*4*3c*4s*4t|1+1*4r*4*2*3+1*4*5*6*7+3*4*4u*4v*4t|1+1*4r*4*2*3+1*4*5*6*7+7*4*4w*4x*4t|1+1*4r*4*2*3+1*4*5*6*7+a*4*4y*4z*4t|1+1*1*4*2*3+1*4*7+9*4*3c*4s*50|1+1*1*4*2*3+1*4*6*7+1*4*7+k*4*4u*4v*50|1+1*1*4*2*3+1*4*7+y*4*4w*4x*50|1+1*1*4*2*3+1*4*7+v*4*4w*4x*50|1+1*1*4*2*3+1*4*6*7+7*4*4y*4z*50|1+1*1*4*2*3+1*4*7+7*4*6*7+5*4*7+1*4*3c*4s*51|1+1*1*4*2*3+1*4*6*7+z*4*4u*4v*51|1+1*1*4*2*3+1*4*7+x*4*4w*4x*51|1+1*1*4*2*3+1*4*7+7*4*4y*4z*51|1+1*1*4*2*3+1*4*7+8*4*6*7+4*4*7+1*4*3c*4s*52|1+1*1*4*2*3+1*4*6*7+v*4*4u*4v*52|1+1*1*4*2*3+1*4*7+z*4*4w*4x*52|1+1*1*4*2*3+1*4*7+7*4*4y*4z*52|1+1*1*4*2*3+1*4*6*7+s*4*3c*4s*53|1+1*1*4*2*h*3+1*4*6*7+1*4*7+b*4*6*7+m*4*7+k*4*6*7+4*4*7+b*4*4u*4v*53|1+1*1*4*2*h*3+1*4*6*7+1r*4*4u*4v*53|1+1*1*4*2*3+1*4*7+12*4*4w*4x*53|1+1*1*4*2*3+1*4*7+7*4*4y*4z*53|1+1*1*4*2*3+1*4*7+d*4*3c*4s*54|1+1*1*4*2*3+1*4*6*7+w*4*4u*4v*54|1+1*1*4*2*3+1*4*7+l*4*6*7+2*4*4w*4x*54|1+1*1*4*2*3+1*4*7+12*4*4w*4x*54|1+1*1*4*2*3+1*4*7+7*4*4y*4z*54|1+1*1*4*2*3+1*4*7+d*4*3c*4s*55|1+1*1*4*2*3+1*4*6*7+w*4*4u*4v*55|1+1*1*4*2*3+1*4*7+12*4*4w*4x*55|1+1*1*4*2*3+1*4*7+7*4*4y*4z*55|1+1*1*4*2*3+1*4*6*7+6*4*3c*4s*56|1+1*1*4*2*3+1*4*7+1k*4*4u*4v*56|1+1*1*4*2*3+1*4*7+y*4*4w*4x*56|1+1*1*4*2*3+1*4*7+v*4*4w*4x*56|1+1*1*4*2*3+1*4*7+7*4*4y*4z*56|1+1*1*4*2*3+1*4*7+9*4*6*7+6*4*7+1*4*3c*4s*57|1+1*1*4*2*3+1*4*6*7+34*4*4u*4v*57|1+1*1*4*2*3+1*4*7+r*4*4w*4x*57|1+1*1*4*2*3+1*4*6*7+2*4*7+s*4*4w*4x*57|1+1*1*4*2*3+1*4*7+16*4*4w*4x*57|1+1*1*4*2*3+1*4*6*7+2*4*7+1*4*4w*4x*57|1+1*1*4*2*3+1*4*7+8*4*4w*4x*57|1+1*1*4*2*3+1*4*7+14*4*4w*4x*57|1+1*1*4*2*3+1*4*7+5*4*4w*4x*57|1+1*1*4*2*3+1*4*7+7*4*4y*4z*57|1+1*1*4*2*3+1*4*7+7*4*6*7+1*4*3c*4s*58|1+1*1*4*2*3+1*4*7+y*4*4u*4v*58|1+1*1*4*2*3+1*4*7+g*4*4w*4x*58|1+1*1*4*2*3+1*4*7+g*4*4w*4x*58|1+1*1*4*2*3+1*4*7+n*4*4w*4x*58|1+1*1*4*2*3+1*4*7+19*4*4w*4x*58|1+1*1*4*2*3+1*4*7+5*4*4w*4x*58|1+1*1*4*2*3+1*4*7+a*4*4w*4x*58|1+1*1*4*2*3+1*4*7+1d*4*4w*4x*58|1+1*1*4*2*3+1*4*7+5*4*6*7+1*4*4w*4x*58|1+1*1*4*2*3+1*4*7+7*4*4y*4z*58|1+1*1*4*2*3+1*4*7+5*4*6*7+3*4*7+a*4*3c*4s*59|1+1*1*4*2*3+1*4*7+1f*4*4u*4v*59|1+1*1*4*2*3+1*4*7+g*4*4w*4x*59|1+1*1*4*2*3+1*4*7+g*4*4w*4x*59|1+1*1*4*2*3+1*4*7+w*4*4w*4x*59|1+1*1*4*2*3+1*4*7+1a*4*4w*4x*59|1+1*1*4*2*3+1*4*7+4*4*4w*4x*59|1+1*1*4*2*3+1*4*7+9*4*4w*4x*59|1+1*1*4*2*3+1*4*7+1e*4*4w*4x*59|1+1*1*4*2*3+1*4*7+5*4*4w*4x*59|1+1*1*4*2*3+1*4*7+7*4*4y*4z*59|1+1*1*4*2*3+1*4*7+a*4*6*7+b*4*7+1*4*3c*4s*5a|1+1*1*4*2*3+1*4*6*7+1*4*7+s*4*6*7+5*4*7+f*4*4u*4v*5a|1+1*1*4*2*3+1*4*7+10*4*4w*4x*5a|1+1*1*4*2*3+1*4*7+13*4*4w*4x*5a|1+1*1*4*2*3+1*4*7+7*4*4y*4z*5a|1+1*1*4*2*3+1*4*7+a*4*6*7+m*4*7+1*4*3c*4s*5b|1+1*1*4*2*3+1*4*6*7+1r*4*4u*4v*5b|1+1*1*4*2*3+1*4*7+16*4*4w*4x*5b|1+1*1*4*2*3+1*4*7+7*4*4y*4z*5b|1+1*1*4*2*3+1*4*7+9*4*3c*4s*5c|1+1*1*4*2*3+1*4*6*7+1l*4*4u*4v*5c|1+1*1*4*2*3+1*4*7+c*4*6*7+2*4*7+1*4*6*7+2*4*7+3*4*6*7+2*4*7+2*4*4w*4x*5c|1+1*1*4*2*3+1*4*7+y*4*6*7+1*4*7+1*4*6*7+1*4*7+6*4*4w*4x*5c|1+1*1*4*2*3+1*4*7+g*4*4w*4x*5c|1+1*1*4*2*3+1*4*7+7*4*4y*4z*5c|1+1*1*4*2*3+1*4*6*7+7*4*3c*4s*5d|1+1*1*4*2*h*3+1*4*6*7+1n*4*4u*4v*5d|1+1*1*4*2*h*3+1*4*7+z*4*4u*4v*5d|1+1*1*4*2*3+1*4*7+15*4*4w*4x*5d|1+1*1*4*2*3+1*4*7+v*4*4w*4x*5d|1+1*1*4*2*3+1*4*7+q*4*4w*4x*5d|1+1*1*4*2*3+1*4*7+13*4*4w*4x*5d|1+1*1*4*2*3+1*4*7+6*4*4w*4x*5d|1+1*1*4*2*3+1*4*7+7*4*4y*4z*5d|1+1*1*4*2*3+1*4*3c*4s*5e|1+1*1*4*2*3+1*4*6*7+1g*4*4u*4v*5e|1+1*1*4*2*3+1*4*6*7+t*4*4w*4x*5e|1+1*1*4*2*3+1*4*6*7+7*4*4y*4z*5e|1+1*1*4*2*3+1*4*6*7+i*4*3c*4s*5f|1+1*1*4*2*3+1*4*6*7+n*4*4u*4v*5f|1+1*1*4*2*3+1*4*6*7+b*4*4w*4x*5f|1+1*1*4*2*3+1*4*6*7+7*4*4y*4z*5f|1+1*1*4*2*3+1*4*6*7+e*4*3c*4s*5g|1+1*1*4*2*3+1*4*6*7+h*4*4u*4v*5g|1+1*1*4*2*h*3+1*4*6*7+25*4*4u*4v*5g|1+1*1*4*2*3+1*4*4u*4v*5g|1+1*1*4*2*3+1*4*6*7+h*4*4u*4v*5g|1+1*1*4*2*h*3+1*4*6*7+h*4*4u*4v*5g|1+1*1*4*2*3+1*4*6*7+h*4*4w*4x*5g|1+1*1*4*2*3+1*4*6*7+k*4*4w*4x*5g|1+1*1*4*2*3+1*4*4w*4x*5g|1+1*1*4*2*3+1*4*4w*4x*5g|1+1*1*4*2*3+1*4*4w*4x*5g|1+1*1*4*2*3+1*4*4w*4x*5g|1+1*1*4*2*3+1*4*6*7+a*4*4w*4x*5g|1+1*1*4*2*3+1*4*6*7+i*4*4w*4x*5g|1+1*1*4*2*3+1*4*6*7+7*4*4y*4z*5g|1+1*1*4*2*3+1*4*4y|1+1*1*4*2*3+1*4*6*7+f*4*4y|1+1*1*4*2*3+1*4*4y|1+1*1*4*2*3+1*4*4y*5h*5i|1+1*1*4*2*3+1*4*6*7+7*4*4y*5j*5i|1+1*1*4*2*3+1*4*6*7+7*4*4y*5k*5i|1+1*1*4*2*3+1*4*6*7+9*4*4y*5l*5i|1+1*1*4*2*3+1*4*6*7+6*4*4y*5m*5i|1+1*1*4*2*3+1*4*6*7+a*4*4y*5h*5n|1+1*1*4*2*3+1*4*6*7+3*4*4y*5j*5n|1+1*1*4*2*3+1*4*6*7+3*4*4y*5k*5n|1+1*1*4*2*3+1*4*6*7+3*4*4y*5l*5n|1+1*1*4*2*3+1*4*6*7+3*4*4y*5m*5n|1+1*1*4*2*3+1*4*6*7+d*4*4y*5h*5o|1+1*1*4*2*3+1*4*6*7+8*4*4y*5h*5o|1+1*1*4*2*3+1*4*6*7+3*4*4y*5j*5o|1+1*1*4*2*3+1*4*6*7+2*4*4y*5k*5o|1+1*1*4*2*3+1*4*6*7+3*4*4y*5l*5o|1+1*1*4*2*3+1*4*6*7+3*4*4y*5m*5o|1+1*1*4*2*3+1*4*6*7+d*4*4y*5h*5p|1+1*1*4*2*3+1*4*6*7+c*4*4y*5h*5p|1+1*1*4*2*3+1*4*6*7+3*4*4y*5j*5p|1+1*1*4*2*3+1*4*6*7+2*4*4y*5k*5p|1+1*1*4*2*3+1*4*6*7+3*4*4y*5l*5p|1+1*1*4*2*3+1*4*6*7+3*4*4y*5m*5p|1+1*1*4*2*3+1*4*6*7+h*4*4y*5h*5q|1+1*1*4*2*3+1*4*6*7+8*4*4y*5h*5q|1+1*1*4*2*3+1*4*6*7+2*4*4y*5j*5q|1+1*1*4*2*3+1*4*6*7+2*4*4y*5k*5q|1+1*1*4*2*3+1*4*6*7+3*4*4y*5l*5q|1+1*1*4*2*3+1*4*6*7+3*4*4y*5m*5q|1+1*1*4*2*3+1*4*6*7+i*4*4y*5h*5r|1+1*1*4*2*3+1*4*6*7+c*4*4y*5h*5r|1+1*1*4*2*3+1*4*6*7+2*4*4y*5j*5r|1+1*1*4*2*3+1*4*6*7+2*4*4y*5k*5r|1+1*1*4*2*3+1*4*6*7+2*4*4y*5l*5r|1+1*1*4*2*3+1*4*6*7+3*4*4y*5m*5r|1+1*1*4*2*3+1*4*6*7+b*4*4y|1+1*1*4*2*3+1*4*4y|1+1*1*4*2*3+1*4*4y|1+1*1*4*2*3+1*4*4y|1+1*1*4*2*3+1*4*6*7+4*4*4y*5s*5t|1+1*1*4*2*3+1*4*6*7+l*4*4y*5u*5t|1+1*1*4*2*h*3+1*4*6*7+1j*4*4y*5u*5t|1+1*1*4*2*h*3+1*4*6*7+x*4*4y*5u*5t|1+1*1*4*2*h*3+1*4*6*7+e*4*4y*5u*5t|1+1*1*4*2*h*3+1*4*6*7+1p*4*4y*5u*5t|1+1*1*4*2*3+1*4*4y*5u*5t|1+1*1*4*2*3+1*4*6*7+7*4*4y*5v*5t|1+1*1*4*2*3+1*4*6*7+n*4*4y|1+1*1*4*2*3+1*4*4y|1+1*1*4*2*3+1*4*6*7+1s*4*4y*5w*5x|1+1*1*4*2*h*3+1*4*6*7+2j*4*4y*5y*5x|1+1*1*4*2*h*3+1*4*6*7+3i*4*4y*5y*5x|1+1*1*4*2*3+1*4*6*7+7*4*4y*5z*5x|1+1*1*4*2*3+1*4*6*7+1b*4*4y*5w*60|1+1*1*4*2*3+1*4*6*7+1i*4*4y*5y*60|1+1*1*4*2*h*3+1*4*6*7+h*4*4y*5y*60|1+1*1*4*2*3+1*4*6*7+7*4*4y*5z*60|1+1*1*4*2*3+1*4*6*7+7*4*4y|1+1*1*4*2*3+1*4*6*7+5*4*4y*61*62|1+1*1*4*2*3+1*4*6*7+28*4*4y*63*62|1+1*1*4*2*3+1*4*6*7+7*4*4y*64*62|1+1*1*4*2*3+1*4*4y*61*65|1+1*1*4*2*3+1*4*6*7+2b*4*4y*63*65|1+1*1*4*2*3+1*4*6*7+7*4*4y*64*65|1+1*1*4*2*3+1*4*6*7+7*4*4y*61*66|1+1*1*4*2*3+1*4*6*7+p*4*4y*63*66|1+1*1*4*2*3+1*4*6*7+34*4*4y*63*66|1+1*1*4*2*3+1*4*6*7+7*4*4y*64*66|1+1*1*4*2*3+1*4*4y*61*67|1+1*1*4*2*3+1*4*4y*63*67|1+1*1*4*2*3+1*4*4y*64*67|1+1*1*4*2*3+1*4*6*7+g*4*4y|1+1*1*4*2*3+1*4*4y|1+1*1*4*2*3+1*4*6*7+f*4*4y*68*69|1+1*1*4*2*3+1*4*6*7+1r*4*4y*6a*69|1+1*1*4*2*3+1*4*6*7+7*4*4y*6b*69|1+1*1*4*2*3+1*4*4y*68*6c|1+1*1*4*2*3+1*4*6*7+35*4*4y*6a*6c|1+1*1*4*2*3+1*4*6*7+c*4*4y*6a*6c|1+1*1*4*2*3+1*4*6*7+7*4*4y*6b*6c|1+1*1*4*2*3+1*4*4y*68*6d|1+1*1*4*2*3+1*4*6*7+1i*4*4y*6a*6d|1+1*1*4*2*3+1*4*6*7+7*4*4y*6b*6d|1+1*1*4*2*3+1*4*4y*68*6e|1+1*1*4*2*3+1*4*6*7+1z*4*4y*6a*6e|1+1*1*4*2*3+1*4*6*7+7*4*4y*6b*6e|1+1*1*4*2*3+1*4*4y*6b*6e|1+1*1*4*2*3+1*4*4y*68*6f|1+1*1*4*2*3+1*4*6*7+o*4*4y*6a*6f|1+1*1*4*2*3+1*4*6*7+1u*4*4y*6a*6f|1+1*1*4*2*3+1*4*6*7+7*4*4y*6b*6f|1+1*1*4*2*3+1*4*4y|1+1*1*4*2*3+1*4*5*6*7+8*4*6*7+1*4*4y|1+1*1*4*2*3+1*4*4y|1+1*1*4*2*3+1*4*6*7+8*4*4y*6g*6h|1+1*1*4*2*h*3+1*4*6*7+13*4*4y*6i*6h|1+1*1*4*2*3+1*4*6*7+10*4*4y*6i*6h|1+1*1*4*2*h*3+1*4*6*7+2x*4*4y*6i*6h|1+1*1*4*2*h*3+1*4*6*7+33*4*4y*6i*6h|1+1*1*4*2*h*3+1*4*6*7+z*4*4y*6i*6h|1+1*1*4*2*h*3+1*4*6*7+p*4*4y*6i*6h|1+1*1*4*2*h*3+1*4*6*7+25*4*4y*6i*6h|1+1*1*4*2*h*3+1*4*6*7+1c*4*4y*6i*6h|1+1*1*4*2*h*3+1*4*7+v*4*6*7+1*4*7+7*4*6*7+1*4*7+2*4*6*7+1*4*7+c*4*4y*6i*6h|1+1*1*4*2*h*3+1*4*7+1d*4*6*7+1*4*4y*6i*6h|1+1*1*4*2*h*3+1*4*6*7+2w*4*4y*6i*6h|1+1*1*4*2*h*3+1*4*6*7+z*4*4y*6i*6h|1+1*1*4*2*3+1*4*4y*6i*6h|1+1*1*4*2*3+1*4*6*7+7*4*4y*6j*6h|1+1*1*4*2*3+1*4*6*7+7*4*4y*6g*6k|1+1*1*4*2*3+1*4*7+v*4*4y*6i*6k|1+1*1*4*2*3+1*4*6*7+a*4*4y*6i*6k|1+1*1*4*2*3+1*4*4y*6i*6k|1+1*1*4*2*3+1*4*6*7+7*4*4y*6j*6k|1+1*1*4*2*3+1*4*6*7+6*4*4y*6g*6l|1+1*1*4*2*3+1*4*7+28*4*4y*6i*6l|1+1*1*4*2*3+1*4*4y*6i*6l|1+1*1*4*2*3+1*4*6*7+7*4*4y*6j*6l|1+1*1*4*2*3+1*4*6*7+g*4*4y*6g*6m|1+1*1*4*2*3+1*4*6*7+r*4*4y*6g*6m|1+1*1*4*2*3+1*4*6*7+2h*4*4y*6i*6m|1+1*1*4*2*3+1*4*4y*6i*6m|1+1*1*4*2*3+1*4*6*7+7*4*4y*6j*6m|1+1*1*4*2*3+1*4*6*7+9*4*4y|1+1*1*4*2*3+1*4*4y|1+1*1*4*2*3+1*4*6*7+14*4*4y*6n*6o|1+1*1*4*2*3+1*4*6*7+1u*4*4y*6p*6o|1+1*1*4*2*3+1*4*6*7+7*4*4y*6q*6o|1+1*1*4*2*3+1*4*6*7+d*4*4y*6n*6r|1+1*1*4*2*3+1*4*6*7+x*4*4y*6p*6r|1+1*1*4*2*h*3+1*4*6*7+1b*4*4y*6p*6r|1+1*1*4*2*3+1*4*6*7+7*4*4y*6q*6r|1+1*1*4*2*3+1*4*6*7+t*4*4y*6n*6s|1+1*1*4*2*3+1*4*4y*6p*6s|1+1*1*4*2*3+1*4*6*7+7*4*4y*6q*6s|1+1*1*4*2*3+1*4*6*7+8*4*4y*6n*6t|1+1*1*4*2*h*3+1*4*6*7+1y*4*4y*6p*6t|1+1*1*4*2*h*3+1*4*6*7+2q*4*4y*6p*6t|1+1*1*4*2*3+1*4*6*7+7*4*4y*6q*6t|1+1*1*4*2*3+1*4*6*7+a*7m*6*7+2*7m*8h*7*3w+u*7m*4y*6n*6u|1+1*1*7m*2*3+1*7m*8h*7*3w+j*4*4y*6n*6u|1+1*1*4*2*3+1*4*6*7+12*6x*4y*6p*6u|1+1*1*6x*2*h*3+1*6x*6*7+25*6x*4y*6p*6u|1+1*1*6x*2*h*3+1*6x*6*7+41*7m*6*7+3*6x*6*7+1j*6x*8h*7*3w+w*6x*4y*6p*6u|1+1*1*6x*2*h*3+1*7m*6*7+10*6x*6*7+1b*7m*6*7+k*6x*6*7+p*7m*6*7+2c*4*4y*6p*6u|1+1*1*4*2*3+1*4*6*7+7*4*4y*6q*6u|1+1*1*4*2*3+1*4*4y*6n*6v|1+1*1*4*2*3+1*4*4y*6p*6v|1+1*1*4*2*3+1*4*4y*6q*6v|1+1*1*4*2*3+1*6x*6*7+m*6x|1+1*1*6x*2*3+1*6x|1+1*6x*6*7+5*6x*7d*7e|1+1*6x*6*7+y*6x*7f*7e|1+1*6x*6*7+7*6x*7g*7e|1+1*6x*6*7+d*6x*7d*7h|1+1*6x*6*7+d*6x*7f*7h|1+1*6x*6*7+10*6x*7f*7h|1+1*6x*2*h*3+1*6x*6*7+6*6x*7f*7h|1+1*6x*2*h*3+1*6x*6*7+9*6x*7f*7h|1+1*6x*2*h*3+1*6x*6*7+9*6x*7f*7h|2+2*6x*6*7+7*6x*7g*7h|1+1*7m*5*6*7+a*6x|1+1*6x*6*7+7*7m*6*7+5*6x*6y*6z|1+1*6x*6*7+1y*7m*6*7+1*7m*70*6z|1+1*6x*6*7+15*7m*6*7+1u*6x*70*6z|1+1*6x*2*h*3+1*6x*6*7+o*7m*6*7+2*6x*70*6z|1+1*6x*2*h*3+1*6x*6*7+j*6x*70*6z|1+1*6x*2*h*3+1*6x*6*7+c*6x*70*6z|1+1*6x*2*h*3+1*6x*6*7+t*7m*6*7+n*6x*6*7+1*7m*6*7+1m*6x*70*6z|3+3*6x*6*7+7*6x*71*6z|1+1*7m*6*7+2q*6y*ap|1+1*7m*6*7+47*70*ap|1+1*7m*6*7+3d*7m*70*ap|1+1*7m+2p*7m*70*ap|1+1*7m+p*7m*70*ap|1+1*7m+19*7m*70*ap|1+1*7m+12*7m*70*ap|1+1*7m+u*7m*70*ap|1+1*7m*6*7+7*71*ap|1+1*7m*6*7+k*6y*8f|1+1*6x+7t*70*8f|1+1*6x*6*7+7*71*8f|1+1*7m*5*6*7+f*6x|1+1*7m*6*7+g*7m*76*b5|1+1*7m*2*h*3+1*7m*6*7+1d*76*b5|1+1*7m*6*7+8*7m*7+15*7m*6*7+6*7m*7+c*7m*6*7+1*7m*78*b5|1+1*7m*7+u*7m*6*7+d*7m*78*b5|1+1*7m*2*h*3+1*7m*6*7+36*7m*78*b5|1+1*7m*2*h*3+1*7m*6*7+1y*7m*78*b5|1+1*7m*2*h*3+1*7m*6*7+1f*7m*78*b5|1+1*7m*2*h*3+1*7m*6*7+f*7m*78*b5|1+1*7m*2*h*3+1*7m*6*7+e*7m*78*b5|1+1*7m*2*h*3+1*7m*6*7+9*7m*78*b5|1+1*7m*2*h*3+1*7m*6*7+d*7m*78*b5|1+1*7m*2*h*3+1*7m*6*7+1j*7m*78*b5|1+1*7m*2*h*3+1*7m*6*7+12*7m*78*b5|1+1*7m*2*h*3+1*7m*6*7+2h*7m*78*b5|1+1*7m*2*h*3+1*7m*6*7+g*7m*78*b5|1+1*7m*2*h*3+1*7m*6*7+g*7m*78*b5|1+1*7m*2*h*3+1*7m*6*7+m*7m*78*b5|1+1*7m*2*h*3+1*7m*6*7+9*7m*7+1g*7m*78*b5|1+1*78*b5|1+1*7m*7+7*79*b5|1+1*7m*6*7+18*6x*76*77|1+1*7m*2*15*3*16+1*7m*6*7+17*7m*78*77|1+1*7m*2*15*3+1*7m*7+u*7m*6*7+8*7m*78*77|1+1*7m*6*7+1q*7m*78*77|1+1*7m*6*7+4*7l*78*77|1+1*7m*2*15*3*16+1*7m*6*7+y*7m*78*77|1+1*7m*2*15*3+1*7m*6*7+d*7m*7+t*7m*6*7+p*7m*78*77|1+1*7m*2*15*3+1*7m*6*7+a*7m*7+s*7m*6*7+c*7m*78*77|1+1*7m*6*7+1e*7m*78*77|1+1*6x*78*77|1+1*7m*6*7+7*6x*79*77|1+1*4*4y|1+1*1*4*2*3+1*7m*6*7+29|1+1*7m*5*6*7+2o|1+1*7m|c+9q*7m+u*7m*7n+2u*7m|2+1u*7m+c*7m*6*7+4*7m|3+2f*7m+h*7m*5+h*7m|5+8i*7m+g*7m*5+l*7m|8+c5*7m+i*7m*5+i*7m|b+ds*7m+g*7m*5+i*7m|c+d5*7m+e*7m*5+k*7m|l+jp*7m*5*6*7+29*7m|2+2*7m*5*7+g*7m|1+1*1*7m*2*3+1*7m*6*7+g*7m*83*7o*7p|1+1*1*7m*2*3+1*7m*6*7+2z*7m*83*7q*7p|1+1*1*7m*2*3+1*7m*6*7+7*7m*84*7r*7p|1+1*1*7m*2*3+1*7m*6*7+m*7m*83*7o*7s|1+1*1*7m*2*15*3*16+1*7m*6*7+1m*7m*83*7q*7s|1+1*1*7m*2*15*3*17+1*7m*6*7+2g*7m*83*7q*7s|1+1*1*7m*2*15*3*18+1*7m*6*7+28*7m*83*7q*7s|1+1*1*7m*2*15*3*19+1*7m*6*7+2j*7m*83*7q*7s|1+1*1*7m*2*15*3*1m+1*7m*6*7+1f*7m*83*7q*7s|1+1*1*7m*2*15*3+1*7m*6*7+12*7m*83*7q*7s|1+1*1*7m*2*3+1*7m*6*7+7*7m*84*7r*7s|1+1*1*7m*2*3+1*7m*6*7+2*7m*83*7o*7t|1+1*1*7m*2*3+1*7m+13*7m*83*7q*7t|1+1*1*7m*2*3+1*7m*6*7+7*7m*84*7r*7t|1+1*7m*7+4*83*7o*85|1+1*7m+m*7m*6*7+4*7m+2*7m*6*7+1*7m+4*83*7q*85|1+1*7m*7+7*84*7r*85|1+1*1*7m*2*3+1*7m+9*7m*83*7o*7u|1+1*1*7m*2*3+1*7m+8*7m*83*7o*7u|1+1*1*7m*2*3+1*7m*7+m*7m*6*7+9*7m*7+2*7m*6*7+1*7m*7+4*7m*83*7q*7u|1+1*1*7m*2*3+1*7m*7+7*7m*84*7r*7u|1+1*1*7m*2*3+1*7m*84*7r*7u|1+1*7m*7+7*7m*6*7+u*83*7o*8c|1+1*7m*7+m*7m*6*7+7*7m*7+2*7m*6*7+1*7m*7+4*83*7q*8c|1+1*7m*7+7*84*7r*8c|1+1*7m*7+s*7m*6*7+a*83*7o*8d|1+1*7m*6*7+a*7m*7+m*7m*6*7+8*7m*7+2*7m*6*7+1*7m*7+4*83*7q*8d|1+1*7m*6*7+h*7m*7+m*7m*6*7+f*7m*7+2*7m*6*7+1*7m*7+4*7m*83*7q*8d|1+1*7m*7+7*84*7r*8d|1+1*7m*6*7+d*83*7o*8e|1+1*83*7q*8e|1+1*7m*7+7*84*7r*8e|1+1*7m*6*7+6*83*7o*86|1+1*7m*6*7+i*83*7q*86|1+1*7m*6*7+j*7m*83*7q*86|1+1*7m*7+m*7m*6*7+5*7m*7+2*7m*6*7+3*7m*7+4*7m*83*7q*86|1+1*7m*7+7*84*7r*86|1+1*1*7m*2*3+1*7m*6*7+g*7m*83*7o*7v|1+1*1*7m*2*3+1*7m*83*7q*7v|1+1*1*7m*2*3+1*7m*7+7*7m*84*7r*7v|1+1*1*7m*2*3+1*7m*6*7+2a*7m|1+1*1*7m*2*3+1*7m*5*6*7+x*7m|1+1*1*7m*2*3+1*7m*6*7+5*7m*83*9s*9x|1+1*1*7m*2*3+1*7m*6*7+z*7m*83*9u*9x|1+1*1*7m*2*3+1*7m*6*7+n*7m*83*9u*9x|1+1*1*7m*2*3+1*7m*6*7+7*7m*84*9v*9x|1+1*1*7m*2*3+1*7m*6*7+5*7m*83*9s*9y|1+1*1*7m*2*3+1*7m*6*7+10*7m*83*9u*9y|1+1*1*7m*2*3+1*7m*6*7+m*7m*83*9u*9y|1+1*1*7m*2*3+1*7m*7+7*7m*84*9v*9y|1+1*1*7m*2*3+1*7m*6*7+l*7m*83*9s*9z|1+1*1*7m*2*3+1*7m*7+8*7m*83*9s*9z|1+1*1*7m*2*3+1*7m*6*7+1a*7m+11*7m*83*9u*9z|1+1*1*7m*2*3+1*7m*6*7+3*7m*7+15*7m*6*7+2*7m*7+w*7m*6*7+3*7m*7+4*7m*83*9u*9z|1+1*1*7m*2*3+1*7m*7+7*7m*84*9v*9z|1+1*1*7m*2*3+1*7m*84*9v*9z|1+1*1*7m*2*3+1*7m*83*9s*a0|1+1*1*7m*2*3+1*7m*83*9u*a0|1+1*1*7m*2*3+1*7m*7+7*7m*84*9v*a0|1+1*1*7m*2*3+1*7m*83*9s*a1|1+1*1*7m*2*3+1*7m*83*9u*a1|1+1*1*7m*2*3+1*7m*7+7*7m*84*9v*a1|1+1*1*7m*2*3+1*7m*84|1+1*1*7m*2*3+1|1+1*8i*5*6*7+g*8i|1+1*8i*5*6*7+6*8i*8v*8j*8k|1+1*8i*5*7+b*8i*3z*8q*8k|1+1*8i*3k*8l*8k|1+1*8i*5*6*7*41+y*8i*5*6*7+2*8i*8v*8j*8n|1+1*8i+12*8i*8v*8j*8n|1+1*8i+u*8i*8v*8j*8n|1+1*8i+12*8i*8v*8j*8n|2+2*8i*5*6*7*41+z*8i*5*6*7+2*8i*8v*8j*8n|1+1*8i*6*7+13*8i*8v*8j*8n|1+1*8i*6*7+u*8i*8v*8j*8n|1+1*8i*6*7+13*8i*8v*8j*8n|2+2*8i*6*7+4k*8i*3z*8q*8n|1+1*8i*6*7+54*8i*3z*8q*8n|1+1*8i*6*7+y*8i*3z*8q*8n|1+1*8i*6*7+14*8i*3z*8q*8n|1+1*8i*6*7+c*8i*3k*8l*8n|1+1*8i*5*6*7+9*8i*8v*8j*8o|1+1*8i*6*7+w*8i*8v*8q*8o|1+1*8i*6*7+g*8i*3z*8q*8o|1+1*8i*6*7+c*8i*3k*8l*8o|1+1*8i*5*6*7+c*8v*8j*90|1+1*8i*6*7+46*8v*8q*90|1+1*8i*6*7+c*3k*8l*90|1+1*8i*5*6*7+d*8v*8j*91|1+1*8i*6*7+y*8v*8q*91|1+1*8i*6*7+j*7m*6*7+18*8i*6*7+1i*8i*8v*8q*91|1+1*8i*6*7+c*3k*8l*91|1+1*7m|1+1*6x*6*7+7*6x|1+1*6x*6*7+h*6x*92*93|1+1*6x*6*7+e*6x*92*93|1+1*6x*2*h*3+1*6x*6*7+u*6x*94*93|1+1*6x*2*h*3+1*6x*6*7+p*6x*94*93|1+1*6x*2*h*3+1*6x*6*7+38*6x*94*93|1+1*6x*2*h*3+1*6x*6*7+1j*6x*94*93|1+1*6x*2*h*3+1*6x*6*7+1u*6x*94*93|1+1*6x*2*h*3+1*6x*6*7+1c*6x*94*93|2+2*6x*6*7+7*6x*95*93|1+1*6x*6*7+i*6x*92*96|1+1*6x*6*7+28*6x*94*96|1+1*6x*6*7+s*6x*94*96|1+1*6x*6*7+18*6x*94*96|1+1*6x*6*7+r*6x*94*96|1+1*6x*6*7+w*6x*94*96|1+1*6x*2*h*3+1*6x*6*7+2s*6x*94*96|1+1*6x*6*7+7*6x*95*96|1+1*6x*6*7+i*6x*92*97|1+1*6x*6*7+1k*6x*94*97|1+1*6x*2*h*3+1*6x*8h*7+9*6x*6*7+1h*6x*94*97|1+1*6x*6*7+7*6x*95*97|1+1*6x*6*7+l*6x*92*98|1+1*6x*2*h*3+1*6x*6*7+l*6x*92*98|1+1*6x*2*h*3+1*6x*6*7+y*6x*94*98|1+1*6x*2*h*3+1*6x*6*7+30*6x*94*98|1+1*6x*2*h*3+1*6x*6*7+s*6x*94*98|1+1*6x*2*h*3+1*6x*6*7+17*6x*94*98|1+1*6x*2*h*3+1*6x*6*7+2v*6x*94*98|1+1*6x*6*7+7*6x*95*98|1+1*6x*6*7+6*6x|1+1*6x*6*7+5*6x*9j*9k|1+1*6x*6*7+10*6x*9l*9k|1+1*6x*6*7+7*6x*9m*9k|1+1*6x*9j*9n|1+1*6x*6*7+w*6x*9l*9n|1+1*6x*6*7+a*6x*9l*9n|1+1*6x*6*7+a*6x*9l*9n|1+1*6x*6*7+o*6x*9l*9n|1+1*6x*6*7+z*6x*9l*9n|1+1*6x*6*7+p*bc*6*7+2*6x*6*7+4*6x*9l*9n|1+1*6x*6*7+1m*6x*9l*9n|2+2*6x*6*7+7*6x*9m*9n|1+1*6x*9j*9o|1+1*6x*6*7+1z*6x*9l*9o|1+1*6x*6*7+1g*6x*9l*9o|1+1*6x*6*7+v*6x*9l*9o|1+1*6x*6*7+7*6x*9m*9o|1+1*6x*9j*9p|1+1*6x*9l*9p|1+1*6x*9m*9p|1+1*6x*6*7+5*6x|1+1*6x*6*7+5*6x*99*9a|1+1*6x*7+s*6x*11*9b*9a|1+1*6x*2*h*3+1*6x*7+16*6x*11*9b*9a|1+1*6x*6*7+7*6x*9g*9c*9a|1+1*6x*99*9d|1+1*6x+h*6x*11*9b*9d|1+1*6x*7+19*6x*11*9b*9d|1+1*6x*7+19*6x*11*9b*9d|1+1*6x*7+q*6x*11*9b*9d|2+2*6x*6*7+7*6x*9g*9c*9d|1+1*6x*99*9e|1+1*6x*7+m*6x*11*9b*9e|1+1*6x*7+16*6x*11*9b*9e|1+1*6x*7+1p*6x*11*9b*9e|2+2*6x*6*7+7*6x*9g*9c*9e|1+1*99*9h|1+1*6x*7+27*6x*11*9b*9h|1+1*6x*7+25*6x*11*9b*9h|1+1*6x*7+t*11*9b*9h|1+1*9q*11*9b*9h|1+1*9q*6*7+3p*9q*11*9b*9h|2+2*6x*6*7+7*9g*9c*9h|1+1*9q*9g*9c*9h|4+4*9q*6*7+7*9q*9g*9c*9h|1+1*6x*6*7+a*6x*99*9f|1+1*6x*7+d*6x*6*7+c*6x*11*9b*9f|1+1*6x*7+k*6x*11*9b*9f|1+1*6x*7+t*6x*11*9b*9f|1+1*6x*7+1c*6x*11*9b*9f|1+1*6x*7+1j*6x*11*9b*9f|2+2*6x*6*7+7*6x*9g*9c*9f|1+1*6x*6*7+6*99*9i|1+1*6x*7+h*6x*6*7+d*6x*11*9b*9i|1+1*6x*7+q*11*9b*9i|1+1*6x*7+11*6x*11*9b*9i|1+1*6x*7+n*6x*11*9b*9i|1+1*6x*7+t*6x*11*9b*9i|1+1*6x*8h*7+w*6x*6*7+i*6x*11*9b*9i|1+1*6x*2*15*3*16+1*6x*6*7+4*6x*11*9b*9i|1+1*6x*2*15*3+1*6x*6*7+s*6x*11*9b*9i|1+1*6x*2*15*3+1*6x*6*7+j*6x*11*9b*9i|1+1*6x*2*15*3+1*6x*6*7+2d*6x*11*9b*9i|1+1*6x*6*7+7*9g*9c*9i|1+1*6x*6*7+7|1+1*6x|1+1*6x*6*7+k*6x*a2*a3|1+1*6x*2*h*3+1*6x*6*7+c*4*6*7+1*6x*6*7+e*6x*a4*a3|1+1*6x*2*h*3+1*6x*6*7+m*6x*a4*a3|1+1*6x*6*7+7*6x*a5*a3|1+1*6x*a2*a6|1+1*6x*6*7+o*6x*a4*a6|1+1*6x*2*h*3+1*6x*6*7+y*6x*a4*a6|1+1*6x*2*h*3+1*6x*6*7+1s*6x*a4*a6|1+1*6x*2*h*3+1*6x*6*7+1d*6x*a4*a6|1+1*6x*2*h*3+1*6x*6*7+q*6x*a4*a6|1+1*6x*2*h*3+1*6x*6*7+2v*6x*a4*a6|1+1*6x*2*h*3+1*6x*6*7+7h*6x*a4*a6|1+1*6x*6*7+7*6x*a5*a6|1+1*6x*a2*a7|1+1*6x*6*7+12*6x*a4*a7|1+1*6x*6*7+7*6x*a5*a7|1+1*6x*6*7+k*6x*a2*a8|1+1*6x*6*7+v*6x*a4*a8|1+1*6x*6*7+4*6x*a4*a8|1+1*6x*2*h*3+1*6x*6*7+2w*6x*a4*a8|1+1*6x*2*h*3+1*6x*6*7+1a*6x*a4*a8|1+1*6x*6*7+7*6x*a5*a8|1+1*6x*6*7+6*6x|1+1*6x*6*7+6*a9*ag|1+1*6x*6*7+i*ab*ag|1+1*6x*6*7+7*ac*ag|1+1*6x*6*7+6*6x*a9*aa|1+1*6x*6*7+n*6x*ab*aa|1+1*6x*6*7+7*6x*ac*aa|1+1*6x*a9*ad|1+1*6x*6*7+o*6x*ab*ad|1+1*6x*6*7+11*6x*ab*ad|1+1*6x*6*7+7*6x*ac*ad|1+1*6x*a9*ae|1+1*6x*6*7+16*6x*ab*ae|1+1*6x*6*7+r*6x*ab*ae|1+1*6x*6*7+n*6x*ab*ae|1+1*6x*6*7+s*6x*ab*ae|1+1*6x*6*7+7*6x*ac*ae|1+1*6x*a9*af|1+1*6x*ab*af|1+1*6x*ac*af|1+1*6x*6*7+s*6x|1+1*6x*6*7+f*6x*ah*ai|1+1*6x*2*h*3+1*6x*6*7+p*6x*aj*ai|1+1*6x*2*h*3+1*6x*6*7+t*6x*aj*ai|1+1*6x*2*h*3+1*6x*6*7+t*6x*aj*ai|1+1*6x*2*h*3+1*6x*6*7+x*6x*aj*ai|1+1*6x*2*h*3+1*6x*6*7+1a*9q*aj*ai|1+1*9q*2*h*3+1*9q*6*7+2a*9q*aj*ai|1+1*9q*2*h*3+1*9q*6*7+n*9q*aj*ai|1+1*9q*6*7+o*6x*6*7+1*9q*6*7+13*6x*aj*ai|2+2*6x*6*7+7*6x*ak*ai|1+1*9q*ak*ai|6+6*9q*6*7+7*9q*ak*ai|4+4*9q*7+7*9q*ak*ai|1+1*6x*6*7+d*bz*ah*al|1+1*bz*6*7+m*6x*ah*al|1+1*6x*6*7+k*6x*ah*al|2+2*6x*2*h*3+1*6x*6*7+x*6x*aj*al|1+1*6x*2*h*3+1*6x*6*7+10*6x*aj*al|3+3*6x*6*7+7*6x*ak*al|1+1*6x*6*7+d*6x*ah*am|1+1*6x*2*h*3+1*6x*6*7+1f*6x*aj*am|1+1*6x*2*h*3+1*6x*6*7+1v*6x*aj*am|1+1*6x*2*h*3+1*6x*6*7+1e*6x*aj*am|1+1*6x*2*h*3+1*6x*6*7+o*6x*8h*7+5*6x*6*7+1b*6x*aj*am|1+1*6x*2*h*3+1*6x*6*7+n*6x*8h*7+7*6x*aj*am|1+1*6x*2*h*3+1*6x*6*7+1e*6x*aj*am|1+1*6x*6*7+7*6x*ak*am|1+1*6x*ah*an|1+1*6x*aj*an|1+1*6x*ak*an|1+1*6x*6*7+6*6x|1+1*6x*6*7+6*6x*ar*as|1+1*6x*6*7+1b*6x*at*as|1+1*6x*2*h*3+1*6x*6*7+1q*6x*at*as|1+1*6x*6*7+7*6x*au*as|1+1*6x*6*7+7*6x*ar*av|1+1*6x*6*7+b*6x*ar*av|1+1*6x*6*7+c*6x*at*av|1+1*6x*6*7+b*6x*at*av|1+1*6x*6*7+c*6x*at*av|1+1*6x*6*7+m*6x*at*av|1+1*6x*6*7+f*6x*at*av|1+1*6x*6*7+m*6x*at*av|1+1*6x*6*7+b*6x*at*av|1+1*6x*6*7+a*6x*at*av|1+1*6x*6*7+b*6x*at*av|1+1*6x*6*7+d*6x*at*av|1+1*6x*6*7+b*6x*at*av|1+1*6x*6*7+d*6x*at*av|3+3*6x*6*7+7*6x*au*av|1+1*6x*6*7+5*6x*ar*aw|1+1*6x*6*7+a*6x*ar*aw|1+1*6x*6*7+2c*6x*at*aw|1+1*6x*2*h*3+1*6x*8h*7+d*6x*6*7+n*6x*at*aw|1+1*6x*6*7+2h*6x*at*aw|1+1*6x*6*7+4t*6x*at*aw|3+3*6x*6*7+7*6x*au*aw|1+1*6x*ar*ax|1+1*6x*6*7+1i*6x*at*ax|1+1*6x*6*7+2g*6x*at*ax|1+1*6x*6*7+7*6x*au*ax|1+1*6x*6*7+b*ar*b0|1+1*6x*6*7+21*at*b0|1+1*6x*6*7+7*au*b0|1+1*6x*6*7+a*ar*az|1+1*6x*2*h*3+1*6x*6*7+j*at*az|1+1*6x*6*7+1d*6x*at*az|1+1*6x*2*h*3+1*6x*6*7+28*6x*at*az|1+1*6x*2*h*3+1*6x*6*7+34*6x*at*az|1+1*6x*6*7+7*au*az|1+1*ar*ay|1+1*at*ay|1+1*au*ay|1+1*6x|1+1*4*6*7+q|1+1*4*b3+1|1+1*6x*6*7+6*6x|1+1*6x*6*7+e*6x|1+1*6x*2*h*3+1*6x*6*7+13*6x|1+1*6x*2*h*3+1*6x*6*7+37*6x|1+1*6x*2*h*3+1*6x*6*7+3d*6x|1+1*6x*2*h*3+1*6x*6*7+1w*6x|1+1*6x*2*h*3+1*6x*7+1k*6x|1+1*6x*2*h*3+1*6x*7+1v*6x|1+1*6x*2*h*3+1*6x*6*7+24*6x|1+1*6x*2*h*3+1*6x*6*7+24*6x|1+1*6x*2*h*3+1*6x*6*7+c*6x|1+1*6x*2*h*3+1*6x*6*7+34*6x|1+1*6x*2*h*3+1*6x*6*7+30*6x|1+1*6x*2*h*3+1*6x*6*7+2z*6x|1+1*6x*6*7+2a*6x|1+1*4*6*7+y|1+1*4|1+1*4*7+e*4|1+1*4*7+u*4|1+1*4*7+q*4|1+1*4*7+6*4|1+1*4*7+j*4|1+1*4*7+b*4|1+1*4*7+p*4*7*b6+1k*4|1+1*4*7+d*4|1+1*4*7+c*4|1+1*4*7+p*4|1+1*4*7+p*4|1+1*4*7+1*4|1+1*4*7+e*4|1+1*4*7+i*4|1+1*4*7+j*4|1+1*4*7+13*4|1+1*4*7+11*4|1+1*4*7+h*4|1+1*4*7+c*4|1+1*4*7+d*4|1+1*4*7+p*4|1+1*4*7+t*4|2+2*4*7+k*4|1+1*4*7+o*4|1+1*4*7+1x*4|1+1*4*7+19*4|1+1*4*7+1k*4|1+1*4*7+g*4*6*7+1*4*7+1t*4|1+1*4*7+d*4|1+1*4*7+i*4|1+1*4*7+d*4|1+1*4*7+p*4|1+1*4*7+30*4|2+2*4*7+h*4|1+1*4*7+b*4|1+1*4*7+1g*4|1+1*4*7+32*4|1+1*4*7+1p*4|1+1*4*7+1x*4|1+1*4*7+2i*4|1+1*4*7+19*4|1+1*4*7+1q*4|1+1*4*7+1f*4|1+1*6x*6*7+n*6x|1+1*6x*6*7+n*6x|1+1*6x*2*15*3*16+1*6x*6*7+14*6x|1+1*6x*2*15*3+1*6x*6*7+1a*6x|1+1*6x*2*15*3+1*6x*6*7+29*6x|1+1*6x*2*15*3+1*6x*6*7+2z*6x|1+1*6x*2*15*3+1*6x*6*7+j*6x|1+1*6x*2*15*3+1*6x*6*7+e*6x|1+1*6x*2*15*3+1*6x*6*7+m*6x|1+1*6x*2*15*3+1*6x*6*7+d*6x|1+1*6x*2*15*3+1*6x*6*7+26*6x|1+1*6x*2*15*3+1*6x*6*7+u*6x|1+1*6x*2*15*3+1*6x*6*7+g*6x|1+1*6x*2*15*3+1*6x*6*7+m*6x|1+1*8i*6*7+16|1+1*8i*6*7+15*8i|1+1*8i*6*7+t*8i|1+1*8i*6*7+2j*8i|1+1*8i*6*7+3p*bb*6*7+3*8i*6*7+a*8i|1+1*6x*6*7+2v*6x|1+1*6x*6*7+m*6x|1+1*6x*2*h*3+1*6x*6*7+25*6x|1+1*6x*2*h*3+1*6x*6*7+1m*6x|1+1*6x*2*h*3+1*6x*6*7+1z*6x|1+1*6x*2*b8*3+1*6x*6*7+e*6x|1+1*6x*2*h*3+1*6x*6*7+26*6x|1+1*6x*2*h*3+1*6x*6*7+p*6x|1+1*6x*2*b7*3+1*6x*6*7+1c*6x|1+1*6x*2*b7*3+1*6x*6*7+1g*6x|1+1*6x*2*b7*3+1*6x*6*7+1z*6x|1+1*6x*2*b7*3+1*6x*6*7+56*6x|1+1*6x*2*h*3+1*6x*6*7+4r*6x|1+1*6x*2*b8*3+1*6x*6*7+2h*6x*8h*7+3*6x|1+1*6x*2*h*3+1*6x*6*7+18*6x*8h*7+3*6x*6*7+g*6x|1+1*6x*2*b8*3+1*6x*6*7+1h*6x|1+1*6x*2*h*3+1*6x*6*7+1r*6x|1+1*6x*2*h*3+1*6x*6*7+4e*6x|1+1*6x*6*7+2u*6x|1+1*6x*6*7+8*6x|1+1*6x*2*b7*3+1*6x*8h*7+j*6x*7+ku*6x|1+1*6x*8h*7+h*6x*7+dw*6x|1+1*6x*2*b7*3+1*6x|1+1*6x*2*h*3+1*6x|1+1*6x*2*h*3+1*6x|1+1|1+1","opCount":3261,"appliedAttribsCount":10419,"maxAttribsOnSingleOp":6},"pool":{"numToAttrib":{"0":["author","a.4fz9s4pIrvcRKF5l"],"1":["align","left"],"2":["insertorder","first"],"3":["lmkr","1"],"4":["author","9832037334"],"5":["bold","true"],"6":["font-color-000000","true"],"7":["font-size-medium","true"],"8":["struct-tabledbf98256613f4159b0c8ab7d0768a51f_col29a0380222f948da9f979c715904afa7","true"],"9":["struct-tabledbf98256613f4159b0c8ab7d0768a51f_row262962e3e9ea4faca0a13a29fc5fdd10","true"],"10":["struct-tabledbf98256613f4159b0c8ab7d0768a51f_col774907ffc11d4d6fbd3e7d8f84249b15","true"],"11":["struct-tabledbf98256613f4159b0c8ab7d0768a51f_colf667739b295e4e8486a86a44eca531fb","true"],"12":["struct-tabledbf98256613f4159b0c8ab7d0768a51f_row997298bab73d4e529a592638c447a16c","true"],"13":["struct-tabledbf98256613f4159b0c8ab7d0768a51f_row8af6a604a78f4e5c8bdf74e338f93520","true"],"14":["struct-tabledbf98256613f4159b0c8ab7d0768a51f_row99c5387dfe9a4f3b9721a4820c62a1ec","true"],"15":["struct-tabledbf98256613f4159b0c8ab7d0768a51f_row70b38c24ce784cf3877541b477fa1dc6","true"],"16":["struct-tabledbf98256613f4159b0c8ab7d0768a51f_rowc05901987847471e915ccbc69795b3e9","true"],"17":["list","bullet1"],"18":["struct-table842f44d9786a45e388e9db096ed83d85_col19bdd094c228456792fe98e2176d3f1e","true"],"19":["struct-table842f44d9786a45e388e9db096ed83d85_row6221b43c0c534da8bfa67b395e975b9d","true"],"20":["struct-table842f44d9786a45e388e9db096ed83d85_col90e0d55e71b44c43a3b3bb3759607f07","true"],"21":["struct-table842f44d9786a45e388e9db096ed83d85_col5811d858f22c4043913d413060029590","true"],"22":["struct-table842f44d9786a45e388e9db096ed83d85_row51b021389da343c2ac3c7ad514a9ea15","true"],"23":["struct-table842f44d9786a45e388e9db096ed83d85_row7f1bf1e8c0b8491fb4ec002113e6f161","true"],"24":["struct-table842f44d9786a45e388e9db096ed83d85_row5b2e56d3b4264d9a9d4e5273261ff4b8","true"],"25":["font-color-ea1f43","true"],"26":["list","bullet2"],"27":["struct-table04e3e3f988df4a25b9c0aca9d81e7337_colcfb1aeaf08ed465392100804f87eff51","true"],"28":["struct-table04e3e3f988df4a25b9c0aca9d81e7337_row289cd5bbbc644ab9a16244cb503dd50c","true"],"29":["struct-table04e3e3f988df4a25b9c0aca9d81e7337_col8a85872f6cdb4dc4aa1b1540b37b4b2f","true"],"30":["struct-table04e3e3f988df4a25b9c0aca9d81e7337_colb45f5407ae714fc585ff98c7670ac7ee","true"],"31":["struct-table04e3e3f988df4a25b9c0aca9d81e7337_row8622445ceb87441893113336fa51e9fa","true"],"32":["struct-table04e3e3f988df4a25b9c0aca9d81e7337_rowbe95d057bd07490a8e1b5c528fda1431","true"],"33":["struct-table04e3e3f988df4a25b9c0aca9d81e7337_rowe58bf9456d1c4eb9a537cb1bd76a9de1","true"],"34":["struct-prop-table-col_width_percentage_16","true"],"35":["struct-tablee280add0dc014014bc08ce308076d8c0_col047d4ec9a7cc48fd9813693ae551a94f","true"],"36":["struct-tablee280add0dc014014bc08ce308076d8c0_row92b0aa5f5d1549ebb29fcead6cb66052","true"],"37":["struct-prop-table-col_width_percentage_50","true"],"38":["struct-tablee280add0dc014014bc08ce308076d8c0_col56c6f1f2317345458da45318fca6f246","true"],"39":["struct-tablee280add0dc014014bc08ce308076d8c0_col9057db2f517c446fbca357cab246bce3","true"],"40":["struct-tablee280add0dc014014bc08ce308076d8c0_row070e773017b14a36ae4d240017a16e4a","true"],"41":["list","number1"],"42":["start","1"],"43":["start","2"],"44":["start","3"],"45":["start","4"],"46":["struct-tablee280add0dc014014bc08ce308076d8c0_rowa65a727d53d0497d8c14b519dea241dd","true"],"47":["struct-tablee280add0dc014014bc08ce308076d8c0_row81de0a325fd240e0ba04e8192e32433c","true"],"48":["link-MTYxMjM0NDA5ODcyOS1odHRwczovL25hdmVlbmF1dG9tYXRpb25sYWJzLmFwcC5ib3guY29tL2ZpbGUvNzYzMjI5Mjc1NTE5","true"],"49":["struct-prop-table-col_width_percentage_14","true"],"50":["struct-tablebd6dd2e7827341cfa53c79a710b72977_colbf040a67a4ce4589bef08212994b346f","true"],"51":["struct-tablebd6dd2e7827341cfa53c79a710b72977_rowa90e587087a347bebdeba12313c1b620","true"],"52":["struct-prop-table-col_width_percentage_75","true"],"53":["struct-tablebd6dd2e7827341cfa53c79a710b72977_col1fc8c31e6ebd49f98246a2a6361dc1a8","true"],"54":["struct-prop-table-col_width_percentage_11","true"],"55":["struct-tablebd6dd2e7827341cfa53c79a710b72977_col8a3385894d874c209b63d74dab31937e","true"],"56":["struct-tablebd6dd2e7827341cfa53c79a710b72977_row56fea01c3fc34ad491ae939135cd764d","true"],"57":["struct-tablebd6dd2e7827341cfa53c79a710b72977_row1658b3a546264f059cedda7d0e9f9aaa","true"],"58":["start","5"],"59":["start","6"],"60":["start","7"],"61":["start","8"],"62":["list","number2"],"63":["struct-tablebd6dd2e7827341cfa53c79a710b72977_row90b8d90196ca44a281e090209d515b05","true"],"64":["struct-tablebd6dd2e7827341cfa53c79a710b72977_row2237b559a88a420e9649e1068d42eb34","true"],"65":["struct-tablebd6dd2e7827341cfa53c79a710b72977_rowc49cf5df75ff41e2aef875968221b76f","true"],"66":["struct-tablebd6dd2e7827341cfa53c79a710b72977_row8957fbe22c8d45299a738a50b9d26000","true"],"67":["link-MTYxMjM0NDA5ODc1My1odHRwczovL25hdmVlbmF1dG9tYXRpb25sYWJzLmFwcC5ib3guY29tL2ZpbGUvNzYzNzIzNzM3NzM4","true"],"68":["struct-tablea8f133bad672484ab69b1b0afbc42a7e_colb4ec9e3379c14360a377ededb1e10458","true"],"69":["struct-tablea8f133bad672484ab69b1b0afbc42a7e_rowa7da464c51714b5494be1645629a6c5b","true"],"70":["struct-tablea8f133bad672484ab69b1b0afbc42a7e_col63bdb150d5714adca3688bb8f04801d8","true"],"71":["struct-tablea8f133bad672484ab69b1b0afbc42a7e_col28cadeb07b144e879ac11ae59388c1e4","true"],"72":["struct-tablea8f133bad672484ab69b1b0afbc42a7e_rowcd3c837c68e548b99e6211e83939c6d3","true"],"73":["struct-tablea8f133bad672484ab69b1b0afbc42a7e_rowcdd2c722e9f34fe0890649ce509814e3","true"],"74":["struct-tablea8f133bad672484ab69b1b0afbc42a7e_rowc1e754447d614a31bb1a4a369718257a","true"],"75":["struct-tablea8f133bad672484ab69b1b0afbc42a7e_row10f388e300e54550a8bdfcc12f04c43e","true"],"76":["struct-tablea8f133bad672484ab69b1b0afbc42a7e_row5ffe78a4cb594889b69b4e0c8336392c","true"],"77":["struct-tablea8f133bad672484ab69b1b0afbc42a7e_row0845916a2fb74dc880ebcfa5315ab2a7","true"],"78":["font-color-252830","true"],"79":["struct-tablea8f133bad672484ab69b1b0afbc42a7e_row937e68ffcc5146a79a8beccb99ddfe68","true"],"80":["struct-tablea8f133bad672484ab69b1b0afbc42a7e_row45270eadfb714c65a24d8c8cca6b9b4d","true"],"81":["struct-table02c0b5fcdc684c80b938a70e3026268e_col6f025101f0aa464baac4e603ae944bfd","true"],"82":["struct-table02c0b5fcdc684c80b938a70e3026268e_row072d3cb7fcda41b58cbddc5fb1fdb93e","true"],"83":["struct-table02c0b5fcdc684c80b938a70e3026268e_col3f53cc44c10a47ee9b85ab07195bf59a","true"],"84":["struct-table02c0b5fcdc684c80b938a70e3026268e_col54f897fa4a9c49be8b6e3cc2696a51d2","true"],"85":["struct-table02c0b5fcdc684c80b938a70e3026268e_rowb6a8cf526f17464ba9246627b5f5010d","true"],"86":["struct-table02c0b5fcdc684c80b938a70e3026268e_row01f4ba0e3af74f18bbd615a4198f9c0d","true"],"87":["struct-table02c0b5fcdc684c80b938a70e3026268e_row56e5053bf77643dea9aca468ff0367fc","true"],"88":["link-MTYxMjM0NDA5ODc3Ny1odHRwczovL25hdmVlbmF1dG9tYXRpb25sYWJzLmFwcC5ib3guY29tL2ZpbGUvNzYxMDQzMjE5MzAz","true"],"89":["struct-table779471f539d5470480f8378fd36a280d_col6f286d9c5a5c47c484304f81967e2680","true"],"90":["struct-table779471f539d5470480f8378fd36a280d_row2354705783c04557b8b9e009d34bb21d","true"],"91":["struct-table779471f539d5470480f8378fd36a280d_col71ab38ed18e647b79c009f5c17d65a3a","true"],"92":["struct-table779471f539d5470480f8378fd36a280d_colbfcf9ad4cbd549f58ad80c43ccbbcaef","true"],"93":["struct-table779471f539d5470480f8378fd36a280d_row3491a502b46b4465867ba51bdfbd7014","true"],"94":["struct-table779471f539d5470480f8378fd36a280d_row9b03f3a918294d43bc7540edaf40e564","true"],"95":["struct-table779471f539d5470480f8378fd36a280d_row29a57b138f15472cbe672a3965773623","true"],"96":["link-MTYxMjM0NDA5ODc4OC1odHRwczovL25hdmVlbmF1dG9tYXRpb25sYWJzLmFwcC5ib3guY29tL2ZpbGUvNzYzMjI5Mjc1NTE5","true"],"97":["struct-table145dcb5050234519ad0a94bef7d21e98_colc281f78fc560427497ce8464bd494dad","true"],"98":["struct-table145dcb5050234519ad0a94bef7d21e98_row01df7a6488c14dd99867cd94b5bea925","true"],"99":["struct-prop-table-col_width_percentage_71","true"],"100":["struct-table145dcb5050234519ad0a94bef7d21e98_col805759ffc4cd471484a887cad06fe134","true"],"101":["struct-prop-table-col_width_percentage_15","true"],"102":["struct-table145dcb5050234519ad0a94bef7d21e98_col622d2f0f8855486dbb295b10de8bca49","true"],"103":["struct-table145dcb5050234519ad0a94bef7d21e98_rowbf033faa5ece43bfa10dd94c49b9a071","true"],"104":["struct-table145dcb5050234519ad0a94bef7d21e98_rowe3320df3119b4c7e811dd922fdc9400c","true"],"105":["struct-table145dcb5050234519ad0a94bef7d21e98_row42448ea7a83d4d938073a87824c594ad","true"],"106":["struct-table145dcb5050234519ad0a94bef7d21e98_rowf2f5c16091184a74a80080c95940b9b4","true"],"107":["struct-table145dcb5050234519ad0a94bef7d21e98_rowe2505c8c00414d65be3962fbe618abf2","true"],"108":["struct-table89ac1e6deffa4de584f1e7ba183f267d_cole7c6d883df6243b5bbce95d500aa61f5","true"],"109":["struct-table89ac1e6deffa4de584f1e7ba183f267d_rowccf134742e754f85b1958edf68f0e630","true"],"110":["struct-prop-table-col_width_percentage_51","true"],"111":["struct-table89ac1e6deffa4de584f1e7ba183f267d_colc4dfcfdb2c9b4bf0a822356c5d3cd626","true"],"112":["struct-table89ac1e6deffa4de584f1e7ba183f267d_col1cb8b8acfdad4f379ac7d13469896505","true"],"113":["struct-table89ac1e6deffa4de584f1e7ba183f267d_row7f94d5ef0c054b63b7fa4c337535fc9a","true"],"114":["struct-table89ac1e6deffa4de584f1e7ba183f267d_row469bbc1694c04c16815d8adf059fbe09","true"],"115":["struct-table89ac1e6deffa4de584f1e7ba183f267d_rowaf77bf5863f94042bfc85f7220dc7afd","true"],"116":["struct-tabled2221b6bb40843859ae700d5977f1ae9_col36fbcf3a546a48ecb40e44a59e59e00a","true"],"117":["struct-tabled2221b6bb40843859ae700d5977f1ae9_row22dc4c3287ce490f997840c931cdd5fb","true"],"118":["struct-prop-table-col_width_percentage_46","true"],"119":["struct-tabled2221b6bb40843859ae700d5977f1ae9_col0665da2357af4dcea3a16e7a359612cf","true"],"120":["struct-prop-table-col_width_percentage_21","true"],"121":["struct-tabled2221b6bb40843859ae700d5977f1ae9_col220883ac45aa4a7cbde7910cd23193ab","true"],"122":["struct-tabled2221b6bb40843859ae700d5977f1ae9_row498e8ee5ab6c4063b0198813081bdd43","true"],"123":["struct-tabled2221b6bb40843859ae700d5977f1ae9_rowdd0b5b27302c460b957d70f9bb360446","true"],"124":["struct-tabled2221b6bb40843859ae700d5977f1ae9_row8efb3ddb35a54ba9b2e24a4c97a434ca","true"],"125":["struct-table5809a7784793498fa7193ee98a921c6a_col05e19fd736cc4ed8af061927c375b3c7","true"],"126":["struct-table5809a7784793498fa7193ee98a921c6a_rowe1be6e5191934fdf90df95055cd4fc7f","true"],"127":["struct-table5809a7784793498fa7193ee98a921c6a_cole35eb27574cb44c2a8734b490d015058","true"],"128":["struct-prop-table-col_width_percentage_18","true"],"129":["struct-table5809a7784793498fa7193ee98a921c6a_colf024cb6c4b784b77b87b0a7361e3cbda","true"],"130":["struct-table5809a7784793498fa7193ee98a921c6a_row4e982b4a05da483d8c83d9a036037d55","true"],"131":["struct-prop-table-col_width_percentage_49","true"],"132":["struct-table5809a7784793498fa7193ee98a921c6a_rowd28127b404c84d5ea8a77f3e8e5fdc94","true"],"133":["struct-tabled60631491ebc43c6b84a364b67a968f1_colfb15ff9a8b3c4ff1992b0d8214b71cea","true"],"134":["struct-tabled60631491ebc43c6b84a364b67a968f1_row2b9e8287dd684a11a4a8e448896b5188","true"],"135":["struct-tabled60631491ebc43c6b84a364b67a968f1_cold4557a3ca3394d689576811dde3fec0b","true"],"136":["struct-tabled60631491ebc43c6b84a364b67a968f1_col94a6145bdb78400785a2a8187484f87b","true"],"137":["struct-tabled60631491ebc43c6b84a364b67a968f1_rowf4516b737555400da4479d630e2b420d","true"],"138":["list","indent8"],"139":["font-color-525252","true"],"140":["underline","true"],"141":["struct-table5c35c8afe06945dea5639b4077e3638d_cold008d933e3ce49628b4758a76452aad3","true"],"142":["struct-table5c35c8afe06945dea5639b4077e3638d_row6c8e5461ec544e61b3c09d10c7608dde","true"],"143":["struct-prop-table-col_width_percentage_35","true"],"144":["struct-table5c35c8afe06945dea5639b4077e3638d_col9cbc27a517ae49b5adf96a9607bfa271","true"],"145":["italic","true"],"146":["struct-prop-table-col_width_percentage_32","true"],"147":["struct-table5c35c8afe06945dea5639b4077e3638d_colfd0ee92ec80f4dc99dd04942a5b6aeb7","true"],"148":["struct-table5c35c8afe06945dea5639b4077e3638d_row62e8cc28964e47a09cc7aaa77577b769","true"],"149":["struct-table5c35c8afe06945dea5639b4077e3638d_rowe68025b7b7354fbc9fc769bbfdb6aced","true"],"150":["struct-table5c35c8afe06945dea5639b4077e3638d_row67ed0884bf1c4d6d9d3224c147b433e1","true"],"151":["struct-table4de18fec6639416ea3b349d47140dac4_col6d9929c2401e467884c3b9850fa54391","true"],"152":["struct-table4de18fec6639416ea3b349d47140dac4_row4f4d8b3fa63441e798aa5b5196fcfd18","true"],"153":["struct-table4de18fec6639416ea3b349d47140dac4_col19be8fa5d0974a88a87637107ca1384c","true"],"154":["font-size-small","true"],"155":["struct-table4de18fec6639416ea3b349d47140dac4_colf533e6ce86794ff0a77289d2a54b8a0b","true"],"156":["struct-table4de18fec6639416ea3b349d47140dac4_rowd48cb09abbdd46e297efa64e97df322d","true"],"157":["struct-table4de18fec6639416ea3b349d47140dac4_row0fd4012dee6f4c25b798f5aa3ac95e74","true"],"158":["struct-table4de18fec6639416ea3b349d47140dac4_rowc9babe6572ff44f3b71f9dacb7eb43b3","true"],"159":["struct-prop-table-col_width_percentage_26","true"],"160":["struct-tableb5d886c5a1e54729ac36321ee082c9c8_col36e286df83bb4f8587785855e37a5737","true"],"161":["struct-tableb5d886c5a1e54729ac36321ee082c9c8_row77c4c056d64944afb6372df8d457a1a5","true"],"162":["struct-prop-table-col_width_percentage_56","true"],"163":["struct-tableb5d886c5a1e54729ac36321ee082c9c8_colf02e1babcf80404f912067d0e23d9ee7","true"],"164":["struct-tableb5d886c5a1e54729ac36321ee082c9c8_cole1e6e825da8f4aacab35bff201726f81","true"],"165":["struct-tableb5d886c5a1e54729ac36321ee082c9c8_row2071cc25817742959fb7d80afadb43e7","true"],"166":["struct-tableb5d886c5a1e54729ac36321ee082c9c8_row9161b4f81777431aa8280a6727516427","true"],"167":["struct-tableb5d886c5a1e54729ac36321ee082c9c8_rowbbc9af446b4c4d8094e9ff291085a000","true"],"168":["struct-tableb5d886c5a1e54729ac36321ee082c9c8_rowb8a44d55bcb045f687177010272fd872","true"],"169":["struct-tableb5d886c5a1e54729ac36321ee082c9c8_row6368d2f2b17c44d0b10b18f156a13f78","true"],"170":["struct-tableb5d886c5a1e54729ac36321ee082c9c8_row46784e2e5d6c48b2bbd82408cdefed98","true"],"171":["align","center"],"172":["struct-tableb76f1c054a12457599d6745b36b1cd30_colb82b3deb419548eeb027231179e32207","true"],"173":["struct-tableb76f1c054a12457599d6745b36b1cd30_row1441c5c7314c4a9f998cb82e382a5e2f","true"],"174":["struct-prop-table-col_width_percentage_25","true"],"175":["struct-tableb76f1c054a12457599d6745b36b1cd30_col74f92b95e78745c1b93cfe337580676d","true"],"176":["struct-prop-table-col_width_percentage_41","true"],"177":["struct-tableb76f1c054a12457599d6745b36b1cd30_col5c7c472bba1641aabffb725868b92b44","true"],"178":["struct-prop-table-col_width_percentage_13","true"],"179":["struct-tableb76f1c054a12457599d6745b36b1cd30_col4e6d460c5c86456c9f62a541c41b7609","true"],"180":["struct-tableb76f1c054a12457599d6745b36b1cd30_rowf375eba4eb8e4235941efe0ca4dbcd40","true"],"181":["struct-tableb76f1c054a12457599d6745b36b1cd30_rowa638f2efae4c4073b743eedc009bbd50","true"],"182":["struct-tableb76f1c054a12457599d6745b36b1cd30_row9adbb05194d549a2b5bca4a71aaa4503","true"],"183":["struct-tableb76f1c054a12457599d6745b36b1cd30_row15ed4eac68af4d2797530f3869681f49","true"],"184":["struct-tableb76f1c054a12457599d6745b36b1cd30_row6127a8eea0f140539651feb8f4db554d","true"],"185":["struct-tableb76f1c054a12457599d6745b36b1cd30_row9f8322c678594cef95bb46bae3d2b79f","true"],"186":["struct-tableb76f1c054a12457599d6745b36b1cd30_rowa58810d4a94d42a497ccec31702093d7","true"],"187":["struct-tableb76f1c054a12457599d6745b36b1cd30_row86ef00479c1d4360a6682d7ce8946d47","true"],"188":["struct-tableb76f1c054a12457599d6745b36b1cd30_rowb5fd201a04e540689f05f10a716b6f08","true"],"189":["struct-tableb76f1c054a12457599d6745b36b1cd30_row108ed00fe8d44625ba44f47d127f6e5c","true"],"190":["struct-tableb76f1c054a12457599d6745b36b1cd30_row747f44604eab4348851394fad0f4c51a","true"],"191":["struct-tableb76f1c054a12457599d6745b36b1cd30_row45d32e2689ff487fac48a0f2578df09b","true"],"192":["struct-tableb76f1c054a12457599d6745b36b1cd30_rowa9020c51fe784fa6b95d9c116f524648","true"],"193":["struct-tableb76f1c054a12457599d6745b36b1cd30_row552fbb3467474eb0abaa285471ce1d40","true"],"194":["struct-tableb76f1c054a12457599d6745b36b1cd30_rowa34cfe553d4d46f290d49fdd5159376a","true"],"195":["struct-tableb76f1c054a12457599d6745b36b1cd30_row18b71fcec3e24711807fb8d9ff7bbef9","true"],"196":["struct-tableb76f1c054a12457599d6745b36b1cd30_row1193698ba9c64c5d8c4e0fe59b23fa98","true"],"197":["struct-tablef99391b46fc24768a5e255cd35a91a45_cole1e7cc97b0ce467f82903bd36ff712a9","true"],"198":["struct-tablef99391b46fc24768a5e255cd35a91a45_row86b852e5df8f47a29b7a7cddb1282e40","true"],"199":["struct-tablef99391b46fc24768a5e255cd35a91a45_col04f448144e93445793fe4901bffcf467","true"],"200":["struct-tablef99391b46fc24768a5e255cd35a91a45_col63c4c8cd62d54c8986eccfbe5dc82844","true"],"201":["struct-tablef99391b46fc24768a5e255cd35a91a45_col3fa0ff99741a4d119eb75ad7ce2d6951","true"],"202":["struct-tablef99391b46fc24768a5e255cd35a91a45_col00316b9b04044798bb2de49a9923f88c","true"],"203":["struct-tablef99391b46fc24768a5e255cd35a91a45_rowd54eb182e9ad4770801a141a4f5adc69","true"],"204":["struct-tablef99391b46fc24768a5e255cd35a91a45_row095adc2433d34facb8ad1e99d3a890f3","true"],"205":["struct-tablef99391b46fc24768a5e255cd35a91a45_row5c511a7d00254fb59cfe7a7220831810","true"],"206":["struct-tablef99391b46fc24768a5e255cd35a91a45_row162f5aaea7c749afa6d5c4c41061cb3a","true"],"207":["struct-tablef99391b46fc24768a5e255cd35a91a45_row5ffb6092663646dbb3141fd7ec1f6d6e","true"],"208":["struct-tablea091d544bb3e499ea199dd99083109fb_cole7dd1b78d82b49cf8e8684026004a9b8","true"],"209":["struct-tablea091d544bb3e499ea199dd99083109fb_row4be39763dfea4e69a460ad8774de5d1c","true"],"210":["struct-tablea091d544bb3e499ea199dd99083109fb_colf46456b591684a05920d77dcb12364c1","true"],"211":["struct-tablea091d544bb3e499ea199dd99083109fb_col189cbafade7b4a008f620705a17ef575","true"],"212":["struct-table071d5697d0e64c9587b74d03daa68326_col11bab0182c394fe099736595c6bb2da9","true"],"213":["struct-table071d5697d0e64c9587b74d03daa68326_row9ba6cbd5ba044ee98dcd5c93a51a1646","true"],"214":["struct-table071d5697d0e64c9587b74d03daa68326_col66c3e735763d4211a34f0c6f0f7c83d1","true"],"215":["struct-table071d5697d0e64c9587b74d03daa68326_colf175408db87345e5808f1849d783d896","true"],"216":["struct-table071d5697d0e64c9587b74d03daa68326_row1d73a58cb99a4f33b0a964add2d764b7","true"],"217":["struct-tabled478a145a9c0425c8317b291e4671502_col63feef93db5d4fbbb40ab12f3139842f","true"],"218":["struct-tabled478a145a9c0425c8317b291e4671502_row093ab36b9824431ea813e7a96c0bc235","true"],"219":["struct-tabled478a145a9c0425c8317b291e4671502_cola4068486f65045c99bbf7f6b20fd9c5d","true"],"220":["struct-tabled478a145a9c0425c8317b291e4671502_cola89c914143184d60a994beb27f0235fe","true"],"221":["struct-tabled478a145a9c0425c8317b291e4671502_row36e112a364774624b803ba29c3d2fdbc","true"],"222":["struct-tabled478a145a9c0425c8317b291e4671502_rowc5df64e6c36043a3becdc47705a434b4","true"],"223":["struct-tabled478a145a9c0425c8317b291e4671502_rowae372b0e47f34966898099e3d40b87ab","true"],"224":["struct-table11dff8ab69f84dc6a2e8e4700a647621_col330bb03220914ad483a570eadd01b5cd","true"],"225":["struct-table11dff8ab69f84dc6a2e8e4700a647621_row7f890388907e4d5c8612ca090ffff9a1","true"],"226":["struct-table11dff8ab69f84dc6a2e8e4700a647621_colfa65fbb542eb4bb8b53a9e6db651f43c","true"],"227":["struct-table11dff8ab69f84dc6a2e8e4700a647621_cold8b2cfe938b44d8d9949236265ebce97","true"],"228":["struct-table11dff8ab69f84dc6a2e8e4700a647621_row43b4ee4301644f66b4a2fc7fd02842b5","true"],"229":["struct-table11dff8ab69f84dc6a2e8e4700a647621_row11942f9eb15f48e58f0907c6369fc046","true"],"230":["struct-table11dff8ab69f84dc6a2e8e4700a647621_row80c50bb765bc4af4a382a3dd6d73e0de","true"],"231":["struct-table11dff8ab69f84dc6a2e8e4700a647621_row2d6a0e9df69e486aab0d292dda422ca9","true"],"232":["struct-tablee371b4ced1a24538830105c06f03e561_cola065469b357342deb1c7b5feff1aaace","true"],"233":["struct-tablee371b4ced1a24538830105c06f03e561_row9e47d2bbd7bc48fc8d5887279585f686","true"],"234":["struct-tablee371b4ced1a24538830105c06f03e561_col348cdc1a10514aab8ba0fe780883083f","true"],"235":["struct-tablee371b4ced1a24538830105c06f03e561_colf615a0db76674fe0a9769e36e6a078da","true"],"236":["struct-tablee371b4ced1a24538830105c06f03e561_row3f5af62f95bb4d2e994802d7d49a4aba","true"],"237":["struct-tablee371b4ced1a24538830105c06f03e561_row0e6a697f8fbd45b98bbfb2848ed7dbbe","true"],"238":["struct-tablee371b4ced1a24538830105c06f03e561_rowa7c396bee9824cdbb4fb47e667479e5d","true"],"239":["struct-table9685f446fab74f4ca1fbef1dd37cf84e_col6bfab0c2ef0549eea59bab384da78f70","true"],"240":["struct-table9685f446fab74f4ca1fbef1dd37cf84e_rowc32a7518d9a644059fd3a8483ef8d33a","true"],"241":["struct-table9685f446fab74f4ca1fbef1dd37cf84e_cold99e59f917244b389e3f55bbb663d49d","true"],"242":["struct-table9685f446fab74f4ca1fbef1dd37cf84e_col0abf82ea1d3b4c2ebd035e627361aeb5","true"],"243":["struct-table9685f446fab74f4ca1fbef1dd37cf84e_row18950f9349464468ae56c9f65beabba4","true"],"244":["struct-table9685f446fab74f4ca1fbef1dd37cf84e_rowe0bca39d6e0a46ac8ebf480fcfea368c","true"],"245":["struct-table9685f446fab74f4ca1fbef1dd37cf84e_rowecf13d9c3d8144829568fb17a9b41cea","true"],"246":["struct-table9685f446fab74f4ca1fbef1dd37cf84e_rowb69a632b155d41d7a9b36846bb0e50e9","true"],"247":["struct-table9685f446fab74f4ca1fbef1dd37cf84e_rowf22404f80d3a4b8f929fd01e3f510050","true"],"248":["removed","true"],"249":["author","14678150293"],"250":["struct-tablea9767ab0ae4947919fa4f4a6a108a340_col6adca4c1e1454d368a351dc5e81aad21","true"],"251":["struct-tablea9767ab0ae4947919fa4f4a6a108a340_row290f0cc4789f442a9084b4bbd1d8bf64","true"],"252":["struct-tablea9767ab0ae4947919fa4f4a6a108a340_cold0af17fd96ce49b29c16663d66fb23ac","true"],"253":["struct-tablea9767ab0ae4947919fa4f4a6a108a340_col40f7b40e7f9e4d77a41034b730691e97","true"],"254":["struct-tablea9767ab0ae4947919fa4f4a6a108a340_row4fbe1008cec3474da3eae1979ed1075a","true"],"255":["struct-tablea9767ab0ae4947919fa4f4a6a108a340_row074214d4b0dc4c449f1940a36b5fd287","true"],"256":["struct-tablea9767ab0ae4947919fa4f4a6a108a340_row81f9c1c561c047078b2d051695bf4bc1","true"],"257":["struct-tablea9767ab0ae4947919fa4f4a6a108a340_row76620454b1ff4628b0105f22353d698c","true"],"258":["struct-table30235a8a0dac4efdb9db0051ff9fd22d_col179bcfc925d2429f9457072173165a71","true"],"259":["struct-table30235a8a0dac4efdb9db0051ff9fd22d_row4e209c91ee044fefac3da842a36543fd","true"],"260":["struct-table30235a8a0dac4efdb9db0051ff9fd22d_cold010ec42bf80427fad481f4ab5170167","true"],"261":["struct-table30235a8a0dac4efdb9db0051ff9fd22d_col2399a2d3e3ab4cee8e4991d518898c98","true"],"262":["struct-table30235a8a0dac4efdb9db0051ff9fd22d_row0d7aeab45ed5437ea835f8577f64e75f","true"],"263":["struct-table30235a8a0dac4efdb9db0051ff9fd22d_rowf192745f02674334833061a0ec59d52f","true"],"264":["struct-table30235a8a0dac4efdb9db0051ff9fd22d_row2825f91ae0b64b95840d6c00b01483c6","true"],"265":["struct-table43b89bbd835140a88c8f1aa8a1f8ac43_colfae8fded17ea4b12aeb210b74685ae1e","true"],"266":["struct-table43b89bbd835140a88c8f1aa8a1f8ac43_rowdd222bcdfb3942829966583307bd134f","true"],"267":["struct-table43b89bbd835140a88c8f1aa8a1f8ac43_cole051953a18c8472fa82ac3bf712814e8","true"],"268":["struct-table43b89bbd835140a88c8f1aa8a1f8ac43_col9f97f847806c42cf8e5a06323297db00","true"],"269":["struct-table43b89bbd835140a88c8f1aa8a1f8ac43_rowb7eeaf6c1ebe46e7a79e77231310c0eb","true"],"270":["struct-table43b89bbd835140a88c8f1aa8a1f8ac43_row1955b1d156c44ae9a2b6137536c14056","true"],"271":["struct-table43b89bbd835140a88c8f1aa8a1f8ac43_rowa80a882967a54f729a6d63230a30f61a","true"],"272":["struct-table30235a8a0dac4efdb9db0051ff9fd22d_rowc6715fbdef3f446596698f4b08e96156","true"],"273":["author","14737610926"],"274":["author","14680240345"],"275":["link-MTYxMjQwMDM2OTA1My1odHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vc2lnbnVwL3YyL3dlYmNyZWF0ZWFjY291bnQ/aGw9ZW4mZmxvd05hbWU9R2xpZldlYlNpZ25JbiZmbG93RW50cnk9U2lnblVwJTIyOw==","true"],"276":["struct-table8173bcc45f784fcfb5be19c28a41f782_col898183f083fe47418da0efc37288bb45","true"],"277":["struct-table8173bcc45f784fcfb5be19c28a41f782_row3905f6722268416f80900fbdfc210069","true"],"278":["struct-table8173bcc45f784fcfb5be19c28a41f782_col6ec763e4347247c38ca1f5107a642d17","true"],"279":["struct-table8173bcc45f784fcfb5be19c28a41f782_col6543bde8cdf04e87a22fd6e8178b0c1b","true"],"280":["struct-table8173bcc45f784fcfb5be19c28a41f782_rowf90e38b7a8af4504943edc67d0caf6ca","true"],"281":["struct-table8173bcc45f784fcfb5be19c28a41f782_row5f3d0098f13940d2b36a1eb2be624f20","true"],"282":["struct-table8173bcc45f784fcfb5be19c28a41f782_row14a0a8b291e140ee928e97478a2f9b45","true"],"283":["struct-table8173bcc45f784fcfb5be19c28a41f782_row66fd262f216345d981c38a8874872581","true"],"284":["struct-table6cbe5977646346c38e910a2202de34de_cold99c87663ced4663805dcf0d93a03d05","true"],"285":["struct-table6cbe5977646346c38e910a2202de34de_row707ad9761d334103aa0fa65f6eaa2411","true"],"286":["struct-table6cbe5977646346c38e910a2202de34de_col02adca6bc3aa414fb0c1546075b8a4f0","true"],"287":["struct-table6cbe5977646346c38e910a2202de34de_colfa2bed7bc39042cbbb2a6da5f373eeae","true"],"288":["struct-table6cbe5977646346c38e910a2202de34de_rowc95302ea989845db97536e806a787075","true"],"289":["struct-table6cbe5977646346c38e910a2202de34de_rowaa04befe589d474caa2925fd7c09f02c","true"],"290":["struct-prop-table-col_width_percentage_13",""],"291":["struct-prop-table-col_width_percentage_33","true"],"292":["struct-prop-table-col_width_percentage_34","true"],"293":["struct-table8173bcc45f784fcfb5be19c28a41f782_row34c6f73601974789b83685f85ebfc957","true"],"294":["struct-table8173bcc45f784fcfb5be19c28a41f782_row647f6a38e5a14ab9ac77c9c286aa45d9","true"],"295":["struct-table07db817853654f4480dd5f30d1b5f3a3_col1b1edfba25514c1fbd3741a797a67692","true"],"296":["struct-table07db817853654f4480dd5f30d1b5f3a3_row66b1ea5ba381406897585284cc110274","true"],"297":["struct-table07db817853654f4480dd5f30d1b5f3a3_col5feb5c32ca394baea1dd527b03aa6b83","true"],"298":["struct-table07db817853654f4480dd5f30d1b5f3a3_colded027bed111408d9bc640502ae4dffa","true"],"299":["struct-table07db817853654f4480dd5f30d1b5f3a3_row05776a193b8546a0bffb568dc5f19e93","true"],"300":["struct-table8173bcc45f784fcfb5be19c28a41f782_row0c3b1f6ddd1f42a3afd0fa4e812061dc","true"],"301":["struct-table8173bcc45f784fcfb5be19c28a41f782_row46610ba138a74db4b55bcdfc6f5ada54","true"],"302":["struct-table8173bcc45f784fcfb5be19c28a41f782_rowe9eacd7f195d4fd9b2c9249b17ae24dd","true"],"303":["struct-tablea9767ab0ae4947919fa4f4a6a108a340_row00fdc4a68d0042d1b377980e3b266427","true"],"304":["font-color-000000",""],"305":["font-color-9f3fed","true"],"306":["author","14681137927"],"307":["struct-tabled7ed95bc6b2c4efc90fcdb2b4f7d8f94_cold57179dd894b4d28b597ab94fc1b1bd0","true"],"308":["struct-tabled7ed95bc6b2c4efc90fcdb2b4f7d8f94_rowafa03050db41423d8c07c6935ec393fb","true"],"309":["struct-tabled7ed95bc6b2c4efc90fcdb2b4f7d8f94_col6dbde9c8a5cf47f7a84497524ace0fdb","true"],"310":["struct-tabled7ed95bc6b2c4efc90fcdb2b4f7d8f94_col194c44b8cb15493f98ba7062367a0c73","true"],"311":["struct-tabled7ed95bc6b2c4efc90fcdb2b4f7d8f94_row9892461c37fd48598c355c014f23c3da","true"],"312":["struct-tabled7ed95bc6b2c4efc90fcdb2b4f7d8f94_row1d9f2f2d64d747afb9ab9403f073c644","true"],"313":["struct-tabled7ed95bc6b2c4efc90fcdb2b4f7d8f94_row50f5364c184941b6b6b164f74e272cef","true"],"314":["struct-tabled7ed95bc6b2c4efc90fcdb2b4f7d8f94_cola3472695552d46e5bccf59ed1302e25a","true"],"315":["struct-prop-table-col_width_percentage_25",""],"316":["struct-prop-table-col_width_percentage_38","true"],"317":["struct-prop-table-col_width_percentage_20",""],"318":["struct-prop-table-col_width_percentage_41",""],"319":["struct-prop-table-col_width_percentage_47","true"],"320":["struct-prop-table-col_width_percentage_38",""],"321":["struct-prop-table-col_width_percentage_32",""],"322":["struct-prop-table-col_width_percentage_17",""],"323":["struct-prop-table-col_width_percentage_21",""],"324":["struct-tabled7ed95bc6b2c4efc90fcdb2b4f7d8f94_row0f27535aa89448ef9697cd1dcd4f1778","true"],"325":["struct-tabled7ed95bc6b2c4efc90fcdb2b4f7d8f94_row12c638c6940d4dea9c50e91ec85c73c9","true"],"326":["struct-tablec12daf21e35a4892862da9c29f78cd98_col1bd04cacde9f46c5b373ac6d317f544e","true"],"327":["struct-tablec12daf21e35a4892862da9c29f78cd98_rowc7f6680e2da94321816e59ef9d2ccca2","true"],"328":["struct-tablec12daf21e35a4892862da9c29f78cd98_col8e4b2cc54d1c42e69865eede6fe69638","true"],"329":["struct-tablec12daf21e35a4892862da9c29f78cd98_col19893d9fcbf143d7a36de242973c774b","true"],"330":["struct-tablec12daf21e35a4892862da9c29f78cd98_row8b32ad5b05834382ba4622a58a264de1","true"],"331":["struct-tablec12daf21e35a4892862da9c29f78cd98_rowd7bddc40d4c942abbd706912a6013fd8","true"],"332":["struct-tablec12daf21e35a4892862da9c29f78cd98_rowfecca63c133f42ff9ed926fbd35144ac","true"],"333":["struct-table88f75357e03d40b69d5bef65a64e9d1d_col75405d1acd28462eb5d74e92371ff529","true"],"334":["struct-table88f75357e03d40b69d5bef65a64e9d1d_row9b4cea07d6894dd180e3068af9d45b31","true"],"335":["struct-table88f75357e03d40b69d5bef65a64e9d1d_col2d1d88b783f04f8890b374927731381b","true"],"336":["struct-table88f75357e03d40b69d5bef65a64e9d1d_cold453795fe4b843a5a4bd6227a7fe290f","true"],"337":["struct-table88f75357e03d40b69d5bef65a64e9d1d_rowa01c1f5a1e4d4b4aa1684ccf293a0a6b","true"],"338":["struct-table88f75357e03d40b69d5bef65a64e9d1d_row2ace2a5aca7245cc8dfcffac42c6b626","true"],"339":["struct-table88f75357e03d40b69d5bef65a64e9d1d_rowb46d8df3c60449a1b8031190de7d4731","true"],"340":["struct-prop-table-col_width_percentage_17","true"],"341":["struct-table88f75357e03d40b69d5bef65a64e9d1d_row6cfa9557f0764f58ae6677276ee77fa8","true"],"342":["struct-table88f75357e03d40b69d5bef65a64e9d1d_rowc9db9456c1d048ed8fd50aebdc012f91","true"],"343":["struct-tablec62a8e4a6de44b1bbe8621da8f8ab03c_col379e27fb1c464e92839f017759803ae0","true"],"344":["struct-tablec62a8e4a6de44b1bbe8621da8f8ab03c_rowea0dab83aaab47d895fdc232dcc93786","true"],"345":["struct-tablec62a8e4a6de44b1bbe8621da8f8ab03c_coldd4a7420cc194880b6ec67597b36e351","true"],"346":["struct-tablec62a8e4a6de44b1bbe8621da8f8ab03c_col91dc65db308b4c0b8bc23e435b7028f4","true"],"347":["struct-tablec62a8e4a6de44b1bbe8621da8f8ab03c_rowb48ab1640b7b493e9fd52586e0bc60ec","true"],"348":["struct-tablec62a8e4a6de44b1bbe8621da8f8ab03c_rowfe19133cd53644039525b4ce563f341f","true"],"349":["struct-tablec62a8e4a6de44b1bbe8621da8f8ab03c_row81f4d8f0a39c439daac07a7947fa0cfb","true"],"350":["author","14674322720"],"351":["link-MTYxMjkyODc5NDMyNS1odHRwczovL3d3dy5hbWF6b24uaW4vJTIyOw==","true"],"352":["struct-tablecc3becf57d0b4e4fb52bbfa599fa9da9_col9674b57032514f3b9e3e909072f19f9e","true"],"353":["struct-tablecc3becf57d0b4e4fb52bbfa599fa9da9_row0b666f53e5014226a8d30a2bad439943","true"],"354":["struct-tablecc3becf57d0b4e4fb52bbfa599fa9da9_colcebe106471e14b248a0f104b6c755aa8","true"],"355":["struct-tablecc3becf57d0b4e4fb52bbfa599fa9da9_col2eeee0858e5a4d81b363bec2cb0b1452","true"],"356":["struct-tablecc3becf57d0b4e4fb52bbfa599fa9da9_rowe76d53be51e5461ab1c65ffc563a9e26","true"],"357":["struct-tablecc3becf57d0b4e4fb52bbfa599fa9da9_rowd36e19582786482cbfe26eb4365a4103","true"],"358":["struct-tablecc3becf57d0b4e4fb52bbfa599fa9da9_row233264288e864fb4ad976aba39e27b42","true"],"359":["struct-tablecc3becf57d0b4e4fb52bbfa599fa9da9_rowf3c405ff95aa4ffb823bbd680f9990f3","true"],"360":["struct-tablecc3becf57d0b4e4fb52bbfa599fa9da9_rowe817837e96374b8a937e2d1d136a834b","true"],"361":["struct-tablecc3becf57d0b4e4fb52bbfa599fa9da9_row5bbb4928eb0d4c9382632ce9e98acbc9","true"],"362":["struct-table395d7fc768d4408cb1a2687ad28da631_colf561fc1e32dc417fb688e8b3f9ebf9fb","true"],"363":["struct-table395d7fc768d4408cb1a2687ad28da631_row5d039e2024cc413ba709145e487a4e1a","true"],"364":["struct-table395d7fc768d4408cb1a2687ad28da631_col477cdf02983240ac90676213dd642c9c","true"],"365":["struct-table395d7fc768d4408cb1a2687ad28da631_cold6ceeb8aed2f43359b68f691f8156b30","true"],"366":["struct-table395d7fc768d4408cb1a2687ad28da631_row3e7b79b360dc4191810d8374362f5139","true"],"367":["struct-table395d7fc768d4408cb1a2687ad28da631_row07919863865c4660a702294b4207fcdc","true"],"368":["struct-table395d7fc768d4408cb1a2687ad28da631_row168858e60349428fb60a459b3c57f2b7","true"],"369":["struct-tableb0f7bf93f5d04177abde42c4f3f09cc3_col2970ca0249e3466db6974e80bd069ff3","true"],"370":["struct-tableb0f7bf93f5d04177abde42c4f3f09cc3_row2998ea645c1c4d15a791368309067385","true"],"371":["struct-tableb0f7bf93f5d04177abde42c4f3f09cc3_col68cfe4576b6244f5a47fd56e0cb2f739","true"],"372":["struct-tableb0f7bf93f5d04177abde42c4f3f09cc3_cole12f13a4f3e04e6bbdf391f1985de719","true"],"373":["struct-tableb0f7bf93f5d04177abde42c4f3f09cc3_rowa89705f71ce8417398277ae2a2b3ca3b","true"],"374":["struct-tableb0f7bf93f5d04177abde42c4f3f09cc3_row9ba3f87a4f844f24a8effb80316d15ab","true"],"375":["struct-tableb0f7bf93f5d04177abde42c4f3f09cc3_rowa4f887e0edfd4c06b5991f29671458c3","true"],"376":["struct-tableb0f7bf93f5d04177abde42c4f3f09cc3_row82aa87eb118b41e4a09c00770e414e2b","true"],"377":["struct-table08da3db533dc4d5594d7dbfddb3fc536_col375bced9c30a43d2b5c0bdf2b8ef65a7","true"],"378":["struct-table08da3db533dc4d5594d7dbfddb3fc536_row685cc2de45af4461a78171dbe19928e8","true"],"379":["struct-table08da3db533dc4d5594d7dbfddb3fc536_col42b1120aa3d94c9c8e5c0aaff4dcc6f0","true"],"380":["struct-table08da3db533dc4d5594d7dbfddb3fc536_colfc896f556a0e4e668e18e7799aeb6249","true"],"381":["struct-table08da3db533dc4d5594d7dbfddb3fc536_roweb94751dea8e44b793930a9f6e201c99","true"],"382":["struct-table08da3db533dc4d5594d7dbfddb3fc536_row401ac9ad306343809aba617a1a01a72e","true"],"383":["struct-table08da3db533dc4d5594d7dbfddb3fc536_row118df28999ca479dbd2481558ad323a9","true"],"384":["author","14678198954"],"385":["struct-tablea9767ab0ae4947919fa4f4a6a108a340_rowa94bc9b5318e41f088a3cf6cba909c94","true"],"386":["author","14733772863"],"387":["struct-table17bce5dbdb4c48c0971e14b826e24b0b_colc2b6beffab2d43558d92b51efd05e770","true"],"388":["struct-table17bce5dbdb4c48c0971e14b826e24b0b_rowb79701ba23cc41d28537c15f169c8e97","true"],"389":["struct-table17bce5dbdb4c48c0971e14b826e24b0b_col1572daa11cee4d2da12278ed2512eddd","true"],"390":["struct-table17bce5dbdb4c48c0971e14b826e24b0b_colc6558bfee04e42e2a0199b3dc05d66fd","true"],"391":["struct-table17bce5dbdb4c48c0971e14b826e24b0b_rowf4585fc581e1419d845d1ec9fad743e8","true"],"392":["struct-table17bce5dbdb4c48c0971e14b826e24b0b_row9451b7fa625e471e8a94d1bef1d806d4","true"],"393":["struct-table17bce5dbdb4c48c0971e14b826e24b0b_rowbed7e1b4a0f14ff7a2ef21f96bcb784f","true"],"394":["struct-table17bce5dbdb4c48c0971e14b826e24b0b_row0dd667a945c6468aa8d22f5a78020eb0","true"],"395":["struct-table17bce5dbdb4c48c0971e14b826e24b0b_rowde6a2881f32946c88173cc3ce2462767","true"],"396":["struct-table17bce5dbdb4c48c0971e14b826e24b0b_rowa7e22a25862b49a39f44d91b226d656f","true"],"397":["image-1a5396828f63431f932801fdd04da531-JTdCJTIycGxhY2Vob2xkZXJUeXBlJTIyJTNBJTIycHJvZ3Jlc3MlMjIlMkMlMjJmaWxlTmFtZSUyMiUzQSUyMkRFY19QT00ucG5nJTIyJTJDJTIyZmlsZVNpemUlMjIlM0E3NzM5OTQlMkMlMjJ1cGxvYWRlclVzZXJJZCUyMiUzQSUyMjk4MzIwMzczMzQlMjIlN0Q=","true"],"398":["image-1a5396828f63431f932801fdd04da531-JTdCJTIycGxhY2Vob2xkZXJUeXBlJTIyJTNBJTIycHJvZ3Jlc3MlMjIlMkMlMjJmaWxlTmFtZSUyMiUzQSUyMkRFY19QT00ucG5nJTIyJTJDJTIyZmlsZVNpemUlMjIlM0E3NzM5OTQlMkMlMjJ1cGxvYWRlclVzZXJJZCUyMiUzQSUyMjk4MzIwMzczMzQlMjIlN0Q=",""],"399":["image-2e212f2ab32240f9bb90be58a9d4adcf-JTdCJTIyYm94U2hhcmVkTGluayUyMiUzQSUyMmh0dHBzJTNBJTJGJTJGbmF2ZWVuYXV0b21hdGlvbmxhYnMuYm94LmNvbSUyRnMlMkZ3MTY1emMyb3V2ZG5yaXZpbTRtOWl5YjBjb2l2bGdhcCUyMiUyQyUyMmJveEZpbGVJZCUyMiUzQSUyMjc4MDI1NzczMzk4MiUyMiUyQyUyMmZpbGVOYW1lJTIyJTNBJTIyREVjX1BPTS5wbmclMjIlN0Q=","true"],"400":["author","10786617004"],"401":["struct-table30235a8a0dac4efdb9db0051ff9fd22d_rowe71d3415285545089b2eecfe3ae84c34","true"],"402":["link-MTYxNTM1OTU5MjA3Ny1odHRwczovL2dpdGh1Yi5jb20vbmF2ZWVuYW5pbWF0aW9uMjAvRGVjMjAyMEphdmFDb2RlLmdpdA==","true"],"403":["list","indent1"],"404":["list","indent2"],"405":["author","14697573979"],"406":["author","14680925453"],"407":["author","14674956271"],"408":["author","14678990236"],"409":["author","14682839103"],"410":["author","14689243297"],"411":["author","14681574357"],"412":["author","14680067505"],"413":["struct-prop-table-col_width_percentage_75",""],"414":["struct-prop-table-col_width_percentage_87","true"],"415":["struct-prop-table-col_width_percentage_11",""],"416":["struct-prop-table-col_width_percentage_14",""],"417":["struct-tablebd6dd2e7827341cfa53c79a710b72977_rowf2c332b19c2e4a14a42992c48183bded","true"],"418":["struct-tablebd6dd2e7827341cfa53c79a710b72977_rowea5097ed250e4676813ef5702740adda","true"],"419":["struct-tablebd6dd2e7827341cfa53c79a710b72977_coled6d454b89764c6ca245895dbe1ec88d","true"],"420":["struct-prop-table-col_width_percentage_65","true"],"421":["struct-prop-table-col_width_percentage_87",""],"422":["struct-prop-table-col_width_percentage_10","true"],"423":["author","14678875922"],"424":["author","14735372304"],"425":["struct-prop-table-col_width_percentage_54","true"],"426":["struct-prop-table-col_width_percentage_55",""],"427":["struct-prop-table-col_width_percentage_65",""],"428":["struct-prop-table-col_width_percentage_10",""],"429":["struct-prop-table-col_width_percentage_54",""],"430":["struct-prop-table-col_width_percentage_62","true"],"431":["author","14677931769"],"432":["struct-prop-table-col_width_percentage_42","true"],"433":["struct-prop-table-col_width_percentage_50",""],"434":["struct-prop-table-col_width_percentage_43",""],"435":["struct-prop-table-col_width_percentage_16",""],"436":["author","14711604389"],"437":["author","14678673322"]},"nextNum":438},"chatHead":-1,"publicStatus":false,"passwordHash":null,"savedRevisions":[]}